{"version":3,"file":"src_app_features_regions_region-form_region-form_component_ts.js","mappings":"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","sources":["./src/app/core/services/toast.service.ts","./src/app/features/regions/region-form/region-form.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  duration?: number;\r\n  dismissible?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  private toastsSubject = new BehaviorSubject<Toast[]>([]);\r\n  public toasts$ = this.toastsSubject.asObservable();\r\n\r\n  private showToast(type: Toast['type'], title: string, message: string, duration: number = 3000, dismissible: boolean = true): void {\r\n    const toast: Toast = {\r\n      id: this.generateId(),\r\n      type,\r\n      title,\r\n      message,\r\n      duration,\r\n      dismissible\r\n    };\r\n\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next([...currentToasts, toast]);\r\n\r\n    // Auto remove toast after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        this.removeToast(toast.id);\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  success(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('success', title, message, duration, dismissible);\r\n  }\r\n\r\n  error(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('error', title, message, duration, dismissible);\r\n  }\r\n\r\n  warning(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('warning', title, message, duration, dismissible);\r\n  }\r\n\r\n  info(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('info', title, message, duration, dismissible);\r\n  }\r\n\r\n  removeToast(id: string): void {\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next(currentToasts.filter(toast => toast.id !== id));\r\n  }\r\n\r\n  clearAll(): void {\r\n    this.toastsSubject.next([]);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { Region, CreateRegionRequest, UpdateRegionRequest } from '../../../core/models/region.model';\r\n\r\n@Component({\r\n  selector: 'app-region-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Region' : 'Create Region' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update region information' : 'Add a new region to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-geo-alt-fill me-2\"></i>\r\n                Region Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"regionForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"name\" class=\"form-label\">Region Name <span class=\"text-danger\">*</span></label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"name\"\r\n                        formControlName=\"name\"\r\n                        [class.is-invalid]=\"regionForm.get('name')?.invalid && regionForm.get('name')?.touched\"\r\n                        placeholder=\"Enter region name\">\r\n                      <div class=\"invalid-feedback\" *ngIf=\"regionForm.get('name')?.hasError('required')\">\r\n                        Region name is required\r\n                      </div>\r\n                      <div class=\"invalid-feedback\" *ngIf=\"regionForm.get('name')?.hasError('maxlength')\">\r\n                        Region name must not exceed 100 characters\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"capital\" class=\"form-label\">Capital</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"capital\"\r\n                        formControlName=\"capital\"\r\n                        placeholder=\"Enter capital city\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"population\" class=\"form-label\">Population</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"population\"\r\n                        formControlName=\"population\"\r\n                        min=\"0\"\r\n                        placeholder=\"Enter population\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"areaSqKm\"\r\n                        formControlName=\"areaSqKm\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        placeholder=\"Enter area in square kilometers\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"latitude\"\r\n                        formControlName=\"latitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter latitude\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"longitude\"\r\n                        formControlName=\"longitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter longitude\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"commissioner\" class=\"form-label\">Regional Commissioner</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"commissioner\"\r\n                        formControlName=\"commissioner\"\r\n                        placeholder=\"Enter commissioner name\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label class=\"form-label\">Status</label>\r\n                      <div class=\"form-check form-switch\">\r\n                        <input \r\n                          class=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"isActive\"\r\n                          formControlName=\"isActive\">\r\n                        <label class=\"form-check-label\" for=\"isActive\">\r\n                          Active\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"description\" class=\"form-label\">Description</label>\r\n                  <textarea \r\n                    class=\"form-control\" \r\n                    id=\"description\"\r\n                    formControlName=\"description\"\r\n                    rows=\"3\"\r\n                    placeholder=\"Enter region description\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"d-flex justify-content-end gap-2\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n                    Cancel\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\" \r\n                    class=\"btn btn-primary\" \r\n                    [disabled]=\"regionForm.invalid || isLoading\">\r\n                    <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    {{ isLoading ? 'Saving...' : (isEditMode ? 'Update Region' : 'Create Region') }}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Help Panel -->\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Help & Guidelines\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Required Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Region Name</li>\r\n                <li>• Capital</li>\r\n                <li>• Commissioner</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Optional Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Population</li>\r\n                <li>• Area (km²)</li>\r\n                <li>• Coordinates (Latitude/Longitude)</li>\r\n                <li>• Description</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Tips</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Use official region names</li>\r\n                <li>• Capital should be the main city</li>\r\n                <li>• Use precise coordinates for mapping</li>\r\n                <li>• Population should be current estimates</li>\r\n                <li>• Keep descriptions concise and informative</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container-fluid {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n      color: #495057;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n  `]\r\n})\r\nexport class RegionFormComponent implements OnInit {\r\n  regionForm: FormGroup;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  regionId: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private regionService: RegionService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.regionForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      capital: ['', [Validators.maxLength(100)]],\r\n      population: [null, [Validators.min(0)]],\r\n      areaSqKm: [null, [Validators.min(0)]],\r\n      latitude: [null],\r\n      longitude: [null],\r\n      commissioner: ['', [Validators.maxLength(100)]],\r\n      description: ['', [Validators.maxLength(500)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.regionId = this.route.snapshot.paramMap.get('uid');\r\n    this.isEditMode = !!this.regionId;\r\n\r\n    if (this.isEditMode && this.regionId) {\r\n      this.loadRegion(this.regionId);\r\n    }\r\n  }\r\n\r\n  loadRegion(uid: string) {\r\n    this.isLoading = true;\r\n    console.log('Loading region with UID:', uid);\r\n    this.regionService.getRegionByUid(uid).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        console.log('Region API Response:', response);\r\n        if (response.status) {\r\n          const region = response.data;\r\n          console.log('Region data:', region);\r\n          this.regionForm.patchValue({\r\n            name: region.name,\r\n            capital: region.capital,\r\n            population: region.population,\r\n            areaSqKm: region.areaSqKm,\r\n            latitude: region.latitude,\r\n            longitude: region.longitude,\r\n            commissioner: region.commissioner,\r\n            description: region.description,\r\n            isActive: region.isActive\r\n          });\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading region:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        this.toastService.error('Error Loading Region', error.error?.message || error.message || 'Unknown error');\r\n        this.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.regionForm.valid) {\r\n      this.isLoading = true;\r\n      const formData = this.regionForm.value;\r\n\r\n      if (this.isEditMode && this.regionId) {\r\n        const updateRequest: UpdateRegionRequest = {\r\n          name: formData.name,\r\n          capital: formData.capital,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          commissioner: formData.commissioner,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.regionService.updateRegion(this.regionId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              this.toastService.success('Region Updated', 'Region updated successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error updating region:', error);\r\n            this.toastService.error('Error Updating Region', 'Failed to update region');\r\n          }\r\n        });\r\n      } else {\r\n        const createRequest: CreateRegionRequest = {\r\n          name: formData.name,\r\n          capital: formData.capital,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          commissioner: formData.commissioner,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.regionService.createRegion(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              this.toastService.success('Region Created', 'Region created successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error creating region:', error);\r\n            this.toastService.error('Error Creating Region', 'Failed to create region');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched() {\r\n    Object.keys(this.regionForm.controls).forEach(key => {\r\n      const control = this.regionForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/regions']);\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","ToastService","constructor","toastsSubject","toasts$","asObservable","showToast","type","title","message","duration","dismissible","toast","id","generateId","currentToasts","value","next","setTimeout","removeToast","success","error","warning","info","filter","clearAll","Math","random","toString","substr","factory","ɵfac","providedIn","CommonModule","Validators","ReactiveFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","RegionFormComponent","fb","regionService","router","route","toastService","isEditMode","isLoading","regionId","regionForm","group","name","required","maxLength","capital","population","min","areaSqKm","latitude","longitude","commissioner","description","isActive","ngOnInit","snapshot","paramMap","get","loadRegion","uid","console","log","getRegionByUid","subscribe","response","status","region","data","patchValue","goBack","onSubmit","valid","formData","updateRequest","updateRegion","createRequest","createRegion","markFormGroupTouched","Object","keys","controls","forEach","key","control","markAsTouched","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","RegionService","i3","Router","ActivatedRoute","i4","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegionFormComponent_Template","rf","ctx","ɵɵlistener","RegionFormComponent_Template_button_click_7_listener","RegionFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","RegionFormComponent_div_27_Template","RegionFormComponent_div_28_Template","RegionFormComponent_Template_button_click_75_listener","RegionFormComponent_span_78_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","ɵɵtextInterpolate1","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}