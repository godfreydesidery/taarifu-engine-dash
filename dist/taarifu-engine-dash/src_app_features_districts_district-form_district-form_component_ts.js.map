{"version":3,"file":"src_app_features_districts_district-form_district-form_component_ts.js","mappings":"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","sources":["./src/app/core/services/toast.service.ts","./src/app/features/districts/district-form/district-form.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  duration?: number;\r\n  dismissible?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  private toastsSubject = new BehaviorSubject<Toast[]>([]);\r\n  public toasts$ = this.toastsSubject.asObservable();\r\n\r\n  private showToast(type: Toast['type'], title: string, message: string, duration: number = 3000, dismissible: boolean = true): void {\r\n    const toast: Toast = {\r\n      id: this.generateId(),\r\n      type,\r\n      title,\r\n      message,\r\n      duration,\r\n      dismissible\r\n    };\r\n\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next([...currentToasts, toast]);\r\n\r\n    // Auto remove toast after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        this.removeToast(toast.id);\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  success(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('success', title, message, duration, dismissible);\r\n  }\r\n\r\n  error(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('error', title, message, duration, dismissible);\r\n  }\r\n\r\n  warning(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('warning', title, message, duration, dismissible);\r\n  }\r\n\r\n  info(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('info', title, message, duration, dismissible);\r\n  }\r\n\r\n  removeToast(id: string): void {\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next(currentToasts.filter(toast => toast.id !== id));\r\n  }\r\n\r\n  clearAll(): void {\r\n    this.toastsSubject.next([]);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { District, CreateDistrictRequest, UpdateDistrictRequest } from '../../../core/models/district.model';\r\nimport { Region } from '../../../core/models/region.model';\r\n\r\n@Component({\r\n  selector: 'app-district-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit District' : 'Create District' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update district information' : 'Add a new district to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-building me-2\"></i>\r\n                District Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"districtForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"name\" class=\"form-label\">District Name <span class=\"text-danger\">*</span></label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"name\"\r\n                        formControlName=\"name\"\r\n                        [class.is-invalid]=\"districtForm.get('name')?.invalid && districtForm.get('name')?.touched\"\r\n                        placeholder=\"Enter district name\">\r\n                      <div class=\"invalid-feedback\" *ngIf=\"districtForm.get('name')?.hasError('required')\">\r\n                        District name is required\r\n                      </div>\r\n                      <div class=\"invalid-feedback\" *ngIf=\"districtForm.get('name')?.hasError('maxlength')\">\r\n                        District name must not exceed 100 characters\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"regionId\" class=\"form-label\">Region <span class=\"text-danger\">*</span></label>\r\n                      <select \r\n                        class=\"form-select\" \r\n                        id=\"regionId\"\r\n                        formControlName=\"regionId\"\r\n                        [class.is-invalid]=\"districtForm.get('regionId')?.invalid && districtForm.get('regionId')?.touched\">\r\n                        <option value=\"\">Select a region</option>\r\n                        <option *ngFor=\"let region of regions\" [value]=\"region.id\">{{ region.name }}</option>\r\n                      </select>\r\n                      <div class=\"invalid-feedback\" *ngIf=\"districtForm.get('regionId')?.hasError('required')\">\r\n                        Region is required\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"headquarters\" class=\"form-label\">Headquarters</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"headquarters\"\r\n                        formControlName=\"headquarters\"\r\n                        placeholder=\"Enter headquarters\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label class=\"form-label\">Status</label>\r\n                      <div class=\"form-check form-switch\">\r\n                        <input \r\n                          class=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"isActive\"\r\n                          formControlName=\"isActive\">\r\n                        <label class=\"form-check-label\" for=\"isActive\">\r\n                          Active\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"population\" class=\"form-label\">Population</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"population\"\r\n                        formControlName=\"population\"\r\n                        min=\"0\"\r\n                        placeholder=\"Enter population\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"areaSqKm\"\r\n                        formControlName=\"areaSqKm\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        placeholder=\"Enter area in square kilometers\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"latitude\"\r\n                        formControlName=\"latitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter latitude\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"longitude\"\r\n                        formControlName=\"longitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter longitude\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"description\" class=\"form-label\">Description</label>\r\n                  <textarea \r\n                    class=\"form-control\" \r\n                    id=\"description\"\r\n                    formControlName=\"description\"\r\n                    rows=\"3\"\r\n                    placeholder=\"Enter district description\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"d-flex justify-content-end gap-2\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n                    Cancel\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\" \r\n                    class=\"btn btn-primary\" \r\n                    [disabled]=\"districtForm.invalid || isLoading\">\r\n                    <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    {{ isLoading ? 'Saving...' : (isEditMode ? 'Update District' : 'Create District') }}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Help Panel -->\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Help & Guidelines\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Required Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• District Name</li>\r\n                <li>• Region</li>\r\n                <li>• Headquarters</li>\r\n                <li>• Commissioner</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Optional Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Population</li>\r\n                <li>• Area (km²)</li>\r\n                <li>• Coordinates (Latitude/Longitude)</li>\r\n                <li>• Description</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Tips</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Select the correct region first</li>\r\n                <li>• Use official district names</li>\r\n                <li>• Headquarters should be the main town</li>\r\n                <li>• Use precise coordinates for mapping</li>\r\n                <li>• Population should be current estimates</li>\r\n                <li>• Keep descriptions concise and informative</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container-fluid {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n      color: #495057;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n  `]\r\n})\r\nexport class DistrictFormComponent implements OnInit {\r\n  districtForm: FormGroup;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  districtId: string | null = null;\r\n  regions: Region[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private districtService: DistrictService,\r\n    private regionService: RegionService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.districtForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      regionId: [null, [Validators.required]],\r\n      headquarters: ['', [Validators.maxLength(100)]],\r\n      population: [null, [Validators.min(0)]],\r\n      areaSqKm: [null, [Validators.min(0)]],\r\n      latitude: [null],\r\n      longitude: [null],\r\n      description: ['', [Validators.maxLength(500)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.districtId = this.route.snapshot.paramMap.get('uid');\r\n    this.isEditMode = !!this.districtId;\r\n\r\n    this.loadRegions();\r\n\r\n    if (this.isEditMode && this.districtId) {\r\n      this.loadDistrict(this.districtId);\r\n    }\r\n  }\r\n\r\n  loadRegions() {\r\n    this.regionService.getActiveRegions(0, 1000).subscribe({\r\n      next: (response) => {\r\n        this.regions = response.data || [];\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading regions:', error);\r\n        this.regions = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDistrict(uid: string) {\r\n    this.isLoading = true;\r\n    this.districtService.getDistrictByUid(uid).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        if (response.status) {\r\n          const district = response.data;\r\n          this.districtForm.patchValue({\r\n            name: district.name,\r\n            regionId: district.regionId,\r\n            headquarters: district.headquarters,\r\n            population: district.population,\r\n            areaSqKm: district.areaSqKm,\r\n            latitude: district.latitude,\r\n            longitude: district.longitude,\r\n            description: district.description,\r\n            isActive: district.isActive\r\n          });\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading district:', error);\r\n        this.toastService.error('Error Loading District', error.error?.message || error.message || 'Unknown error');\r\n        this.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.districtForm.valid) {\r\n      this.isLoading = true;\r\n      const formData = this.districtForm.value;\r\n\r\n      if (this.isEditMode && this.districtId) {\r\n        const updateRequest: UpdateDistrictRequest = {\r\n          name: formData.name,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.districtService.updateDistrict(this.districtId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              this.toastService.success('District Updated', 'District updated successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error updating district:', error);\r\n            this.toastService.error('Error Updating District', 'Failed to update district');\r\n          }\r\n        });\r\n      } else {\r\n        const createRequest: CreateDistrictRequest = {\r\n          name: formData.name,\r\n          regionId: formData.regionId,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.districtService.createDistrict(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              this.toastService.success('District Created', 'District created successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error creating district:', error);\r\n            this.toastService.error('Error Creating District', 'Failed to create district');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched() {\r\n    Object.keys(this.districtForm.controls).forEach(key => {\r\n      const control = this.districtForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/districts']);\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","ToastService","constructor","toastsSubject","toasts$","asObservable","showToast","type","title","message","duration","dismissible","toast","id","generateId","currentToasts","value","next","setTimeout","removeToast","success","error","warning","info","filter","clearAll","Math","random","toString","substr","factory","ɵfac","providedIn","CommonModule","Validators","ReactiveFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵelement","DistrictFormComponent","fb","districtService","regionService","router","route","toastService","isEditMode","isLoading","districtId","regions","districtForm","group","required","maxLength","regionId","headquarters","population","min","areaSqKm","latitude","longitude","description","isActive","ngOnInit","snapshot","paramMap","get","loadRegions","loadDistrict","getActiveRegions","subscribe","response","data","console","uid","getDistrictByUid","status","district","patchValue","goBack","onSubmit","valid","formData","updateRequest","updateDistrict","createRequest","createDistrict","markFormGroupTouched","Object","keys","controls","forEach","key","control","markAsTouched","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","DistrictService","i3","RegionService","i4","Router","ActivatedRoute","i5","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DistrictFormComponent_Template","rf","ctx","ɵɵlistener","DistrictFormComponent_Template_button_click_7_listener","DistrictFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","DistrictFormComponent_div_27_Template","DistrictFormComponent_div_28_Template","DistrictFormComponent_option_38_Template","DistrictFormComponent_div_39_Template","DistrictFormComponent_Template_button_click_81_listener","DistrictFormComponent_span_84_Template","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_8_0","ɵɵtextInterpolate1","i6","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}