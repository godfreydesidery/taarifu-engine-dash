{"version":3,"file":"src_app_features_auth_change-password_change-password_component_ts.js","mappings":"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","sources":["./src/app/features/auth/change-password/change-password.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { AdminUserService } from '../../../core/services/admin-user.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastComponent } from '../../../shared/components/toast/toast.component';\r\nimport { User } from '../../../core/models/auth.model';\r\nimport { ChangeAdminUserPasswordRequest } from '../../../core/models/admin-user.model';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ToastComponent\r\n  ],\r\n  template: `\r\n    <div class=\"password-change-container\">\r\n      <div class=\"container-fluid h-100\">\r\n        <div class=\"row justify-content-center align-items-center min-vh-100\">\r\n          <div class=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5\">\r\n            <div class=\"card shadow-lg border-0 password-change-card\">\r\n              <div class=\"card-header bg-primary text-white text-center py-4\">\r\n                <div class=\"mb-3\">\r\n                  <i class=\"bi bi-shield-exclamation display-4 text-white\"></i>\r\n                </div>\r\n                <h3 class=\"mb-2 fw-bold\">Password Change Required</h3>\r\n                <p class=\"mb-0 opacity-75\">You must change your password before continuing</p>\r\n              </div>\r\n            \r\n            <div class=\"card-body p-4\">\r\n              <!-- User Information -->\r\n              <div class=\"alert alert-info d-flex align-items-center mb-4\" *ngIf=\"currentUser\">\r\n                <i class=\"bi bi-person-circle me-3 fs-4\"></i>\r\n                <div>\r\n                  <strong>{{ currentUser.username }}</strong><br>\r\n                  <small class=\"text-muted\">{{ currentUser.email }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Password Change Form -->\r\n              <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onChangePasswordSubmit()\">\r\n                <!-- Current Password -->\r\n                <div class=\"mb-3\">\r\n                  <label for=\"currentPassword\" class=\"form-label\">\r\n                    <i class=\"bi bi-lock me-2\"></i>Current Password\r\n                  </label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"bi bi-key\"></i>\r\n                    </span>\r\n                    <input \r\n                      type=\"password\" \r\n                      class=\"form-control\" \r\n                      id=\"currentPassword\"\r\n                      formControlName=\"currentPassword\" \r\n                      placeholder=\"Enter your current password\"\r\n                      [class.is-invalid]=\"changePasswordForm.get('currentPassword')?.invalid && changePasswordForm.get('currentPassword')?.touched\">\r\n                  </div>\r\n                  <div *ngIf=\"changePasswordForm.get('currentPassword')?.invalid && changePasswordForm.get('currentPassword')?.touched\" class=\"invalid-feedback d-block\">\r\n                    <div *ngIf=\"changePasswordForm.get('currentPassword')?.errors?.['required']\">Current password is required</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- New Password -->\r\n                <div class=\"mb-3\">\r\n                  <label for=\"newPassword\" class=\"form-label\">\r\n                    <i class=\"bi bi-lock-fill me-2\"></i>New Password\r\n                  </label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"bi bi-key-fill\"></i>\r\n                    </span>\r\n                    <input \r\n                      type=\"password\" \r\n                      class=\"form-control\" \r\n                      id=\"newPassword\"\r\n                      formControlName=\"newPassword\" \r\n                      placeholder=\"Enter your new password\"\r\n                      [class.is-invalid]=\"changePasswordForm.get('newPassword')?.invalid && changePasswordForm.get('newPassword')?.touched\">\r\n                  </div>\r\n                  <div *ngIf=\"changePasswordForm.get('newPassword')?.invalid && changePasswordForm.get('newPassword')?.touched\" class=\"invalid-feedback d-block\">\r\n                    <div *ngIf=\"changePasswordForm.get('newPassword')?.errors?.['required']\">New password is required</div>\r\n                    <div *ngIf=\"changePasswordForm.get('newPassword')?.errors?.['minlength']\">Password must be at least 12 characters</div>\r\n                    <div *ngIf=\"changePasswordForm.get('newPassword')?.errors?.['pattern']\">Password must contain uppercase, lowercase, numbers, and special characters</div>\r\n                  </div>\r\n                  <div class=\"form-text\">\r\n                    <i class=\"bi bi-info-circle me-1\"></i>\r\n                    Password must be at least 12 characters with uppercase, lowercase, numbers, and special characters\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Confirm New Password -->\r\n                <div class=\"mb-4\">\r\n                  <label for=\"confirmNewPassword\" class=\"form-label\">\r\n                    <i class=\"bi bi-lock-fill me-2\"></i>Confirm New Password\r\n                  </label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"bi bi-check-circle\"></i>\r\n                    </span>\r\n                    <input \r\n                      type=\"password\" \r\n                      class=\"form-control\" \r\n                      id=\"confirmNewPassword\"\r\n                      formControlName=\"confirmNewPassword\" \r\n                      placeholder=\"Confirm your new password\"\r\n                      [class.is-invalid]=\"changePasswordForm.get('confirmNewPassword')?.invalid && changePasswordForm.get('confirmNewPassword')?.touched\">\r\n                  </div>\r\n                  <div *ngIf=\"changePasswordForm.get('confirmNewPassword')?.invalid && changePasswordForm.get('confirmNewPassword')?.touched\" class=\"invalid-feedback d-block\">\r\n                    <div *ngIf=\"changePasswordForm.get('confirmNewPassword')?.errors?.['required']\">Please confirm your new password</div>\r\n                    <div *ngIf=\"changePasswordForm.get('confirmNewPassword')?.errors?.['mismatch']\">Passwords do not match</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Submit Button -->\r\n                <div class=\"d-grid gap-2 mb-3\">\r\n                  <button \r\n                    type=\"submit\" \r\n                    class=\"btn btn-primary btn-lg\"\r\n                    [disabled]=\"changePasswordForm.invalid || isChangingPassword\">\r\n                    <span *ngIf=\"isChangingPassword\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    <i *ngIf=\"!isChangingPassword\" class=\"bi bi-shield-check me-2\"></i>\r\n                    {{ isChangingPassword ? 'Changing Password...' : 'Change Password & Continue' }}\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Logout Button -->\r\n                <div class=\"text-center\">\r\n                  <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-outline-secondary\"\r\n                    (click)=\"logout()\"\r\n                    [disabled]=\"isChangingPassword\">\r\n                    <i class=\"bi bi-box-arrow-right me-2\"></i>\r\n                    Logout & Use Different Account\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            \r\n            <div class=\"card-footer bg-light text-center py-3\">\r\n              <small class=\"text-muted\">\r\n                <i class=\"bi bi-info-circle me-1\"></i>\r\n                This is a mandatory security requirement. You cannot access the system until you change your password.\r\n              </small>\r\n              <br>\r\n              <small class=\"text-muted\">\r\n                <i class=\"bi bi-question-circle me-1\"></i>\r\n                Can't remember your current password? You can logout and use a different account or contact your administrator.\r\n              </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Toast Notifications -->\r\n      <app-toast></app-toast>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .password-change-container {\r\n      background-color: #f8f9fa;\r\n      min-height: 100vh;\r\n      padding: 2rem 0;\r\n    }\r\n    \r\n    .password-change-card {\r\n      border-radius: 15px;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .card-header {\r\n      border-radius: 15px 15px 0 0 !important;\r\n      border: none;\r\n    }\r\n    \r\n    .btn-lg {\r\n      padding: 12px 24px;\r\n      font-size: 1.1rem;\r\n      border-radius: 8px;\r\n      font-weight: 600;\r\n    }\r\n    \r\n    .form-control {\r\n      border-radius: 8px;\r\n      padding: 12px 16px;\r\n    }\r\n    \r\n    .input-group-text {\r\n      border-radius: 8px 0 0 8px;\r\n    }\r\n    \r\n    .invalid-feedback {\r\n      display: block !important;\r\n      font-size: 0.875rem;\r\n      margin-top: 0.25rem;\r\n    }\r\n    \r\n    .alert-info {\r\n      border-radius: 8px;\r\n    }\r\n    \r\n    .card-footer {\r\n      border-radius: 0 0 15px 15px !important;\r\n      border: none;\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n      .password-change-container {\r\n        padding: 1rem 0;\r\n      }\r\n      \r\n      .display-4 {\r\n        font-size: 2.5rem;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  currentUser: User | null = null;\r\n  isChangingPassword = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private adminUserService: AdminUserService,\r\n    private toastService: ToastService,\r\n    private router: Router\r\n  ) {\r\n    this.changePasswordForm = this.createChangePasswordForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get current user information\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    \r\n    if (!this.currentUser) {\r\n      console.error('No current user found');\r\n      this.toastService.error('Error', 'User information not available');\r\n      return;\r\n    }\r\n\r\n    // Check if password change is actually required\r\n    if (!this.currentUser.requirePasswordChange) {\r\n      console.log('Password change not required, redirecting to dashboard');\r\n      // Redirect to dashboard if password change is not required\r\n      window.location.href = '/dashboard';\r\n      return;\r\n    }\r\n\r\n    console.log('Password change required for user:', this.currentUser.username);\r\n  }\r\n\r\n  private createChangePasswordForm(): FormGroup {\r\n    return this.fb.group({\r\n      currentPassword: ['', [Validators.required]],\r\n      newPassword: ['', [\r\n        Validators.required,\r\n        Validators.minLength(12),\r\n        this.strongPasswordValidator\r\n      ]],\r\n      confirmNewPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  private strongPasswordValidator(control: any) {\r\n    const value = control.value;\r\n    if (!value) return null;\r\n\r\n    const hasUpperCase = /[A-Z]/.test(value);\r\n    const hasLowerCase = /[a-z]/.test(value);\r\n    const hasNumeric = /[0-9]/.test(value);\r\n    const hasSpecialChar = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/.test(value);\r\n\r\n    const valid = hasUpperCase && hasLowerCase && hasNumeric && hasSpecialChar;\r\n    return valid ? null : { pattern: true };\r\n  }\r\n\r\n  private passwordMatchValidator(group: FormGroup) {\r\n    const newPassword = group.get('newPassword')?.value;\r\n    const confirmPassword = group.get('confirmNewPassword')?.value;\r\n    \r\n    if (newPassword && confirmPassword && newPassword !== confirmPassword) {\r\n      group.get('confirmNewPassword')?.setErrors({ mismatch: true });\r\n      return { mismatch: true };\r\n    } else {\r\n      group.get('confirmNewPassword')?.setErrors(null);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  onChangePasswordSubmit() {\r\n    if (this.changePasswordForm.invalid || !this.currentUser) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.isChangingPassword = true;\r\n    const formValue = this.changePasswordForm.value;\r\n    \r\n    const changePasswordRequest: ChangeAdminUserPasswordRequest = {\r\n      currentPassword: formValue.currentPassword,\r\n      newPassword: formValue.newPassword,\r\n      confirmPassword: formValue.confirmNewPassword\r\n    };\r\n\r\n    this.adminUserService.changeAdminUserPassword(this.currentUser.uid, changePasswordRequest).subscribe({\r\n      next: (response: any) => {\r\n        this.isChangingPassword = false;\r\n        if (response.status) {\r\n          this.toastService.success('Password Changed Successfully', 'Your password has been changed successfully. Please log in again with your new password.');\r\n          \r\n          // Logout user and redirect to login page for security\r\n          setTimeout(() => {\r\n            this.authService.logout();\r\n            this.router.navigate(['/login']);\r\n          }, 2000);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.isChangingPassword = false;\r\n        console.error('Error changing password:', error);\r\n        console.error('Error structure:', JSON.stringify(error, null, 2));\r\n        \r\n        // Display specific error message from API\r\n        // Try different possible paths for the error message\r\n        let errorMessage = 'Failed to change password. Please try again.';\r\n        \r\n        if (error.error?.message) {\r\n          errorMessage = error.error.message;\r\n        } else if (error.error?.data) {\r\n          errorMessage = error.error.data;\r\n        } else if (error.message) {\r\n          errorMessage = error.message;\r\n        }\r\n        \r\n        console.log('Displaying error toast with message:', errorMessage);\r\n        this.toastService.error('Password Change Failed', errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  private markFormGroupTouched() {\r\n    Object.keys(this.changePasswordForm.controls).forEach(key => {\r\n      const control = this.changePasswordForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    if (confirm('Are you sure you want to logout? You will need to login again.')) {\r\n      this.authService.logout();\r\n      this.toastService.info('Logged Out', 'You have been logged out successfully.');\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n"],"names":["CommonModule","RouterModule","FormsModule","ReactiveFormsModule","Validators","ToastComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","currentUser","username","email","ɵɵtemplate","ChangePasswordComponent_div_23_div_1_Template","ɵɵproperty","tmp_1_0","changePasswordForm","get","errors","ChangePasswordComponent_div_32_div_1_Template","ChangePasswordComponent_div_32_div_2_Template","ChangePasswordComponent_div_32_div_3_Template","tmp_2_0","tmp_3_0","ChangePasswordComponent_div_44_div_1_Template","ChangePasswordComponent_div_44_div_2_Template","ChangePasswordComponent","constructor","fb","authService","adminUserService","toastService","router","isChangingPassword","createChangePasswordForm","ngOnInit","getCurrentUser","console","error","requirePasswordChange","log","window","location","href","group","currentPassword","required","newPassword","minLength","strongPasswordValidator","confirmNewPassword","validators","passwordMatchValidator","control","value","hasUpperCase","test","hasLowerCase","hasNumeric","hasSpecialChar","valid","pattern","confirmPassword","setErrors","mismatch","onChangePasswordSubmit","invalid","markFormGroupTouched","formValue","changePasswordRequest","changeAdminUserPassword","uid","subscribe","next","response","status","success","setTimeout","logout","navigate","JSON","stringify","errorMessage","message","data","Object","keys","controls","forEach","key","markAsTouched","confirm","info","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","AdminUserService","i4","ToastService","i5","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ChangePasswordComponent_Template","rf","ctx","ChangePasswordComponent_div_13_Template","ɵɵlistener","ChangePasswordComponent_Template_form_ngSubmit_14_listener","ChangePasswordComponent_div_23_Template","ChangePasswordComponent_div_32_Template","ChangePasswordComponent_div_44_Template","ChangePasswordComponent_span_47_Template","ChangePasswordComponent_i_48_Template","ChangePasswordComponent_Template_button_click_51_listener","ɵɵclassProp","touched","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","ɵɵtextInterpolate1","i6","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}