{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.routes.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/guards/password-change.guard.ts","./src/app/core/interceptors/auth.interceptor.ts","./src/app/core/services/auth.service.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterOutlet\r\n  ],\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n      height: 100vh;\r\n    }\r\n  `]\r\n})\r\nexport class AppComponent {\r\n  title = 'taarifu-engine-dash';\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { authGuard } from './core/guards/auth.guard';\r\nimport { PasswordChangeGuard } from './core/guards/password-change.guard';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/dashboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadComponent: () => import('./features/auth/login/login.component').then(m => m.LoginComponent)\r\n  },\r\n  {\r\n    path: 'change-password',\r\n    loadComponent: () => import('./features/auth/change-password/change-password.component').then(m => m.ChangePasswordComponent),\r\n    canActivate: [authGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    loadComponent: () => import('./shared/components/layout/layout.component').then(m => m.LayoutComponent),\r\n    canActivate: [authGuard, PasswordChangeGuard],\r\n    children: [\r\n      {\r\n        path: 'profile',\r\n        loadComponent: () => import('./features/profile/profile.component').then(m => m.ProfileComponent)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadComponent: () => import('./features/dashboard/dashboard.component').then(m => m.DashboardComponent)\r\n      },\r\n      {\r\n        path: 'regions',\r\n        loadComponent: () => import('./features/regions/region-list/region-list.component').then(m => m.RegionListComponent)\r\n      },\r\n      {\r\n        path: 'regions/create',\r\n        loadComponent: () => import('./features/regions/region-form/region-form.component').then(m => m.RegionFormComponent)\r\n      },\r\n      {\r\n        path: 'regions/edit/:uid',\r\n        loadComponent: () => import('./features/regions/region-form/region-form.component').then(m => m.RegionFormComponent)\r\n      },\r\n      {\r\n        path: 'districts',\r\n        loadComponent: () => import('./features/districts/district-list/district-list.component').then(m => m.DistrictListComponent)\r\n      },\r\n      {\r\n        path: 'districts/create',\r\n        loadComponent: () => import('./features/districts/district-form/district-form.component').then(m => m.DistrictFormComponent)\r\n      },\r\n      {\r\n        path: 'districts/edit/:uid',\r\n        loadComponent: () => import('./features/districts/district-form/district-form.component').then(m => m.DistrictFormComponent)\r\n      },\r\n      {\r\n        path: 'wards',\r\n        loadComponent: () => import('./features/wards/ward-list/ward-list.component').then(m => m.WardListComponent)\r\n      },\r\n      {\r\n        path: 'wards/create',\r\n        loadComponent: () => import('./features/wards/ward-form/ward-form.component').then(m => m.WardFormComponent)\r\n      },\r\n      {\r\n        path: 'wards/edit/:uid',\r\n        loadComponent: () => import('./features/wards/ward-form/ward-form.component').then(m => m.WardFormComponent)\r\n      },\r\n      {\r\n        path: 'villages',\r\n        loadComponent: () => import('./features/villages/village-list/village-list.component').then(m => m.VillageListComponent)\r\n      },\r\n      {\r\n        path: 'villages/create',\r\n        loadComponent: () => import('./features/villages/village-form/village-form.component').then(m => m.VillageFormComponent)\r\n      },\r\n      {\r\n        path: 'villages/edit/:uid',\r\n        loadComponent: () => import('./features/villages/village-form/village-form.component').then(m => m.VillageFormComponent)\r\n      },\r\n      {\r\n        path: 'hamlets',\r\n        loadComponent: () => import('./features/hamlets/hamlet-list/hamlet-list.component').then(m => m.HamletListComponent)\r\n      },\r\n      {\r\n        path: 'hamlets/create',\r\n        loadComponent: () => import('./features/hamlets/hamlet-form/hamlet-form.component').then(m => m.HamletFormComponent)\r\n      },\r\n      {\r\n        path: 'hamlets/edit/:uid',\r\n        loadComponent: () => import('./features/hamlets/hamlet-form/hamlet-form.component').then(m => m.HamletFormComponent)\r\n      },\r\n      {\r\n        path: 'constituencies',\r\n        loadComponent: () => import('./features/constituencies/constituency-list/constituency-list.component').then(m => m.ConstituencyListComponent)\r\n      },\r\n      {\r\n        path: 'constituencies/create',\r\n        loadComponent: () => import('./features/constituencies/constituency-form/constituency-form.component').then(m => m.ConstituencyFormComponent)\r\n      },\r\n      {\r\n        path: 'constituencies/edit/:uid',\r\n        loadComponent: () => import('./features/constituencies/constituency-form/constituency-form.component').then(m => m.ConstituencyFormComponent)\r\n      },\r\n      {\r\n        path: 'areas',\r\n        loadComponent: () => import('./features/areas/area-list/area-list.component').then(m => m.AreaListComponent)\r\n      },\r\n      {\r\n        path: 'parliaments',\r\n        loadComponent: () => import('./features/parliaments/parliament-list/parliament-list.component').then(m => m.ParliamentListComponent)\r\n      },\r\n      {\r\n        path: 'parliaments/create',\r\n        loadComponent: () => import('./features/parliaments/parliament-form/parliament-form.component').then(m => m.ParliamentFormComponent)\r\n      },\r\n      {\r\n        path: 'parliaments/edit/:uid',\r\n        loadComponent: () => import('./features/parliaments/parliament-form/parliament-form.component').then(m => m.ParliamentFormComponent)\r\n      },\r\n      {\r\n        path: 'political-parties',\r\n        loadComponent: () => import('./features/political-parties/political-party-list/political-party-list.component').then(m => m.PoliticalPartyListComponent)\r\n      },\r\n      {\r\n        path: 'political-parties/create',\r\n        loadComponent: () => import('./features/political-parties/political-party-form/political-party-form.component').then(m => m.PoliticalPartyFormComponent)\r\n      },\r\n      {\r\n        path: 'political-parties/edit/:uid',\r\n        loadComponent: () => import('./features/political-parties/political-party-form/political-party-form.component').then(m => m.PoliticalPartyFormComponent)\r\n      },\r\n      {\r\n        path: 'admin-users',\r\n        loadComponent: () => import('./features/admin-users/admin-user-list/admin-user-list.component').then(m => m.AdminUserListComponent)\r\n      },\r\n      {\r\n        path: 'admin-users/create',\r\n        loadComponent: () => import('./features/admin-users/admin-user-form/admin-user-form.component').then(m => m.AdminUserFormComponent)\r\n      },\r\n      {\r\n        path: 'admin-users/edit/:uid',\r\n        loadComponent: () => import('./features/admin-users/admin-user-form/admin-user-form.component').then(m => m.AdminUserFormComponent)\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: '/dashboard',\r\n        pathMatch: 'full'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/dashboard'\r\n  }\r\n];\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if (authService.isAuthenticated()) {\r\n    return true;\r\n  }\r\n\r\n  router.navigate(['/login']);\r\n  return false;\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n/**\r\n * Guard that checks if the user needs to change their password\r\n * If requirePasswordChange is true, redirect to password change page\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PasswordChangeGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): boolean {\r\n    const currentUser = this.authService.getCurrentUser();\r\n    \r\n    if (currentUser && currentUser.requirePasswordChange) {\r\n      // User needs to change password, redirect to password change page\r\n      this.router.navigate(['/change-password']);\r\n      return false;\r\n    }\r\n    \r\n    // User doesn't need to change password, allow access\r\n    return true;\r\n  }\r\n}\r\n","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n\r\n  if (token) {\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\r\n    });\r\n    return next(authReq);\r\n  }\r\n\r\n  return next(req);\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { LoginRequest, LoginResponse, User } from '../models/auth.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private readonly API_URL = 'http://localhost:8080/api';\r\n  private readonly TOKEN_KEY = 'auth_token';\r\n  private readonly USER_KEY = 'current_user';\r\n\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadStoredUser();\r\n  }\r\n\r\n  login(credentials: LoginRequest): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(`${this.API_URL}/admin/v1/auth/login`, credentials)\r\n      .pipe(\r\n        tap(response => {\r\n          if (response.status && response.data.accessToken) {\r\n            this.setToken(response.data.accessToken);\r\n            this.setCurrentUser(response.data);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n    localStorage.removeItem(this.USER_KEY);\r\n    this.currentUserSubject.next(null);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      console.log('No token found - user not authenticated');\r\n      return false;\r\n    }\r\n    \r\n    // Check if token is expired (basic check)\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      if (payload.exp && payload.exp < currentTime) {\r\n        console.log('Token expired - user not authenticated');\r\n        this.logout(); // Clear expired token\r\n        return false;\r\n      }\r\n      console.log('Token valid - user authenticated');\r\n      return true;\r\n    } catch (error) {\r\n      console.log('Invalid token format - user not authenticated');\r\n      this.logout(); // Clear invalid token\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  private setToken(token: string): void {\r\n    localStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  private setCurrentUser(user: User): void {\r\n    localStorage.setItem(this.USER_KEY, JSON.stringify(user));\r\n    this.currentUserSubject.next(user);\r\n  }\r\n\r\n  private loadStoredUser(): void {\r\n    const storedUser = localStorage.getItem(this.USER_KEY);\r\n    if (storedUser) {\r\n      try {\r\n        const user = JSON.parse(storedUser);\r\n        this.currentUserSubject.next(user);\r\n      } catch (error) {\r\n        console.error('Error parsing stored user:', error);\r\n        this.logout();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Forgot Password - Send reset link to email\r\n  forgotPassword(email: string): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/admin/v1/auth/forgot-password`, { email });\r\n  }\r\n\r\n  // Reset Password - Reset password with token\r\n  resetPassword(token: string, newPassword: string): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/admin/v1/auth/reset-password`, { \r\n      token, \r\n      newPassword \r\n    });\r\n  }\r\n\r\n  // Update current user data (e.g., after password change)\r\n  updateCurrentUser(user: User): void {\r\n    this.setCurrentUser(user);\r\n  }\r\n}\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { AppComponent } from './app/app.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\r\nimport { routes } from './app/app.routes';\r\nimport { authInterceptor } from './app/core/interceptors/auth.interceptor';\r\n\r\nbootstrapApplication(AppComponent, {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient(withInterceptors([authInterceptor]))\r\n  ]\r\n}).catch(err => console.error(err));\r\n"],"names":["RouterOutlet","CommonModule","AppComponent","constructor","title","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","styles","authGuard","PasswordChangeGuard","routes","path","redirectTo","pathMatch","loadComponent","then","m","LoginComponent","ChangePasswordComponent","canActivate","LayoutComponent","children","ProfileComponent","DashboardComponent","RegionListComponent","RegionFormComponent","DistrictListComponent","DistrictFormComponent","WardListComponent","WardFormComponent","VillageListComponent","VillageFormComponent","HamletListComponent","HamletFormComponent","ConstituencyListComponent","ConstituencyFormComponent","AreaListComponent","ParliamentListComponent","ParliamentFormComponent","PoliticalPartyListComponent","PoliticalPartyFormComponent","AdminUserListComponent","AdminUserFormComponent","inject","Router","AuthService","route","state","authService","router","isAuthenticated","navigate","currentUser","getCurrentUser","requirePasswordChange","ɵɵinject","i1","i2","factory","ɵfac","providedIn","authInterceptor","req","next","token","getToken","authReq","clone","headers","set","BehaviorSubject","tap","http","API_URL","TOKEN_KEY","USER_KEY","currentUserSubject","currentUser$","asObservable","loadStoredUser","login","credentials","post","pipe","response","status","data","accessToken","setToken","setCurrentUser","logout","localStorage","removeItem","console","log","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","getItem","setItem","value","user","stringify","storedUser","forgotPassword","email","resetPassword","newPassword","updateCurrentUser","HttpClient","bootstrapApplication","provideRouter","provideHttpClient","withInterceptors","providers","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}