{"version":3,"file":"src_app_features_hamlets_hamlet-list_hamlet-list_component_ts.js","mappings":"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","sources":["./src/app/core/services/toast.service.ts","./src/app/features/hamlets/hamlet-list/hamlet-list.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  duration?: number;\r\n  dismissible?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  private toastsSubject = new BehaviorSubject<Toast[]>([]);\r\n  public toasts$ = this.toastsSubject.asObservable();\r\n\r\n  private showToast(type: Toast['type'], title: string, message: string, duration: number = 3000, dismissible: boolean = true): void {\r\n    const toast: Toast = {\r\n      id: this.generateId(),\r\n      type,\r\n      title,\r\n      message,\r\n      duration,\r\n      dismissible\r\n    };\r\n\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next([...currentToasts, toast]);\r\n\r\n    // Auto remove toast after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        this.removeToast(toast.id);\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  success(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('success', title, message, duration, dismissible);\r\n  }\r\n\r\n  error(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('error', title, message, duration, dismissible);\r\n  }\r\n\r\n  warning(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('warning', title, message, duration, dismissible);\r\n  }\r\n\r\n  info(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('info', title, message, duration, dismissible);\r\n  }\r\n\r\n  removeToast(id: string): void {\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next(currentToasts.filter(toast => toast.id !== id));\r\n  }\r\n\r\n  clearAll(): void {\r\n    this.toastsSubject.next([]);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HamletService } from '../../../core/services/hamlet.service';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { Hamlet } from '../../../core/models/hamlet.model';\r\n\r\n@Component({\r\n  selector: 'app-hamlet-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">Hamlets</h1>\r\n          <p class=\"text-muted\">Manage Tanzania hamlets</p>\r\n        </div>\r\n        <a routerLink=\"/hamlets/create\" class=\"btn btn-primary\">\r\n          <i class=\"bi bi-plus-circle me-1\"></i>\r\n          Add New Hamlet\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Search Section -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"input-group\">\r\n                <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Search hamlets...\" \r\n                  [(ngModel)]=\"searchTerm\" \r\n                  (keyup.enter)=\"onSearch()\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hamlets Table -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"card-title mb-0\">\r\n            <i class=\"bi bi-house-door-fill me-2\"></i>\r\n            All Hamlets\r\n          </h5>\r\n          <div class=\"d-flex align-items-center\">\r\n            <span class=\"text-muted me-2\">Page Size:</span>\r\n            <select class=\"form-select form-select-sm w-auto\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\">\r\n              <option [value]=\"10\">10</option>\r\n              <option [value]=\"25\">25</option>\r\n              <option [value]=\"50\">50</option>\r\n              <option [value]=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p class=\"mt-2\">Loading hamlets...</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && hamlets.length === 0\" class=\"text-center py-5\">\r\n            <i class=\"bi bi-house-door-fill text-muted\" style=\"font-size: 3rem;\"></i>\r\n            <h4 class=\"text-muted mt-3\">No hamlets found</h4>\r\n            <p class=\"text-muted\">Start by creating your first hamlet.</p>\r\n            <a routerLink=\"/hamlets/create\" class=\"btn btn-primary\">\r\n              <i class=\"bi bi-plus-circle me-1\"></i>\r\n              Add Hamlet\r\n            </a>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && hamlets.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead class=\"table-light\">\r\n                <tr>\r\n                  <th (click)=\"onSort('code', $event)\" class=\"sortable\">\r\n                    Code\r\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'code' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'code' && sortDir === 'desc'\"></i>\r\n                  </th>\r\n                  <th (click)=\"onSort('name', $event)\" class=\"sortable\">\r\n                    Name\r\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'name' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'name' && sortDir === 'desc'\"></i>\r\n                  </th>\r\n                  <th>Village</th>\r\n                  <th>Ward</th>\r\n                  <th>District</th>\r\n                  <th>Region</th>\r\n                  <th>Headquarters</th>\r\n                  <th>Population</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let hamlet of hamlets\">\r\n                  <td>\r\n                    <span class=\"badge bg-primary\">{{ hamlet.code }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <strong>{{ hamlet.name }}</strong>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-info\">{{ hamlet.villageName }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-secondary\">{{ hamlet.wardName }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-warning text-dark\">{{ hamlet.districtName }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-success\">{{ hamlet.regionName }}</span>\r\n                  </td>\r\n                  <td>{{ hamlet.headquarters }}</td>\r\n                  <td>{{ hamlet.population | number }}</td>\r\n                  <td>\r\n                    <span class=\"badge\" [class.bg-success]=\"hamlet.isActive\" [class.bg-secondary]=\"!hamlet.isActive\">\r\n                      {{ hamlet.isActive ? 'Active' : 'Inactive' }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"editHamlet(hamlet)\">\r\n                        <i class=\"bi bi-pencil\"></i>\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"toggleStatus(hamlet)\">\r\n                        <i class=\"bi\" [class.bi-pause]=\"hamlet.isActive\" [class.bi-play]=\"!hamlet.isActive\"></i>\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteHamlet(hamlet)\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <nav *ngIf=\"!isLoading && totalPages > 1\" aria-label=\"Page navigation\">\r\n            <ul class=\"pagination justify-content-center\">\r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === 0\">\r\n                <button class=\"page-link\" (click)=\"goToPage(currentPage - 1)\" [disabled]=\"currentPage === 0\">Previous</button>\r\n              </li>\r\n              <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [class.active]=\"page === currentPage\">\r\n                <button class=\"page-link\" (click)=\"goToPage(page)\">{{ page + 1 }}</button>\r\n              </li>\r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages - 1\">\r\n                <button class=\"page-link\" (click)=\"goToPage(currentPage + 1)\" [disabled]=\"currentPage === totalPages - 1\">Next</button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container-fluid {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .table th {\r\n      border-top: none;\r\n      font-weight: 600;\r\n      color: #495057;\r\n    }\r\n\r\n    .btn-group .btn {\r\n      border-radius: 0.25rem;\r\n    }\r\n\r\n    .btn-group .btn:not(:last-child) {\r\n      margin-right: 2px;\r\n    }\r\n\r\n    .badge {\r\n      font-size: 0.75em;\r\n    }\r\n\r\n    .sortable {\r\n      cursor: pointer;\r\n      user-select: none;\r\n    }\r\n\r\n    .sortable i {\r\n      margin-left: 5px;\r\n      font-size: 0.7em;\r\n    }\r\n  `]\r\n})\r\nexport class HamletListComponent implements OnInit {\r\n  hamlets: Hamlet[] = [];\r\n  \r\n  searchTerm = '';\r\n  \r\n  currentPage = 0;\r\n  pageSize = 10;\r\n  totalElements = 0;\r\n  totalPages = 0;\r\n  sortBy: string = 'name';\r\n  sortDir: 'asc' | 'desc' = 'asc';\r\n  \r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private hamletService: HamletService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log('HamletListComponent initialized');\r\n    const token = this.authService.getToken();\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    const currentUser = this.authService.getCurrentUser();\r\n    console.log('Auth Debug Info:');\r\n    console.log('- Token exists:', !!token);\r\n    console.log('- Token value:', token ? token.substring(0, 50) + '...' : 'No token');\r\n    console.log('- Is authenticated:', isAuthenticated);\r\n    console.log('- Current user:', currentUser);\r\n    \r\n    if (!isAuthenticated) {\r\n      console.error('User not authenticated! Redirecting to login...');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n    \r\n    this.loadHamlets();\r\n  }\r\n\r\n  loadHamlets() {\r\n    this.isLoading = true;\r\n    \r\n    const observable = this.searchTerm \r\n      ? this.hamletService.searchHamlets(this.searchTerm, this.currentPage, this.pageSize, this.sortBy, this.sortDir)\r\n      : this.hamletService.getAllHamlets(this.currentPage, this.pageSize, this.sortBy, this.sortDir);\r\n\r\n    observable.subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        console.log('Hamlets API Response:', response);\r\n        this.hamlets = response.data || [];\r\n        this.totalElements = response.totalElements || 0;\r\n        this.totalPages = response.totalPages || 0;\r\n        console.log('Loaded hamlets:', this.hamlets.length);\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading hamlets:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        \r\n        if (error.status === 403) {\r\n          console.error('403 Forbidden - Authentication/Authorization issue');\r\n          console.error('Current token:', this.authService.getToken());\r\n          this.toastService.error('Access Denied', 'Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else if (error.status === 401) {\r\n          console.error('401 Unauthorized - Token expired or invalid');\r\n          this.toastService.error('Session Expired', 'Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.toastService.error('Error Loading Hamlets', error.error?.message || error.message || 'Unknown error occurred');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    this.currentPage = 0;\r\n    this.loadHamlets();\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 0;\r\n    this.loadHamlets();\r\n  }\r\n\r\n  onSort(field: string, event: Event) {\r\n    event.preventDefault();\r\n    \r\n    if (this.sortBy === field) {\r\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortBy = field;\r\n      this.sortDir = 'asc';\r\n    }\r\n    this.currentPage = 0;\r\n    this.loadHamlets();\r\n  }\r\n\r\n  goToPage(page: number) {\r\n    this.currentPage = page;\r\n    this.loadHamlets();\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pageNumbers = [];\r\n    for (let i = 0; i < this.totalPages; i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  editHamlet(hamlet: Hamlet) {\r\n    this.router.navigate(['/hamlets/edit', hamlet.uid]);\r\n  }\r\n\r\n  toggleStatus(hamlet: Hamlet) {\r\n    this.hamletService.toggleHamletStatus(hamlet.uid).subscribe({\r\n      next: (response) => {\r\n        if (response.status) {\r\n          this.toastService.success('Hamlet Updated', `Hamlet ${response.data.isActive ? 'activated' : 'deactivated'} successfully`);\r\n          this.loadHamlets();\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error toggling hamlet status:', error);\r\n        this.toastService.error('Error Updating Hamlet', 'Failed to update hamlet status');\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteHamlet(hamlet: Hamlet) {\r\n    if (confirm(`Are you sure you want to delete hamlet \"${hamlet.name}\"?`)) {\r\n      this.hamletService.deleteHamlet(hamlet.uid).subscribe({\r\n        next: (response) => {\r\n          if (response.status) {\r\n            this.toastService.success('Hamlet Deleted', 'Hamlet deleted successfully');\r\n            this.loadHamlets();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting hamlet:', error);\r\n          this.toastService.error('Error Deleting Hamlet', 'Failed to delete hamlet');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","ToastService","constructor","toastsSubject","toasts$","asObservable","showToast","type","title","message","duration","dismissible","toast","id","generateId","currentToasts","value","next","setTimeout","removeToast","success","error","warning","info","filter","clearAll","Math","random","toString","substr","factory","ɵfac","providedIn","CommonModule","RouterModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HamletListComponent_div_38_tr_27_Template_button_click_29_listener","hamlet_r4","ɵɵrestoreView","_r3","$implicit","ctx_r1","ɵɵnextContext","ɵɵresetView","editHamlet","HamletListComponent_div_38_tr_27_Template_button_click_31_listener","toggleStatus","HamletListComponent_div_38_tr_27_Template_button_click_33_listener","deleteHamlet","ɵɵadvance","ɵɵtextInterpolate","code","name","villageName","wardName","districtName","regionName","headquarters","ɵɵpipeBind1","population","ɵɵclassProp","isActive","ɵɵtextInterpolate1","HamletListComponent_div_38_Template_th_click_4_listener","$event","_r1","onSort","HamletListComponent_div_38_Template_th_click_7_listener","ɵɵtemplate","HamletListComponent_div_38_tr_27_Template","sortBy","sortDir","ɵɵproperty","hamlets","HamletListComponent_nav_39_li_5_Template_button_click_1_listener","page_r7","_r6","goToPage","currentPage","HamletListComponent_nav_39_Template_button_click_3_listener","_r5","HamletListComponent_nav_39_li_5_Template","HamletListComponent_nav_39_Template_button_click_7_listener","getPageNumbers","totalPages","HamletListComponent","hamletService","authService","router","toastService","searchTerm","pageSize","totalElements","isLoading","ngOnInit","console","log","token","getToken","isAuthenticated","currentUser","getCurrentUser","substring","navigate","loadHamlets","observable","searchHamlets","getAllHamlets","subscribe","response","data","length","status","logout","onSearch","onPageSizeChange","field","event","preventDefault","page","pageNumbers","i","push","hamlet","uid","toggleHamletStatus","confirm","ɵɵdirectiveInject","i1","HamletService","i2","AuthService","i3","Router","i4","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","HamletListComponent_Template","rf","ctx","ɵɵtwoWayListener","HamletListComponent_Template_input_ngModelChange_17_listener","ɵɵtwoWayBindingSet","HamletListComponent_Template_input_keyup_enter_17_listener","HamletListComponent_Template_select_ngModelChange_26_listener","HamletListComponent_Template_select_change_26_listener","HamletListComponent_div_36_Template","HamletListComponent_div_37_Template","HamletListComponent_div_38_Template","HamletListComponent_nav_39_Template","ɵɵtwoWayProperty","i5","NgForOf","NgIf","DecimalPipe","RouterLink","i6","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}