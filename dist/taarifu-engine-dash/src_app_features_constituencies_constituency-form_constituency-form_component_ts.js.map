{"version":3,"file":"src_app_features_constituencies_constituency-form_constituency-form_component_ts.js","mappings":"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","sources":["./src/app/core/services/toast.service.ts","./src/app/features/constituencies/constituency-form/constituency-form.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  duration?: number;\r\n  dismissible?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  private toastsSubject = new BehaviorSubject<Toast[]>([]);\r\n  public toasts$ = this.toastsSubject.asObservable();\r\n\r\n  private showToast(type: Toast['type'], title: string, message: string, duration: number = 3000, dismissible: boolean = true): void {\r\n    const toast: Toast = {\r\n      id: this.generateId(),\r\n      type,\r\n      title,\r\n      message,\r\n      duration,\r\n      dismissible\r\n    };\r\n\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next([...currentToasts, toast]);\r\n\r\n    // Auto remove toast after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        this.removeToast(toast.id);\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  success(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('success', title, message, duration, dismissible);\r\n  }\r\n\r\n  error(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('error', title, message, duration, dismissible);\r\n  }\r\n\r\n  warning(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('warning', title, message, duration, dismissible);\r\n  }\r\n\r\n  info(title: string, message: string, duration?: number, dismissible?: boolean): void {\r\n    this.showToast('info', title, message, duration, dismissible);\r\n  }\r\n\r\n  removeToast(id: string): void {\r\n    const currentToasts = this.toastsSubject.value;\r\n    this.toastsSubject.next(currentToasts.filter(toast => toast.id !== id));\r\n  }\r\n\r\n  clearAll(): void {\r\n    this.toastsSubject.next([]);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { ConstituencyService } from '../../../core/services/constituency.service';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { Constituency, CreateConstituencyRequest, UpdateConstituencyRequest } from '../../../core/models/constituency.model';\r\nimport { Region } from '../../../core/models/region.model';\r\nimport { District } from '../../../core/models/district.model';\r\n\r\n@Component({\r\n  selector: 'app-constituency-form',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n  template: `\r\n    <div class=\"constituency-form-container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Constituency' : 'Create New Constituency' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update constituency information' : 'Add a new constituency to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" routerLink=\"/constituencies\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back to List\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-flag me-2\"></i>\r\n                Constituency Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"constituencyForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row g-3\">\r\n                  <!-- Basic Information -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"name\" class=\"form-label\">Constituency Name <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"name\"\r\n                      formControlName=\"name\"\r\n                      placeholder=\"Enter constituency name\"\r\n                      [class.is-invalid]=\"constituencyForm.get('name')?.invalid && constituencyForm.get('name')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('name')?.hasError('required')\">\r\n                      Constituency name is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('name')?.hasError('maxlength')\">\r\n                      Constituency name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"regionId\" class=\"form-label\">Region <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"regionId\"\r\n                      formControlName=\"regionId\"\r\n                      (change)=\"onRegionChange()\"\r\n                      [class.is-invalid]=\"constituencyForm.get('regionId')?.invalid && constituencyForm.get('regionId')?.touched\">\r\n                      <option value=\"\">Select a region</option>\r\n                      <option *ngFor=\"let region of regions\" [value]=\"region.id\">{{ region.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('regionId')?.hasError('required')\">\r\n                      Please select a region\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"districtId\" class=\"form-label\">District <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"districtId\"\r\n                      formControlName=\"districtId\"\r\n                      [class.is-invalid]=\"constituencyForm.get('districtId')?.invalid && constituencyForm.get('districtId')?.touched\">\r\n                      <option value=\"\">Select a district</option>\r\n                      <option *ngFor=\"let district of districts\" [value]=\"district.id\">{{ district.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('districtId')?.hasError('required')\">\r\n                      Please select a district\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"headquarters\" class=\"form-label\">Headquarters <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"headquarters\"\r\n                      formControlName=\"headquarters\"\r\n                      placeholder=\"Enter headquarters\"\r\n                      [class.is-invalid]=\"constituencyForm.get('headquarters')?.invalid && constituencyForm.get('headquarters')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('headquarters')?.hasError('required')\">\r\n                      Headquarters is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('headquarters')?.hasError('maxlength')\">\r\n                      Headquarters must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Population and Area -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"population\" class=\"form-label\">Population</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"population\"\r\n                      formControlName=\"population\"\r\n                      placeholder=\"Enter population\"\r\n                      min=\"0\">\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"areaSqKm\"\r\n                      formControlName=\"areaSqKm\"\r\n                      placeholder=\"Enter area in square kilometers\"\r\n                      min=\"0\"\r\n                      step=\"0.01\">\r\n                  </div>\r\n\r\n                  <!-- Coordinates -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"latitude\"\r\n                      formControlName=\"latitude\"\r\n                      placeholder=\"Enter latitude\"\r\n                      step=\"0.000001\">\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"longitude\"\r\n                      formControlName=\"longitude\"\r\n                      placeholder=\"Enter longitude\"\r\n                      step=\"0.000001\">\r\n                  </div>\r\n\r\n                  <!-- Description -->\r\n                  <div class=\"col-12\">\r\n                    <label for=\"description\" class=\"form-label\">Description</label>\r\n                    <textarea \r\n                      class=\"form-control\" \r\n                      id=\"description\"\r\n                      formControlName=\"description\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Enter constituency description\"></textarea>\r\n                  </div>\r\n\r\n                  <!-- Status -->\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-check\">\r\n                      <input \r\n                        class=\"form-check-input\" \r\n                        type=\"checkbox\" \r\n                        id=\"isActive\"\r\n                        formControlName=\"isActive\">\r\n                      <label class=\"form-check-label\" for=\"isActive\">\r\n                        Active Constituency\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Submit Button -->\r\n                  <div class=\"col-12\">\r\n                    <div class=\"d-flex gap-2\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary\"\r\n                        [disabled]=\"constituencyForm.invalid || isSubmitting\">\r\n                        <span *ngIf=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                        <i *ngIf=\"!isSubmitting\" class=\"bi bi-check-circle me-1\"></i>\r\n                        {{ isSubmitting ? 'Saving...' : (isEditMode ? 'Update Constituency' : 'Create Constituency') }}\r\n                      </button>\r\n                      <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-outline-secondary\"\r\n                        routerLink=\"/constituencies\">\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Guidelines\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Creating a Constituency</h6>\r\n              <ul class=\"list-unstyled\">\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Provide a unique constituency name</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Select the appropriate region</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Specify the headquarters location</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Add population and area data if available</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Include coordinates for mapping</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Add the Member of Parliament name</li>\r\n              </ul>\r\n              \r\n              <hr>\r\n              \r\n              <h6>Best Practices</h6>\r\n              <ul class=\"list-unstyled\">\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Use clear, descriptive names</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Ensure headquarters is accurate</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Verify region selection</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Include relevant description</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .constituency-form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n  `]\r\n})\r\nexport class ConstituencyFormComponent implements OnInit {\r\n  constituencyForm: FormGroup;\r\n  isEditMode = false;\r\n  isSubmitting = false;\r\n  constituencyId: string | null = null;\r\n  regions: Region[] = [];\r\n  districts: District[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private constituencyService: ConstituencyService,\r\n    private regionService: RegionService,\r\n    private districtService: DistrictService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.constituencyForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadRegions();\r\n    \r\n    // Check if we're in edit mode\r\n    this.route.params.subscribe(params => {\r\n      if (params['uid']) {\r\n        this.isEditMode = true;\r\n        this.constituencyId = params['uid'];\r\n        this.loadConstituency();\r\n      }\r\n    });\r\n  }\r\n\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      regionId: ['', Validators.required],\r\n      districtId: ['', Validators.required],\r\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\r\n      population: [null],\r\n      areaSqKm: [null],\r\n      latitude: [null],\r\n      longitude: [null],\r\n      description: [''],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  private loadRegions() {\r\n    this.regionService.getAllRegions(0, 1000).subscribe({\r\n      next: (response) => {\r\n        if (response.status) {\r\n          this.regions = response.data;\r\n        } else {\r\n          this.toastService.error('Error', 'Failed to load regions');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading regions:', error);\r\n        this.toastService.error('Error', 'Failed to load regions. Please try again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  onRegionChange() {\r\n    const regionId = this.constituencyForm.get('regionId')?.value;\r\n    this.constituencyForm.get('districtId')?.setValue('');\r\n    this.districts = [];\r\n    \r\n    if (regionId) {\r\n      // Find the selected region to get its UID\r\n      const selectedRegion = this.regions.find(region => region.id === Number(regionId));\r\n      if (selectedRegion) {\r\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\r\n          next: (response) => {\r\n            if (response.status) {\r\n              this.districts = response.data;\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to load districts');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Error loading districts:', error);\r\n            this.toastService.error('Error', 'Failed to load districts. Please try again.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadConstituency() {\r\n    if (!this.constituencyId) return;\r\n\r\n    this.constituencyService.getConstituencyByUid(this.constituencyId).subscribe({\r\n      next: (response) => {\r\n        if (response.status) {\r\n          const constituency = response.data;\r\n          this.constituencyForm.patchValue({\r\n            name: constituency.name,\r\n            regionId: constituency.regionId,\r\n            districtId: constituency.districtId,\r\n            headquarters: constituency.headquarters,\r\n            population: constituency.population,\r\n            areaSqKm: constituency.areaSqKm,\r\n            latitude: constituency.latitude,\r\n            longitude: constituency.longitude,\r\n            description: constituency.description,\r\n            isActive: constituency.isActive\r\n          });\r\n          \r\n          // Load districts for the selected region\r\n          if (constituency.regionId) {\r\n            this.onRegionChange();\r\n          }\r\n        } else {\r\n          this.toastService.error('Error', 'Failed to load constituency');\r\n          this.router.navigate(['/constituencies']);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading constituency:', error);\r\n        this.toastService.error('Error', 'Failed to load constituency. Please try again.');\r\n        this.router.navigate(['/constituencies']);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.constituencyForm.valid) {\r\n      this.isSubmitting = true;\r\n      const formData = this.constituencyForm.value;\r\n\r\n      if (this.isEditMode && this.constituencyId) {\r\n        const updateRequest: UpdateConstituencyRequest = {\r\n          name: formData.name,\r\n          districtId: formData.districtId,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.constituencyService.updateConstituency(this.constituencyId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isSubmitting = false;\r\n            if (response.status) {\r\n              this.toastService.success('Success', 'Constituency updated successfully');\r\n              this.router.navigate(['/constituencies']);\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to update constituency');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isSubmitting = false;\r\n            console.error('Error updating constituency:', error);\r\n            this.toastService.error('Error', 'Failed to update constituency. Please try again.');\r\n          }\r\n        });\r\n      } else {\r\n        const createRequest: CreateConstituencyRequest = {\r\n          name: formData.name,\r\n          districtId: formData.districtId,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.constituencyService.createConstituency(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isSubmitting = false;\r\n            if (response.status) {\r\n              this.toastService.success('Success', 'Constituency created successfully');\r\n              this.router.navigate(['/constituencies']);\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to create constituency');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isSubmitting = false;\r\n            console.error('Error creating constituency:', error);\r\n            this.toastService.error('Error', 'Failed to create constituency. Please try again.');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.toastService.warning('Validation Error', 'Please fill in all required fields correctly');\r\n      this.constituencyForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","ToastService","constructor","toastsSubject","toasts$","asObservable","showToast","type","title","message","duration","dismissible","toast","id","generateId","currentToasts","value","next","setTimeout","removeToast","success","error","warning","info","filter","clearAll","Math","random","toString","substr","factory","ɵfac","providedIn","CommonModule","Validators","ReactiveFormsModule","RouterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","ɵɵadvance","ɵɵtextInterpolate","name","district_r2","ɵɵelement","ConstituencyFormComponent","fb","route","router","constituencyService","regionService","districtService","toastService","isEditMode","isSubmitting","constituencyId","regions","districts","constituencyForm","createForm","ngOnInit","loadRegions","params","subscribe","loadConstituency","group","required","maxLength","regionId","districtId","headquarters","population","areaSqKm","latitude","longitude","description","isActive","getAllRegions","response","status","data","console","onRegionChange","get","setValue","selectedRegion","find","region","Number","getDistrictsByRegionUid","uid","getConstituencyByUid","constituency","patchValue","navigate","onSubmit","valid","formData","updateRequest","updateConstituency","createRequest","createConstituency","markAllAsTouched","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","ConstituencyService","i4","RegionService","i5","DistrictService","i6","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ConstituencyFormComponent_Template","rf","ctx","ɵɵlistener","ConstituencyFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","ConstituencyFormComponent_div_26_Template","ConstituencyFormComponent_div_27_Template","ConstituencyFormComponent_Template_select_change_33_listener","ConstituencyFormComponent_option_36_Template","ConstituencyFormComponent_div_37_Template","ConstituencyFormComponent_option_46_Template","ConstituencyFormComponent_div_47_Template","ConstituencyFormComponent_div_54_Template","ConstituencyFormComponent_div_55_Template","ConstituencyFormComponent_span_84_Template","ConstituencyFormComponent_i_85_Template","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_8_0","tmp_9_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0","ɵɵtextInterpolate1","i7","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","RouterLink","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}