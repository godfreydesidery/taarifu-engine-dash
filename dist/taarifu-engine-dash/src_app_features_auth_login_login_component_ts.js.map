{"version":3,"file":"src_app_features_auth_login_login_component_ts.js","mappings":"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","sources":["./src/app/features/auth/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { ToastComponent } from '../../../shared/components/toast/toast.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ToastComponent\r\n  ],\r\n  template: `\r\n    <div class=\"login-container\">\r\n      <div class=\"card login-card\">\r\n        <div class=\"card-header text-center\">\r\n          <h4 class=\"card-title mb-1\">Taarifu Engine Login</h4>\r\n          <small class=\"text-muted\">Administration Portal</small>\r\n        </div>\r\n        \r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-group-text\"><i class=\"bi bi-person\"></i></span>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  id=\"username\"\r\n                  formControlName=\"username\" \r\n                  autocomplete=\"username\"\r\n                  [class.is-invalid]=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\">\r\n                <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('username')?.hasError('required')\">\r\n                  Username is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-group-text\"><i class=\"bi bi-lock\"></i></span>\r\n                <input \r\n                  [type]=\"hidePassword ? 'password' : 'text'\" \r\n                  class=\"form-control\" \r\n                  id=\"password\"\r\n                  formControlName=\"password\" \r\n                  autocomplete=\"current-password\"\r\n                  [class.is-invalid]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\r\n                <button \r\n                  class=\"btn btn-outline-secondary\" \r\n                  type=\"button\" \r\n                  (click)=\"hidePassword = !hidePassword\">\r\n                  <i class=\"bi\" [class.bi-eye]=\"!hidePassword\" [class.bi-eye-slash]=\"hidePassword\"></i>\r\n                </button>\r\n                <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('password')?.hasError('required')\">\r\n                  Password is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              class=\"btn btn-primary w-100\" \r\n              [disabled]=\"loginForm.invalid || isLoading\">\r\n              <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n              {{ isLoading ? 'Logging in...' : 'Login' }}\r\n            </button>\r\n            \r\n            <div class=\"text-center mt-3\">\r\n              <button \r\n                type=\"button\" \r\n                class=\"btn btn-link text-decoration-none\" \r\n                (click)=\"showForgotPassword = !showForgotPassword\">\r\n                <i class=\"bi bi-key me-1\"></i>\r\n                Forgot Password?\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <!-- Forgot Password Form -->\r\n          <div *ngIf=\"showForgotPassword\" class=\"mt-4 p-3 border rounded\">\r\n            <h6 class=\"mb-3\">\r\n              <i class=\"bi bi-key me-2\"></i>\r\n              Reset Password\r\n            </h6>\r\n            <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onForgotPasswordSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"resetEmail\" class=\"form-label\">Email Address</label>\r\n                <div class=\"input-group\">\r\n                  <span class=\"input-group-text\"><i class=\"bi bi-envelope\"></i></span>\r\n                  <input \r\n                    type=\"email\" \r\n                    class=\"form-control\" \r\n                    id=\"resetEmail\"\r\n                    formControlName=\"email\" \r\n                    placeholder=\"Enter your email address\"\r\n                    [class.is-invalid]=\"forgotPasswordForm.get('email')?.invalid && forgotPasswordForm.get('email')?.touched\">\r\n                  <div class=\"invalid-feedback\" *ngIf=\"forgotPasswordForm.get('email')?.hasError('required')\">\r\n                    Email is required\r\n                  </div>\r\n                  <div class=\"invalid-feedback\" *ngIf=\"forgotPasswordForm.get('email')?.hasError('email')\">\r\n                    Please enter a valid email address\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"d-flex gap-2\">\r\n                <button \r\n                  type=\"submit\" \r\n                  class=\"btn btn-warning flex-fill\" \r\n                  [disabled]=\"forgotPasswordForm.invalid || isResettingPassword\">\r\n                  <span *ngIf=\"isResettingPassword\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                  <i *ngIf=\"!isResettingPassword\" class=\"bi bi-send me-1\"></i>\r\n                  {{ isResettingPassword ? 'Sending...' : 'Send Reset Link' }}\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  class=\"btn btn-outline-secondary\" \r\n                  (click)=\"showForgotPassword = false\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Toast Notifications -->\r\n      <app-toast></app-toast>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .login-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 100vh;\r\n      background-color: #e9ecef;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .login-card {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n      border: none;\r\n      border-radius: 1rem;\r\n    }\r\n\r\n    .card-header {\r\n      background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\r\n      color: white;\r\n      border-radius: 1rem 1rem 0 0 !important;\r\n      border: none;\r\n    }\r\n\r\n    .card-title {\r\n      color: white;\r\n      font-weight: 600;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  forgotPasswordForm: FormGroup;\r\n  hidePassword = true;\r\n  isLoading = false;\r\n  isResettingPassword = false;\r\n  showForgotPassword = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n    \r\n    // Clear any existing invalid tokens on login page load\r\n    console.log('Login page loaded - clearing any existing tokens');\r\n    this.authService.logout();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      this.isLoading = true;\r\n      const credentials = {\r\n        usernameOrEmail: this.loginForm.value.username,\r\n        password: this.loginForm.value.password,\r\n        rememberMe: false\r\n      };\r\n      \r\n      this.authService.login(credentials).subscribe({\r\n        next: (response) => {\r\n          this.isLoading = false;\r\n          if (response.status) {\r\n            // Check if password change is required\r\n            const currentUser = this.authService.getCurrentUser();\r\n            if (currentUser && currentUser.requirePasswordChange) {\r\n              this.toastService.warning('Password Change Required', 'You must change your password before continuing.');\r\n              this.router.navigate(['/change-password']);\r\n            } else {\r\n              this.router.navigate(['/dashboard']);\r\n            }\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.isLoading = false;\r\n          console.error('Login error:', error);\r\n          \r\n          // Show error toast notification\r\n          this.toastService.error(\r\n            'Login Failed',\r\n            error.error?.message || 'Please check your credentials and try again.'\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onForgotPasswordSubmit() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.isResettingPassword = true;\r\n      const email = this.forgotPasswordForm.value.email;\r\n      \r\n      this.authService.forgotPassword(email).subscribe({\r\n        next: (response) => {\r\n          this.isResettingPassword = false;\r\n          this.toastService.success(\r\n            'Reset Link Sent', \r\n            'If an account with this email exists, a password reset link has been sent to your email address.'\r\n          );\r\n          this.showForgotPassword = false;\r\n          this.forgotPasswordForm.reset();\r\n        },\r\n        error: (error) => {\r\n          this.isResettingPassword = false;\r\n          console.error('Forgot password error:', error);\r\n          \r\n          // Show success message regardless of error for security (don't reveal if email exists)\r\n          // This prevents user enumeration attacks\r\n          this.toastService.success(\r\n            'Reset Link Sent', \r\n            'If an account with this email exists, a password reset link has been sent to your email address.'\r\n          );\r\n          this.showForgotPassword = false;\r\n          this.forgotPasswordForm.reset();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"names":["CommonModule","Validators","ReactiveFormsModule","ToastComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_div_34_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onForgotPasswordSubmit","ɵɵtemplate","LoginComponent_div_34_div_12_Template","LoginComponent_div_34_div_13_Template","LoginComponent_div_34_span_16_Template","LoginComponent_div_34_i_17_Template","LoginComponent_div_34_Template_button_click_19_listener","showForgotPassword","ɵɵadvance","ɵɵproperty","forgotPasswordForm","ɵɵclassProp","tmp_2_0","get","invalid","touched","tmp_3_0","hasError","tmp_4_0","isResettingPassword","ɵɵtextInterpolate1","LoginComponent","constructor","fb","authService","router","toastService","hidePassword","isLoading","loginForm","group","username","required","password","email","console","log","logout","onSubmit","valid","credentials","usernameOrEmail","value","rememberMe","login","subscribe","next","response","status","currentUser","getCurrentUser","requirePasswordChange","warning","navigate","error","message","forgotPassword","success","reset","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","ToastService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","LoginComponent_Template_form_ngSubmit_8_listener","LoginComponent_div_16_Template","LoginComponent_Template_button_click_24_listener","LoginComponent_div_26_Template","LoginComponent_span_28_Template","LoginComponent_Template_button_click_31_listener","LoginComponent_div_34_Template","tmp_1_0","tmp_7_0","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}