{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let WardService = /*#__PURE__*/(() => {\n  class WardService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = 'http://localhost:8080/api/admin/v1';\n    }\n    // Get all wards with pagination\n    getAllWards(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/wards`, {\n        params\n      });\n    }\n    // Search wards\n    searchWards(query, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('q', query).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/wards/search`, {\n        params\n      });\n    }\n    // Get ward by UID\n    getWardByUid(uid) {\n      return this.http.get(`${this.API_URL}/wards/uid/${uid}`);\n    }\n    // Create new ward\n    createWard(ward) {\n      return this.http.post(`${this.API_URL}/wards`, ward);\n    }\n    // Update ward by UID\n    updateWard(uid, ward) {\n      return this.http.put(`${this.API_URL}/wards/uid/${uid}`, ward);\n    }\n    // Delete ward by UID\n    deleteWard(uid) {\n      return this.http.delete(`${this.API_URL}/wards/uid/${uid}`);\n    }\n    // Get ward statistics\n    getWardStats() {\n      return this.http.get(`${this.API_URL}/wards/stats`);\n    }\n    // Get wards by district UID\n    getWardsByDistrictUid(districtUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/wards/district/uid/${districtUid}`, {\n        params\n      });\n    }\n    // Get active wards\n    getActiveWards(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/wards/active`, {\n        params\n      });\n    }\n    // Get wards by status\n    getWardsByStatus(isActive, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/wards/status/${isActive}`, {\n        params\n      });\n    }\n    // Toggle ward status\n    toggleWardStatus(uid) {\n      return this.http.patch(`${this.API_URL}/wards/uid/${uid}/toggle-status`, {});\n    }\n    static {\n      this.ɵfac = function WardService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || WardService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: WardService,\n        factory: WardService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return WardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}