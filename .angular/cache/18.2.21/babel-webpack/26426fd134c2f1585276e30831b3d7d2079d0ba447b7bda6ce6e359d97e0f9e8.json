{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/region.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegionFormComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1, \" Region name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegionFormComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1, \" Region name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegionFormComponent_span_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 41);\n  }\n}\nexport class RegionFormComponent {\n  constructor(fb, regionService, router, route) {\n    this.fb = fb;\n    this.regionService = regionService;\n    this.router = router;\n    this.route = route;\n    this.isEditMode = false;\n    this.isLoading = false;\n    this.regionId = null;\n    this.regionForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      capital: ['', [Validators.maxLength(100)]],\n      population: [null, [Validators.min(0)]],\n      areaSqKm: [null, [Validators.min(0)]],\n      latitude: [null],\n      longitude: [null],\n      commissioner: ['', [Validators.maxLength(100)]],\n      description: ['', [Validators.maxLength(500)]],\n      isActive: [true]\n    });\n  }\n  ngOnInit() {\n    this.regionId = this.route.snapshot.paramMap.get('uid');\n    this.isEditMode = !!this.regionId;\n    if (this.isEditMode && this.regionId) {\n      this.loadRegion(this.regionId);\n    }\n  }\n  loadRegion(uid) {\n    this.isLoading = true;\n    this.regionService.getRegionByUid(uid).subscribe({\n      next: response => {\n        this.isLoading = false;\n        if (response.status) {\n          const region = response.data;\n          this.regionForm.patchValue({\n            name: region.name,\n            capital: region.capital,\n            population: region.population,\n            areaSqKm: region.areaSqKm,\n            latitude: region.latitude,\n            longitude: region.longitude,\n            commissioner: region.commissioner,\n            description: region.description,\n            isActive: region.isActive\n          });\n        }\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error('Error loading region:', error);\n        alert('Error loading region');\n        this.goBack();\n      }\n    });\n  }\n  onSubmit() {\n    if (this.regionForm.valid) {\n      this.isLoading = true;\n      const formData = this.regionForm.value;\n      if (this.isEditMode && this.regionId) {\n        const updateRequest = {\n          name: formData.name,\n          capital: formData.capital,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          commissioner: formData.commissioner,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.regionService.updateRegion(this.regionId, updateRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              alert('Region updated successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error updating region:', error);\n            alert('Error updating region');\n          }\n        });\n      } else {\n        const createRequest = {\n          name: formData.name,\n          capital: formData.capital,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          commissioner: formData.commissioner,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.regionService.createRegion(createRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.success) {\n              alert('Region created successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error creating region:', error);\n            alert('Error creating region');\n          }\n        });\n      }\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n  markFormGroupTouched() {\n    Object.keys(this.regionForm.controls).forEach(key => {\n      const control = this.regionForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n  goBack() {\n    this.router.navigate(['/regions']);\n  }\n  static {\n    this.ɵfac = function RegionFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegionService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegionFormComponent,\n      selectors: [[\"app-region-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 76,\n      vars: 10,\n      consts: [[1, \"container-fluid\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"h3\", \"mb-1\"], [1, \"text-muted\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", \"me-1\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter region name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"capital\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"capital\", \"formControlName\", \"capital\", \"placeholder\", \"Enter capital city\", 1, \"form-control\"], [\"for\", \"population\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"population\", \"formControlName\", \"population\", \"min\", \"0\", \"placeholder\", \"Enter population\", 1, \"form-control\"], [\"for\", \"areaSqKm\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"areaSqKm\", \"formControlName\", \"areaSqKm\", \"min\", \"0\", \"step\", \"0.01\", \"placeholder\", \"Enter area in square kilometers\", 1, \"form-control\"], [\"for\", \"latitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"formControlName\", \"latitude\", \"step\", \"0.000001\", \"placeholder\", \"Enter latitude\", 1, \"form-control\"], [\"for\", \"longitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"formControlName\", \"longitude\", \"step\", \"0.000001\", \"placeholder\", \"Enter longitude\", 1, \"form-control\"], [\"for\", \"commissioner\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"commissioner\", \"formControlName\", \"commissioner\", \"placeholder\", \"Enter commissioner name\", 1, \"form-control\"], [1, \"form-label\"], [1, \"form-check\", \"form-switch\"], [\"type\", \"checkbox\", \"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"form-check-input\"], [\"for\", \"isActive\", 1, \"form-check-label\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter region description\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-end\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function RegionFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function RegionFormComponent_Template_button_click_7_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelement(8, \"i\", 5);\n          i0.ɵɵtext(9, \" Back \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"form\", 10);\n          i0.ɵɵlistener(\"ngSubmit\", function RegionFormComponent_Template_form_ngSubmit_14_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 12)(17, \"div\", 13)(18, \"label\", 14);\n          i0.ɵɵtext(19, \"Region Name \");\n          i0.ɵɵelementStart(20, \"span\", 15);\n          i0.ɵɵtext(21, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(22, \"input\", 16);\n          i0.ɵɵtemplate(23, RegionFormComponent_div_23_Template, 2, 0, \"div\", 17)(24, RegionFormComponent_div_24_Template, 2, 0, \"div\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 12)(26, \"div\", 13)(27, \"label\", 18);\n          i0.ɵɵtext(28, \"Capital\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 19);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(30, \"div\", 11)(31, \"div\", 12)(32, \"div\", 13)(33, \"label\", 20);\n          i0.ɵɵtext(34, \"Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"input\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\", 12)(37, \"div\", 13)(38, \"label\", 22);\n          i0.ɵɵtext(39, \"Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(40, \"input\", 23);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(41, \"div\", 11)(42, \"div\", 12)(43, \"div\", 13)(44, \"label\", 24);\n          i0.ɵɵtext(45, \"Latitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(46, \"input\", 25);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(47, \"div\", 12)(48, \"div\", 13)(49, \"label\", 26);\n          i0.ɵɵtext(50, \"Longitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(51, \"input\", 27);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(52, \"div\", 11)(53, \"div\", 12)(54, \"div\", 13)(55, \"label\", 28);\n          i0.ɵɵtext(56, \"Regional Commissioner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(57, \"input\", 29);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(58, \"div\", 12)(59, \"div\", 13)(60, \"label\", 30);\n          i0.ɵɵtext(61, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(62, \"div\", 31);\n          i0.ɵɵelement(63, \"input\", 32);\n          i0.ɵɵelementStart(64, \"label\", 33);\n          i0.ɵɵtext(65, \" Active \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(66, \"div\", 13)(67, \"label\", 34);\n          i0.ɵɵtext(68, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(69, \"textarea\", 35);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(70, \"div\", 36)(71, \"button\", 37);\n          i0.ɵɵlistener(\"click\", function RegionFormComponent_Template_button_click_71_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(72, \" Cancel \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(73, \"button\", 38);\n          i0.ɵɵtemplate(74, RegionFormComponent_span_74_Template, 1, 0, \"span\", 39);\n          i0.ɵɵtext(75);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Region\" : \"Create Region\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update region information\" : \"Add a new region to the system\");\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.regionForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.regionForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.regionForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.regionForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.regionForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(49);\n          i0.ɵɵproperty(\"disabled\", ctx.regionForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Saving...\" : ctx.isEditMode ? \"Update Region\" : \"Create Region\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".container-fluid[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  color: #495057;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #dc3545 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvcmVnaW9ucy9yZWdpb24tZm9ybS9yZWdpb24tZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FBQU47O0FBR0k7RUFDRSxZQUFBO0VBQ0EsbURBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUFOOztBQUdJO0VBQ0UseUJBQUE7QUFBTiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5jb250YWluZXItZmx1aWQge1xuICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgICB9XG5cbiAgICAuY2FyZCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgfVxuXG4gICAgLmZvcm0tbGFiZWwge1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGNvbG9yOiAjNDk1MDU3O1xuICAgIH1cblxuICAgIC50ZXh0LWRhbmdlciB7XG4gICAgICBjb2xvcjogI2RjMzU0NSAhaW1wb3J0YW50O1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","RegionFormComponent","constructor","fb","regionService","router","route","isEditMode","isLoading","regionId","regionForm","group","name","required","maxLength","capital","population","min","areaSqKm","latitude","longitude","commissioner","description","isActive","ngOnInit","snapshot","paramMap","get","loadRegion","uid","getRegionByUid","subscribe","next","response","status","region","data","patchValue","error","console","alert","goBack","onSubmit","valid","formData","value","updateRequest","updateRegion","createRequest","createRegion","success","markFormGroupTouched","Object","keys","controls","forEach","key","control","markAsTouched","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","RegionService","i3","Router","ActivatedRoute","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegionFormComponent_Template","rf","ctx","ɵɵlistener","RegionFormComponent_Template_button_click_7_listener","RegionFormComponent_Template_form_ngSubmit_14_listener","ɵɵtemplate","RegionFormComponent_div_23_Template","RegionFormComponent_div_24_Template","RegionFormComponent_Template_button_click_71_listener","RegionFormComponent_span_74_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","ɵɵtextInterpolate1","i4","NgIf","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\regions\\region-form\\region-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { Region, CreateRegionRequest, UpdateRegionRequest } from '../../../core/models/region.model';\r\n\r\n@Component({\r\n  selector: 'app-region-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Region' : 'Create Region' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update region information' : 'Add a new region to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"regionForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"name\" class=\"form-label\">Region Name <span class=\"text-danger\">*</span></label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"name\"\r\n                        formControlName=\"name\"\r\n                        [class.is-invalid]=\"regionForm.get('name')?.invalid && regionForm.get('name')?.touched\"\r\n                        placeholder=\"Enter region name\">\r\n                      <div class=\"invalid-feedback\" *ngIf=\"regionForm.get('name')?.hasError('required')\">\r\n                        Region name is required\r\n                      </div>\r\n                      <div class=\"invalid-feedback\" *ngIf=\"regionForm.get('name')?.hasError('maxlength')\">\r\n                        Region name must not exceed 100 characters\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"capital\" class=\"form-label\">Capital</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"capital\"\r\n                        formControlName=\"capital\"\r\n                        placeholder=\"Enter capital city\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"population\" class=\"form-label\">Population</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"population\"\r\n                        formControlName=\"population\"\r\n                        min=\"0\"\r\n                        placeholder=\"Enter population\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"areaSqKm\"\r\n                        formControlName=\"areaSqKm\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        placeholder=\"Enter area in square kilometers\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"latitude\"\r\n                        formControlName=\"latitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter latitude\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                      <input \r\n                        type=\"number\" \r\n                        class=\"form-control\" \r\n                        id=\"longitude\"\r\n                        formControlName=\"longitude\"\r\n                        step=\"0.000001\"\r\n                        placeholder=\"Enter longitude\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"commissioner\" class=\"form-label\">Regional Commissioner</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        id=\"commissioner\"\r\n                        formControlName=\"commissioner\"\r\n                        placeholder=\"Enter commissioner name\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label class=\"form-label\">Status</label>\r\n                      <div class=\"form-check form-switch\">\r\n                        <input \r\n                          class=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          id=\"isActive\"\r\n                          formControlName=\"isActive\">\r\n                        <label class=\"form-check-label\" for=\"isActive\">\r\n                          Active\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"description\" class=\"form-label\">Description</label>\r\n                  <textarea \r\n                    class=\"form-control\" \r\n                    id=\"description\"\r\n                    formControlName=\"description\"\r\n                    rows=\"3\"\r\n                    placeholder=\"Enter region description\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"d-flex justify-content-end gap-2\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n                    Cancel\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\" \r\n                    class=\"btn btn-primary\" \r\n                    [disabled]=\"regionForm.invalid || isLoading\">\r\n                    <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    {{ isLoading ? 'Saving...' : (isEditMode ? 'Update Region' : 'Create Region') }}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container-fluid {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n      color: #495057;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n  `]\r\n})\r\nexport class RegionFormComponent implements OnInit {\r\n  regionForm: FormGroup;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  regionId: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private regionService: RegionService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.regionForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      capital: ['', [Validators.maxLength(100)]],\r\n      population: [null, [Validators.min(0)]],\r\n      areaSqKm: [null, [Validators.min(0)]],\r\n      latitude: [null],\r\n      longitude: [null],\r\n      commissioner: ['', [Validators.maxLength(100)]],\r\n      description: ['', [Validators.maxLength(500)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.regionId = this.route.snapshot.paramMap.get('uid');\r\n    this.isEditMode = !!this.regionId;\r\n\r\n    if (this.isEditMode && this.regionId) {\r\n      this.loadRegion(this.regionId);\r\n    }\r\n  }\r\n\r\n  loadRegion(uid: string) {\r\n    this.isLoading = true;\r\n    this.regionService.getRegionByUid(uid).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        if (response.status) {\r\n          const region = response.data;\r\n          this.regionForm.patchValue({\r\n            name: region.name,\r\n            capital: region.capital,\r\n            population: region.population,\r\n            areaSqKm: region.areaSqKm,\r\n            latitude: region.latitude,\r\n            longitude: region.longitude,\r\n            commissioner: region.commissioner,\r\n            description: region.description,\r\n            isActive: region.isActive\r\n          });\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading region:', error);\r\n        alert('Error loading region');\r\n        this.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.regionForm.valid) {\r\n      this.isLoading = true;\r\n      const formData = this.regionForm.value;\r\n\r\n      if (this.isEditMode && this.regionId) {\r\n        const updateRequest: UpdateRegionRequest = {\r\n          name: formData.name,\r\n          capital: formData.capital,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          commissioner: formData.commissioner,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.regionService.updateRegion(this.regionId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              alert('Region updated successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error updating region:', error);\r\n            alert('Error updating region');\r\n          }\r\n        });\r\n      } else {\r\n        const createRequest: CreateRegionRequest = {\r\n          name: formData.name,\r\n          capital: formData.capital,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          commissioner: formData.commissioner,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.regionService.createRegion(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.success) {\r\n              alert('Region created successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error creating region:', error);\r\n            alert('Error creating region');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched() {\r\n    Object.keys(this.regionForm.controls).forEach(key => {\r\n      const control = this.regionForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/regions']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}