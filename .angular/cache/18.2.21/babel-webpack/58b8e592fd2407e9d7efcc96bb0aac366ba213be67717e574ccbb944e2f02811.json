{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/constituency.service\";\nimport * as i4 from \"../../../core/services/region.service\";\nimport * as i5 from \"../../../core/services/district.service\";\nimport * as i6 from \"../../../core/services/toast.service\";\nimport * as i7 from \"@angular/common\";\nfunction ConstituencyFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Constituency name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Constituency name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 52);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(region_r1.name);\n  }\n}\nfunction ConstituencyFormComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Please select a region \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 52);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const district_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(district_r2.name);\n  }\n}\nfunction ConstituencyFormComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Please select a district \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Headquarters is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtext(1, \" Headquarters must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_span_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 53);\n  }\n}\nfunction ConstituencyFormComponent_i_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 54);\n  }\n}\nexport class ConstituencyFormComponent {\n  constructor(fb, route, router, constituencyService, regionService, districtService, toastService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.constituencyService = constituencyService;\n    this.regionService = regionService;\n    this.districtService = districtService;\n    this.toastService = toastService;\n    this.isEditMode = false;\n    this.isSubmitting = false;\n    this.constituencyId = null;\n    this.regions = [];\n    this.districts = [];\n    this.constituencyForm = this.createForm();\n  }\n  ngOnInit() {\n    this.loadRegions();\n    // Check if we're in edit mode\n    this.route.params.subscribe(params => {\n      if (params['uid']) {\n        this.isEditMode = true;\n        this.constituencyId = params['uid'];\n        this.loadConstituency();\n      }\n    });\n  }\n  createForm() {\n    return this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      regionId: ['', Validators.required],\n      districtId: ['', Validators.required],\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\n      population: [null],\n      areaSqKm: [null],\n      latitude: [null],\n      longitude: [null],\n      description: [''],\n      isActive: [true]\n    });\n  }\n  loadRegions() {\n    this.regionService.getAllRegions(0, 1000).subscribe({\n      next: response => {\n        if (response.status) {\n          this.regions = response.data;\n        } else {\n          this.toastService.error('Error', 'Failed to load regions');\n        }\n      },\n      error: error => {\n        console.error('Error loading regions:', error);\n        this.toastService.error('Error', 'Failed to load regions. Please try again.');\n      }\n    });\n  }\n  onRegionChange() {\n    const regionId = this.constituencyForm.get('regionId')?.value;\n    this.constituencyForm.get('districtId')?.setValue('');\n    this.districts = [];\n    if (regionId) {\n      // Find the selected region to get its UID\n      const selectedRegion = this.regions.find(region => region.id === Number(regionId));\n      if (selectedRegion) {\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\n          next: response => {\n            if (response.status) {\n              this.districts = response.data;\n            } else {\n              this.toastService.error('Error', 'Failed to load districts');\n            }\n          },\n          error: error => {\n            console.error('Error loading districts:', error);\n            this.toastService.error('Error', 'Failed to load districts. Please try again.');\n          }\n        });\n      }\n    }\n  }\n  loadConstituency() {\n    if (!this.constituencyId) return;\n    this.constituencyService.getConstituencyByUid(this.constituencyId).subscribe({\n      next: response => {\n        if (response.status) {\n          const constituency = response.data;\n          this.constituencyForm.patchValue({\n            name: constituency.name,\n            regionId: constituency.regionId,\n            districtId: constituency.districtId,\n            headquarters: constituency.headquarters,\n            population: constituency.population,\n            areaSqKm: constituency.areaSqKm,\n            latitude: constituency.latitude,\n            longitude: constituency.longitude,\n            description: constituency.description,\n            isActive: constituency.isActive\n          });\n          // Load districts for the selected region\n          if (constituency.regionId) {\n            this.onRegionChange();\n          }\n        } else {\n          this.toastService.error('Error', 'Failed to load constituency');\n          this.router.navigate(['/constituencies']);\n        }\n      },\n      error: error => {\n        console.error('Error loading constituency:', error);\n        this.toastService.error('Error', 'Failed to load constituency. Please try again.');\n        this.router.navigate(['/constituencies']);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.constituencyForm.valid) {\n      this.isSubmitting = true;\n      const formData = this.constituencyForm.value;\n      if (this.isEditMode && this.constituencyId) {\n        const updateRequest = {\n          name: formData.name,\n          districtId: formData.districtId,\n          headquarters: formData.headquarters,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.constituencyService.updateConstituency(this.constituencyId, updateRequest).subscribe({\n          next: response => {\n            this.isSubmitting = false;\n            if (response.status) {\n              this.toastService.success('Success', 'Constituency updated successfully');\n              this.router.navigate(['/constituencies']);\n            } else {\n              this.toastService.error('Error', 'Failed to update constituency');\n            }\n          },\n          error: error => {\n            this.isSubmitting = false;\n            console.error('Error updating constituency:', error);\n            this.toastService.error('Error', 'Failed to update constituency. Please try again.');\n          }\n        });\n      } else {\n        const createRequest = {\n          name: formData.name,\n          districtId: formData.districtId,\n          headquarters: formData.headquarters,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.constituencyService.createConstituency(createRequest).subscribe({\n          next: response => {\n            this.isSubmitting = false;\n            if (response.status) {\n              this.toastService.success('Success', 'Constituency created successfully');\n              this.router.navigate(['/constituencies']);\n            } else {\n              this.toastService.error('Error', 'Failed to create constituency');\n            }\n          },\n          error: error => {\n            this.isSubmitting = false;\n            console.error('Error creating constituency:', error);\n            this.toastService.error('Error', 'Failed to create constituency. Please try again.');\n          }\n        });\n      }\n    } else {\n      this.toastService.warning('Validation Error', 'Please fill in all required fields correctly');\n      this.constituencyForm.markAllAsTouched();\n    }\n  }\n  static {\n    this.ɵfac = function ConstituencyFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ConstituencyFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ConstituencyService), i0.ɵɵdirectiveInject(i4.RegionService), i0.ɵɵdirectiveInject(i5.DistrictService), i0.ɵɵdirectiveInject(i6.ToastService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ConstituencyFormComponent,\n      selectors: [[\"app-constituency-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 133,\n      vars: 23,\n      consts: [[1, \"constituency-form-container\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"h3\", \"mb-1\"], [1, \"text-muted\"], [\"type\", \"button\", \"routerLink\", \"/constituencies\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"bi\", \"bi-arrow-left\", \"me-1\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\", \"mb-0\"], [1, \"bi\", \"bi-flag\", \"me-2\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"name\", 1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter constituency name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"regionId\", 1, \"form-label\"], [\"id\", \"regionId\", \"formControlName\", \"regionId\", 1, \"form-select\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"districtId\", 1, \"form-label\"], [\"id\", \"districtId\", \"formControlName\", \"districtId\", 1, \"form-select\"], [\"for\", \"headquarters\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"headquarters\", \"formControlName\", \"headquarters\", \"placeholder\", \"Enter headquarters\", 1, \"form-control\"], [\"for\", \"population\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"population\", \"formControlName\", \"population\", \"placeholder\", \"Enter population\", \"min\", \"0\", 1, \"form-control\"], [\"for\", \"areaSqKm\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"areaSqKm\", \"formControlName\", \"areaSqKm\", \"placeholder\", \"Enter area in square kilometers\", \"min\", \"0\", \"step\", \"0.01\", 1, \"form-control\"], [\"for\", \"latitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"formControlName\", \"latitude\", \"placeholder\", \"Enter latitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"longitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"formControlName\", \"longitude\", \"placeholder\", \"Enter longitude\", \"step\", \"0.000001\", 1, \"form-control\"], [1, \"col-12\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter constituency description\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"form-check-input\"], [\"for\", \"isActive\", 1, \"form-check-label\"], [1, \"d-flex\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"bi bi-check-circle me-1\", 4, \"ngIf\"], [1, \"col-lg-4\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"list-unstyled\"], [1, \"bi\", \"bi-check-circle\", \"text-success\", \"me-2\"], [1, \"bi\", \"bi-lightbulb\", \"text-warning\", \"me-2\"], [1, \"invalid-feedback\"], [3, \"value\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"]],\n      template: function ConstituencyFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵelement(8, \"i\", 5);\n          i0.ɵɵtext(9, \" Back to List \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"h5\", 10);\n          i0.ɵɵelement(15, \"i\", 11);\n          i0.ɵɵtext(16, \" Constituency Information \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function ConstituencyFormComponent_Template_form_ngSubmit_18_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(19, \"div\", 14)(20, \"div\", 15)(21, \"label\", 16);\n          i0.ɵɵtext(22, \"Constituency Name \");\n          i0.ɵɵelementStart(23, \"span\", 17);\n          i0.ɵɵtext(24, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"input\", 18);\n          i0.ɵɵtemplate(26, ConstituencyFormComponent_div_26_Template, 2, 0, \"div\", 19)(27, ConstituencyFormComponent_div_27_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 20);\n          i0.ɵɵtext(30, \"Region \");\n          i0.ɵɵelementStart(31, \"span\", 17);\n          i0.ɵɵtext(32, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"select\", 21);\n          i0.ɵɵlistener(\"change\", function ConstituencyFormComponent_Template_select_change_33_listener() {\n            return ctx.onRegionChange();\n          });\n          i0.ɵɵelementStart(34, \"option\", 22);\n          i0.ɵɵtext(35, \"Select a region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, ConstituencyFormComponent_option_36_Template, 2, 2, \"option\", 23);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(37, ConstituencyFormComponent_div_37_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 15)(39, \"label\", 24);\n          i0.ɵɵtext(40, \"District \");\n          i0.ɵɵelementStart(41, \"span\", 17);\n          i0.ɵɵtext(42, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"select\", 25)(44, \"option\", 22);\n          i0.ɵɵtext(45, \"Select a district\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(46, ConstituencyFormComponent_option_46_Template, 2, 2, \"option\", 23);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(47, ConstituencyFormComponent_div_47_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"div\", 15)(49, \"label\", 26);\n          i0.ɵɵtext(50, \"Headquarters \");\n          i0.ɵɵelementStart(51, \"span\", 17);\n          i0.ɵɵtext(52, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(53, \"input\", 27);\n          i0.ɵɵtemplate(54, ConstituencyFormComponent_div_54_Template, 2, 0, \"div\", 19)(55, ConstituencyFormComponent_div_55_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"div\", 15)(57, \"label\", 28);\n          i0.ɵɵtext(58, \"Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(59, \"input\", 29);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"div\", 15)(61, \"label\", 30);\n          i0.ɵɵtext(62, \"Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(63, \"input\", 31);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(64, \"div\", 15)(65, \"label\", 32);\n          i0.ɵɵtext(66, \"Latitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(67, \"input\", 33);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(68, \"div\", 15)(69, \"label\", 34);\n          i0.ɵɵtext(70, \"Longitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(71, \"input\", 35);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(72, \"div\", 36)(73, \"label\", 37);\n          i0.ɵɵtext(74, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(75, \"textarea\", 38);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"div\", 36)(77, \"div\", 39);\n          i0.ɵɵelement(78, \"input\", 40);\n          i0.ɵɵelementStart(79, \"label\", 41);\n          i0.ɵɵtext(80, \" Active Constituency \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(81, \"div\", 36)(82, \"div\", 42)(83, \"button\", 43);\n          i0.ɵɵtemplate(84, ConstituencyFormComponent_span_84_Template, 1, 0, \"span\", 44)(85, ConstituencyFormComponent_i_85_Template, 1, 0, \"i\", 45);\n          i0.ɵɵtext(86);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"button\", 4);\n          i0.ɵɵtext(88, \" Cancel \");\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(89, \"div\", 46)(90, \"div\", 8)(91, \"div\", 9)(92, \"h5\", 10);\n          i0.ɵɵelement(93, \"i\", 47);\n          i0.ɵɵtext(94, \" Guidelines \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(95, \"div\", 12)(96, \"h6\");\n          i0.ɵɵtext(97, \"Creating a Constituency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(98, \"ul\", 48)(99, \"li\");\n          i0.ɵɵelement(100, \"i\", 49);\n          i0.ɵɵtext(101, \"Provide a unique constituency name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(102, \"li\");\n          i0.ɵɵelement(103, \"i\", 49);\n          i0.ɵɵtext(104, \"Select the appropriate region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(105, \"li\");\n          i0.ɵɵelement(106, \"i\", 49);\n          i0.ɵɵtext(107, \"Specify the headquarters location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(108, \"li\");\n          i0.ɵɵelement(109, \"i\", 49);\n          i0.ɵɵtext(110, \"Add population and area data if available\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(111, \"li\");\n          i0.ɵɵelement(112, \"i\", 49);\n          i0.ɵɵtext(113, \"Include coordinates for mapping\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(114, \"li\");\n          i0.ɵɵelement(115, \"i\", 49);\n          i0.ɵɵtext(116, \"Add the Member of Parliament name\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(117, \"hr\");\n          i0.ɵɵelementStart(118, \"h6\");\n          i0.ɵɵtext(119, \"Best Practices\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(120, \"ul\", 48)(121, \"li\");\n          i0.ɵɵelement(122, \"i\", 50);\n          i0.ɵɵtext(123, \"Use clear, descriptive names\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(124, \"li\");\n          i0.ɵɵelement(125, \"i\", 50);\n          i0.ɵɵtext(126, \"Ensure headquarters is accurate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(127, \"li\");\n          i0.ɵɵelement(128, \"i\", 50);\n          i0.ɵɵtext(129, \"Verify region selection\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(130, \"li\");\n          i0.ɵɵelement(131, \"i\", 50);\n          i0.ɵɵtext(132, \"Include relevant description\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_11_0;\n          let tmp_12_0;\n          let tmp_13_0;\n          let tmp_14_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Constituency\" : \"Create New Constituency\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update constituency information\" : \"Add a new constituency to the system\");\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"formGroup\", ctx.constituencyForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_6_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_8_0.hasError(\"required\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_9_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.districts);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_11_0.hasError(\"required\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_12_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_12_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_13_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_13_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_14_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(28);\n          i0.ɵɵproperty(\"disabled\", ctx.constituencyForm.invalid || ctx.isSubmitting);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isSubmitting);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isSubmitting);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isSubmitting ? \"Saving...\" : ctx.isEditMode ? \"Update Constituency\" : \"Create Constituency\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i7.NgForOf, i7.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, RouterModule, i2.RouterLink],\n      styles: [\".constituency-form-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #dee2e6;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #dc3545 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvY29uc3RpdHVlbmNpZXMvY29uc3RpdHVlbmN5LWZvcm0vY29uc3RpdHVlbmN5LWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQUFOOztBQUdJO0VBQ0UsWUFBQTtFQUNBLG1EQUFBO0FBQU47O0FBR0k7RUFDRSx5QkFBQTtFQUNBLGdDQUFBO0FBQU47O0FBR0k7RUFDRSxnQkFBQTtBQUFOOztBQUdJO0VBQ0UseUJBQUE7QUFBTiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5jb25zdGl0dWVuY3ktZm9ybS1jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgICB9XG5cbiAgICAuY2FyZCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgfVxuXG4gICAgLmNhcmQtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZTJlNjtcbiAgICB9XG5cbiAgICAuZm9ybS1sYWJlbCB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgIH1cblxuICAgIC50ZXh0LWRhbmdlciB7XG4gICAgICBjb2xvcjogI2RjMzU0NSAhaW1wb3J0YW50O1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","RouterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","id","ɵɵadvance","ɵɵtextInterpolate","name","district_r2","ɵɵelement","ConstituencyFormComponent","constructor","fb","route","router","constituencyService","regionService","districtService","toastService","isEditMode","isSubmitting","constituencyId","regions","districts","constituencyForm","createForm","ngOnInit","loadRegions","params","subscribe","loadConstituency","group","required","maxLength","regionId","districtId","headquarters","population","areaSqKm","latitude","longitude","description","isActive","getAllRegions","next","response","status","data","error","console","onRegionChange","get","value","setValue","selectedRegion","find","region","Number","getDistrictsByRegionUid","uid","getConstituencyByUid","constituency","patchValue","navigate","onSubmit","valid","formData","updateRequest","updateConstituency","success","createRequest","createConstituency","warning","markAllAsTouched","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","ConstituencyService","i4","RegionService","i5","DistrictService","i6","ToastService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ConstituencyFormComponent_Template","rf","ctx","ɵɵlistener","ConstituencyFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","ConstituencyFormComponent_div_26_Template","ConstituencyFormComponent_div_27_Template","ConstituencyFormComponent_Template_select_change_33_listener","ConstituencyFormComponent_option_36_Template","ConstituencyFormComponent_div_37_Template","ConstituencyFormComponent_option_46_Template","ConstituencyFormComponent_div_47_Template","ConstituencyFormComponent_div_54_Template","ConstituencyFormComponent_div_55_Template","ConstituencyFormComponent_span_84_Template","ConstituencyFormComponent_i_85_Template","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_8_0","tmp_9_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0","ɵɵtextInterpolate1","i7","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","RouterLink","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\constituencies\\constituency-form\\constituency-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { ConstituencyService } from '../../../core/services/constituency.service';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\nimport { Constituency, CreateConstituencyRequest, UpdateConstituencyRequest } from '../../../core/models/constituency.model';\r\nimport { Region } from '../../../core/models/region.model';\r\nimport { District } from '../../../core/models/district.model';\r\n\r\n@Component({\r\n  selector: 'app-constituency-form',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n  template: `\r\n    <div class=\"constituency-form-container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Constituency' : 'Create New Constituency' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update constituency information' : 'Add a new constituency to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" routerLink=\"/constituencies\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back to List\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-flag me-2\"></i>\r\n                Constituency Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"constituencyForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row g-3\">\r\n                  <!-- Basic Information -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"name\" class=\"form-label\">Constituency Name <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"name\"\r\n                      formControlName=\"name\"\r\n                      placeholder=\"Enter constituency name\"\r\n                      [class.is-invalid]=\"constituencyForm.get('name')?.invalid && constituencyForm.get('name')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('name')?.hasError('required')\">\r\n                      Constituency name is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('name')?.hasError('maxlength')\">\r\n                      Constituency name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"regionId\" class=\"form-label\">Region <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"regionId\"\r\n                      formControlName=\"regionId\"\r\n                      (change)=\"onRegionChange()\"\r\n                      [class.is-invalid]=\"constituencyForm.get('regionId')?.invalid && constituencyForm.get('regionId')?.touched\">\r\n                      <option value=\"\">Select a region</option>\r\n                      <option *ngFor=\"let region of regions\" [value]=\"region.id\">{{ region.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('regionId')?.hasError('required')\">\r\n                      Please select a region\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"districtId\" class=\"form-label\">District <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"districtId\"\r\n                      formControlName=\"districtId\"\r\n                      [class.is-invalid]=\"constituencyForm.get('districtId')?.invalid && constituencyForm.get('districtId')?.touched\">\r\n                      <option value=\"\">Select a district</option>\r\n                      <option *ngFor=\"let district of districts\" [value]=\"district.id\">{{ district.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('districtId')?.hasError('required')\">\r\n                      Please select a district\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"headquarters\" class=\"form-label\">Headquarters <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"headquarters\"\r\n                      formControlName=\"headquarters\"\r\n                      placeholder=\"Enter headquarters\"\r\n                      [class.is-invalid]=\"constituencyForm.get('headquarters')?.invalid && constituencyForm.get('headquarters')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('headquarters')?.hasError('required')\">\r\n                      Headquarters is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"constituencyForm.get('headquarters')?.hasError('maxlength')\">\r\n                      Headquarters must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Population and Area -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"population\" class=\"form-label\">Population</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"population\"\r\n                      formControlName=\"population\"\r\n                      placeholder=\"Enter population\"\r\n                      min=\"0\">\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"areaSqKm\"\r\n                      formControlName=\"areaSqKm\"\r\n                      placeholder=\"Enter area in square kilometers\"\r\n                      min=\"0\"\r\n                      step=\"0.01\">\r\n                  </div>\r\n\r\n                  <!-- Coordinates -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"latitude\"\r\n                      formControlName=\"latitude\"\r\n                      placeholder=\"Enter latitude\"\r\n                      step=\"0.000001\">\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"longitude\"\r\n                      formControlName=\"longitude\"\r\n                      placeholder=\"Enter longitude\"\r\n                      step=\"0.000001\">\r\n                  </div>\r\n\r\n                  <!-- Description -->\r\n                  <div class=\"col-12\">\r\n                    <label for=\"description\" class=\"form-label\">Description</label>\r\n                    <textarea \r\n                      class=\"form-control\" \r\n                      id=\"description\"\r\n                      formControlName=\"description\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Enter constituency description\"></textarea>\r\n                  </div>\r\n\r\n                  <!-- Status -->\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-check\">\r\n                      <input \r\n                        class=\"form-check-input\" \r\n                        type=\"checkbox\" \r\n                        id=\"isActive\"\r\n                        formControlName=\"isActive\">\r\n                      <label class=\"form-check-label\" for=\"isActive\">\r\n                        Active Constituency\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Submit Button -->\r\n                  <div class=\"col-12\">\r\n                    <div class=\"d-flex gap-2\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary\"\r\n                        [disabled]=\"constituencyForm.invalid || isSubmitting\">\r\n                        <span *ngIf=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                        <i *ngIf=\"!isSubmitting\" class=\"bi bi-check-circle me-1\"></i>\r\n                        {{ isSubmitting ? 'Saving...' : (isEditMode ? 'Update Constituency' : 'Create Constituency') }}\r\n                      </button>\r\n                      <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-outline-secondary\"\r\n                        routerLink=\"/constituencies\">\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Guidelines\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Creating a Constituency</h6>\r\n              <ul class=\"list-unstyled\">\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Provide a unique constituency name</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Select the appropriate region</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Specify the headquarters location</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Add population and area data if available</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Include coordinates for mapping</li>\r\n                <li><i class=\"bi bi-check-circle text-success me-2\"></i>Add the Member of Parliament name</li>\r\n              </ul>\r\n              \r\n              <hr>\r\n              \r\n              <h6>Best Practices</h6>\r\n              <ul class=\"list-unstyled\">\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Use clear, descriptive names</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Ensure headquarters is accurate</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Verify region selection</li>\r\n                <li><i class=\"bi bi-lightbulb text-warning me-2\"></i>Include relevant description</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .constituency-form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n  `]\r\n})\r\nexport class ConstituencyFormComponent implements OnInit {\r\n  constituencyForm: FormGroup;\r\n  isEditMode = false;\r\n  isSubmitting = false;\r\n  constituencyId: string | null = null;\r\n  regions: Region[] = [];\r\n  districts: District[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private constituencyService: ConstituencyService,\r\n    private regionService: RegionService,\r\n    private districtService: DistrictService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.constituencyForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadRegions();\r\n    \r\n    // Check if we're in edit mode\r\n    this.route.params.subscribe(params => {\r\n      if (params['uid']) {\r\n        this.isEditMode = true;\r\n        this.constituencyId = params['uid'];\r\n        this.loadConstituency();\r\n      }\r\n    });\r\n  }\r\n\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      regionId: ['', Validators.required],\r\n      districtId: ['', Validators.required],\r\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\r\n      population: [null],\r\n      areaSqKm: [null],\r\n      latitude: [null],\r\n      longitude: [null],\r\n      description: [''],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  private loadRegions() {\r\n    this.regionService.getAllRegions(0, 1000).subscribe({\r\n      next: (response) => {\r\n        if (response.status) {\r\n          this.regions = response.data;\r\n        } else {\r\n          this.toastService.error('Error', 'Failed to load regions');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading regions:', error);\r\n        this.toastService.error('Error', 'Failed to load regions. Please try again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  onRegionChange() {\r\n    const regionId = this.constituencyForm.get('regionId')?.value;\r\n    this.constituencyForm.get('districtId')?.setValue('');\r\n    this.districts = [];\r\n    \r\n    if (regionId) {\r\n      // Find the selected region to get its UID\r\n      const selectedRegion = this.regions.find(region => region.id === Number(regionId));\r\n      if (selectedRegion) {\r\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\r\n          next: (response) => {\r\n            if (response.status) {\r\n              this.districts = response.data;\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to load districts');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Error loading districts:', error);\r\n            this.toastService.error('Error', 'Failed to load districts. Please try again.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadConstituency() {\r\n    if (!this.constituencyId) return;\r\n\r\n    this.constituencyService.getConstituencyByUid(this.constituencyId).subscribe({\r\n      next: (response) => {\r\n        if (response.status) {\r\n          const constituency = response.data;\r\n          this.constituencyForm.patchValue({\r\n            name: constituency.name,\r\n            regionId: constituency.regionId,\r\n            districtId: constituency.districtId,\r\n            headquarters: constituency.headquarters,\r\n            population: constituency.population,\r\n            areaSqKm: constituency.areaSqKm,\r\n            latitude: constituency.latitude,\r\n            longitude: constituency.longitude,\r\n            description: constituency.description,\r\n            isActive: constituency.isActive\r\n          });\r\n          \r\n          // Load districts for the selected region\r\n          if (constituency.regionId) {\r\n            this.onRegionChange();\r\n          }\r\n        } else {\r\n          this.toastService.error('Error', 'Failed to load constituency');\r\n          this.router.navigate(['/constituencies']);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading constituency:', error);\r\n        this.toastService.error('Error', 'Failed to load constituency. Please try again.');\r\n        this.router.navigate(['/constituencies']);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.constituencyForm.valid) {\r\n      this.isSubmitting = true;\r\n      const formData = this.constituencyForm.value;\r\n\r\n      if (this.isEditMode && this.constituencyId) {\r\n        const updateRequest: UpdateConstituencyRequest = {\r\n          name: formData.name,\r\n          districtId: formData.districtId,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.constituencyService.updateConstituency(this.constituencyId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isSubmitting = false;\r\n            if (response.status) {\r\n              this.toastService.success('Success', 'Constituency updated successfully');\r\n              this.router.navigate(['/constituencies']);\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to update constituency');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isSubmitting = false;\r\n            console.error('Error updating constituency:', error);\r\n            this.toastService.error('Error', 'Failed to update constituency. Please try again.');\r\n          }\r\n        });\r\n      } else {\r\n        const createRequest: CreateConstituencyRequest = {\r\n          name: formData.name,\r\n          districtId: formData.districtId,\r\n          headquarters: formData.headquarters,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.constituencyService.createConstituency(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isSubmitting = false;\r\n            if (response.status) {\r\n              this.toastService.success('Success', 'Constituency created successfully');\r\n              this.router.navigate(['/constituencies']);\r\n            } else {\r\n              this.toastService.error('Error', 'Failed to create constituency');\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isSubmitting = false;\r\n            console.error('Error creating constituency:', error);\r\n            this.toastService.error('Error', 'Failed to create constituency. Please try again.');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.toastService.warning('Validation Error', 'Please fill in all required fields correctly');\r\n      this.constituencyForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}