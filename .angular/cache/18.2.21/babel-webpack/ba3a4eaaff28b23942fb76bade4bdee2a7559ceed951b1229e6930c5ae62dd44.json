{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nlet DistrictListComponent = class DistrictListComponent {\n  constructor(districtService, authService, router, toastService) {\n    this.districtService = districtService;\n    this.authService = authService;\n    this.router = router;\n    this.toastService = toastService;\n    this.districts = [];\n    this.searchTerm = '';\n    this.isLoading = false;\n    this.currentPage = 0;\n    this.pageSize = 10;\n    this.totalPages = 0;\n    this.totalElements = 0;\n    this.sortBy = 'name';\n    this.sortDir = 'asc';\n  }\n  ngOnInit() {\n    console.log('DistrictListComponent initialized');\n    // Debug authentication\n    const token = this.authService.getToken();\n    const isAuthenticated = this.authService.isAuthenticated();\n    const currentUser = this.authService.getCurrentUser();\n    console.log('Auth Debug Info:');\n    console.log('- Token exists:', !!token);\n    console.log('- Token value:', token ? token.substring(0, 50) + '...' : 'No token');\n    console.log('- Is authenticated:', isAuthenticated);\n    console.log('- Current user:', currentUser);\n    if (!isAuthenticated) {\n      console.error('User not authenticated! Redirecting to login...');\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.loadDistricts();\n  }\n  loadDistricts() {\n    this.isLoading = true;\n    const observable = this.searchTerm ? this.districtService.searchDistricts(this.searchTerm, this.currentPage, this.pageSize, this.sortBy, this.sortDir) : this.districtService.getAllDistricts(this.currentPage, this.pageSize, this.sortBy, this.sortDir);\n    observable.subscribe({\n      next: response => {\n        this.isLoading = false;\n        this.districts = response.data || [];\n        this.totalElements = response.totalElements || 0;\n        this.totalPages = response.totalPages || 0;\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error('Error loading districts:', error);\n        console.error('Error status:', error.status);\n        console.error('Error details:', error.error);\n        if (error.status === 403) {\n          console.error('403 Forbidden - Authentication/Authorization issue');\n          console.error('Current token:', this.authService.getToken());\n          this.toastService.error('Access Denied', 'Please log in again.');\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        } else if (error.status === 401) {\n          console.error('401 Unauthorized - Token expired or invalid');\n          this.toastService.error('Session Expired', 'Please log in again.');\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        } else {\n          this.toastService.error('Error Loading Districts', error.error?.message || error.message || 'Unknown error occurred');\n        }\n      }\n    });\n  }\n  onSearch() {\n    this.currentPage = 0;\n    this.loadDistricts();\n  }\n  onPageSizeChange() {\n    this.currentPage = 0;\n    this.loadDistricts();\n  }\n  onSort(field, event) {\n    event.preventDefault();\n    if (this.sortBy === field) {\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortBy = field;\n      this.sortDir = 'asc';\n    }\n    this.currentPage = 0;\n    this.loadDistricts();\n  }\n  goToPage(page) {\n    if (page >= 0 && page < this.totalPages) {\n      this.currentPage = page;\n      this.loadDistricts();\n    }\n  }\n  getPageNumbers() {\n    const pages = [];\n    const start = Math.max(0, this.currentPage - 2);\n    const end = Math.min(this.totalPages - 1, this.currentPage + 2);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n  editDistrict(district) {\n    window.location.href = `/districts/edit/${district.uid}`;\n  }\n  toggleStatus(district) {\n    this.districtService.toggleDistrictStatus(district.uid).subscribe({\n      next: response => {\n        if (response.success) {\n          alert(`District ${response.data.isActive ? 'activated' : 'deactivated'} successfully`);\n          this.loadDistricts();\n        }\n      },\n      error: error => {\n        console.error('Error toggling district status:', error);\n        alert('Error updating district status');\n      }\n    });\n  }\n  deleteDistrict(district) {\n    if (confirm(`Are you sure you want to delete district \"${district.name}\"?`)) {\n      this.districtService.deleteDistrict(district.uid).subscribe({\n        next: response => {\n          if (response.success) {\n            alert('District deleted successfully');\n            this.loadDistricts();\n          }\n        },\n        error: error => {\n          console.error('Error deleting district:', error);\n          alert('Error deleting district');\n        }\n      });\n    }\n  }\n};\nDistrictListComponent = __decorate([Component({\n  selector: 'app-district-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  template: `\n    <div class=\"container-fluid\">\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 class=\"h3 mb-1\">Districts</h1>\n          <p class=\"text-muted\">Manage Tanzania districts</p>\n        </div>\n        <a routerLink=\"/districts/create\" class=\"btn btn-primary\">\n          <i class=\"bi bi-plus-circle me-1\"></i>\n          Add District\n        </a>\n      </div>\n\n      <!-- Search Section -->\n      <div class=\"card mb-4\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group\">\n                <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  placeholder=\"Search districts...\" \n                  [(ngModel)]=\"searchTerm\" \n                  (input)=\"onSearch()\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Districts Table -->\n      <div class=\"card\">\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\n          <h5 class=\"card-title mb-0\">\n            <i class=\"bi bi-building me-2\"></i>\n            All Districts\n          </h5>\n          <div class=\"d-flex align-items-center\">\n            <span class=\"text-muted me-2\">Page Size:</span>\n            <select class=\"form-select form-select-sm w-auto\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\">\n              <option [value]=\"10\">10</option>\n              <option [value]=\"25\">25</option>\n              <option [value]=\"50\">50</option>\n              <option [value]=\"100\">100</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"card-body\">\n\n          <div *ngIf=\"isLoading\" class=\"text-center py-4\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <p class=\"mt-2\">Loading districts...</p>\n          </div>\n\n          <div *ngIf=\"!isLoading && districts.length === 0\" class=\"text-center py-5\">\n            <i class=\"bi bi-building text-muted\" style=\"font-size: 3rem;\"></i>\n            <h4 class=\"text-muted mt-3\">No districts found</h4>\n            <p class=\"text-muted\">Start by creating your first district.</p>\n            <a routerLink=\"/districts/create\" class=\"btn btn-primary\">\n              <i class=\"bi bi-plus-circle me-1\"></i>\n              Add District\n            </a>\n          </div>\n\n          <div *ngIf=\"!isLoading && districts.length > 0\" class=\"table-responsive\">\n            <table class=\"table table-hover\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th (click)=\"onSort('code', $event)\" class=\"sortable\">\n                    Code\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'code' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'code' && sortDir === 'desc'\"></i>\n                  </th>\n                  <th (click)=\"onSort('name', $event)\" class=\"sortable\">\n                    Name\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'name' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'name' && sortDir === 'desc'\"></i>\n                  </th>\n                  <th>Region</th>\n                  <th>Headquarters</th>\n                  <th>Population</th>\n                  <th>Area (kmÂ²)</th>\n                  <th>Status</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let district of districts\">\n                  <td>\n                    <span class=\"badge bg-success\">{{ district.code }}</span>\n                  </td>\n                  <td>\n                    <strong>{{ district.name }}</strong>\n                  </td>\n                  <td>\n                    <span class=\"badge bg-info\">{{ district.regionName }}</span>\n                  </td>\n                  <td>{{ district.headquarters }}</td>\n                  <td>{{ district.population | number }}</td>\n                  <td>{{ district.areaSqKm | number:'1.2-2' }}</td>\n                  <td>\n                    <span class=\"badge\" [class.bg-success]=\"district.isActive\" [class.bg-secondary]=\"!district.isActive\">\n                      {{ district.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\n                      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"editDistrict(district)\">\n                        <i class=\"bi bi-pencil\"></i>\n                      </button>\n                      <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"toggleStatus(district)\">\n                        <i class=\"bi\" [class.bi-pause]=\"district.isActive\" [class.bi-play]=\"!district.isActive\"></i>\n                      </button>\n                      <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteDistrict(district)\">\n                        <i class=\"bi bi-trash\"></i>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <nav *ngIf=\"!isLoading && totalPages > 1\" aria-label=\"Page navigation\">\n            <ul class=\"pagination justify-content-center\">\n              <li class=\"page-item\" [class.disabled]=\"currentPage === 0\">\n                <button class=\"page-link\" (click)=\"goToPage(currentPage - 1)\" [disabled]=\"currentPage === 0\">Previous</button>\n              </li>\n              <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [class.active]=\"page === currentPage\">\n                <button class=\"page-link\" (click)=\"goToPage(page)\">{{ page + 1 }}</button>\n              </li>\n              <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages - 1\">\n                <button class=\"page-link\" (click)=\"goToPage(currentPage + 1)\" [disabled]=\"currentPage === totalPages - 1\">Next</button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .container-fluid {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 0 1rem;\n    }\n\n    .table th {\n      border-top: none;\n      font-weight: 600;\n      color: #495057;\n    }\n\n    .btn-group .btn {\n      border-radius: 0.25rem;\n    }\n\n    .btn-group .btn:not(:last-child) {\n      margin-right: 2px;\n    }\n\n    .badge {\n      font-size: 0.75em;\n    }\n\n    .sortable {\n      cursor: pointer;\n      user-select: none;\n    }\n\n    .sortable i {\n      margin-left: 5px;\n      font-size: 0.7em;\n    }\n  `]\n})], DistrictListComponent);\nexport { DistrictListComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","FormsModule","DistrictListComponent","constructor","districtService","authService","router","toastService","districts","searchTerm","isLoading","currentPage","pageSize","totalPages","totalElements","sortBy","sortDir","ngOnInit","console","log","token","getToken","isAuthenticated","currentUser","getCurrentUser","substring","error","navigate","loadDistricts","observable","searchDistricts","getAllDistricts","subscribe","next","response","data","status","logout","message","onSearch","onPageSizeChange","onSort","field","event","preventDefault","goToPage","page","getPageNumbers","pages","start","Math","max","end","min","i","push","editDistrict","district","window","location","href","uid","toggleStatus","toggleDistrictStatus","success","alert","isActive","deleteDistrict","confirm","name","__decorate","selector","standalone","imports","template","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\districts\\district-list\\district-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { District } from '../../../core/models/district.model';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { ToastService } from '../../../core/services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-district-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">Districts</h1>\r\n          <p class=\"text-muted\">Manage Tanzania districts</p>\r\n        </div>\r\n        <a routerLink=\"/districts/create\" class=\"btn btn-primary\">\r\n          <i class=\"bi bi-plus-circle me-1\"></i>\r\n          Add District\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Search Section -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"input-group\">\r\n                <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Search districts...\" \r\n                  [(ngModel)]=\"searchTerm\" \r\n                  (input)=\"onSearch()\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Districts Table -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"card-title mb-0\">\r\n            <i class=\"bi bi-building me-2\"></i>\r\n            All Districts\r\n          </h5>\r\n          <div class=\"d-flex align-items-center\">\r\n            <span class=\"text-muted me-2\">Page Size:</span>\r\n            <select class=\"form-select form-select-sm w-auto\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\">\r\n              <option [value]=\"10\">10</option>\r\n              <option [value]=\"25\">25</option>\r\n              <option [value]=\"50\">50</option>\r\n              <option [value]=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n\r\n          <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p class=\"mt-2\">Loading districts...</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && districts.length === 0\" class=\"text-center py-5\">\r\n            <i class=\"bi bi-building text-muted\" style=\"font-size: 3rem;\"></i>\r\n            <h4 class=\"text-muted mt-3\">No districts found</h4>\r\n            <p class=\"text-muted\">Start by creating your first district.</p>\r\n            <a routerLink=\"/districts/create\" class=\"btn btn-primary\">\r\n              <i class=\"bi bi-plus-circle me-1\"></i>\r\n              Add District\r\n            </a>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && districts.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead class=\"table-light\">\r\n                <tr>\r\n                  <th (click)=\"onSort('code', $event)\" class=\"sortable\">\r\n                    Code\r\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'code' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'code' && sortDir === 'desc'\"></i>\r\n                  </th>\r\n                  <th (click)=\"onSort('name', $event)\" class=\"sortable\">\r\n                    Name\r\n                    <i class=\"bi\" [class.bi-arrow-up]=\"sortBy === 'name' && sortDir === 'asc'\" [class.bi-arrow-down]=\"sortBy === 'name' && sortDir === 'desc'\"></i>\r\n                  </th>\r\n                  <th>Region</th>\r\n                  <th>Headquarters</th>\r\n                  <th>Population</th>\r\n                  <th>Area (kmÂ²)</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let district of districts\">\r\n                  <td>\r\n                    <span class=\"badge bg-success\">{{ district.code }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <strong>{{ district.name }}</strong>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-info\">{{ district.regionName }}</span>\r\n                  </td>\r\n                  <td>{{ district.headquarters }}</td>\r\n                  <td>{{ district.population | number }}</td>\r\n                  <td>{{ district.areaSqKm | number:'1.2-2' }}</td>\r\n                  <td>\r\n                    <span class=\"badge\" [class.bg-success]=\"district.isActive\" [class.bg-secondary]=\"!district.isActive\">\r\n                      {{ district.isActive ? 'Active' : 'Inactive' }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"editDistrict(district)\">\r\n                        <i class=\"bi bi-pencil\"></i>\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"toggleStatus(district)\">\r\n                        <i class=\"bi\" [class.bi-pause]=\"district.isActive\" [class.bi-play]=\"!district.isActive\"></i>\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteDistrict(district)\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <nav *ngIf=\"!isLoading && totalPages > 1\" aria-label=\"Page navigation\">\r\n            <ul class=\"pagination justify-content-center\">\r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === 0\">\r\n                <button class=\"page-link\" (click)=\"goToPage(currentPage - 1)\" [disabled]=\"currentPage === 0\">Previous</button>\r\n              </li>\r\n              <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [class.active]=\"page === currentPage\">\r\n                <button class=\"page-link\" (click)=\"goToPage(page)\">{{ page + 1 }}</button>\r\n              </li>\r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages - 1\">\r\n                <button class=\"page-link\" (click)=\"goToPage(currentPage + 1)\" [disabled]=\"currentPage === totalPages - 1\">Next</button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container-fluid {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .table th {\r\n      border-top: none;\r\n      font-weight: 600;\r\n      color: #495057;\r\n    }\r\n\r\n    .btn-group .btn {\r\n      border-radius: 0.25rem;\r\n    }\r\n\r\n    .btn-group .btn:not(:last-child) {\r\n      margin-right: 2px;\r\n    }\r\n\r\n    .badge {\r\n      font-size: 0.75em;\r\n    }\r\n\r\n    .sortable {\r\n      cursor: pointer;\r\n      user-select: none;\r\n    }\r\n\r\n    .sortable i {\r\n      margin-left: 5px;\r\n      font-size: 0.7em;\r\n    }\r\n  `]\r\n})\r\nexport class DistrictListComponent implements OnInit {\r\n  districts: District[] = [];\r\n  searchTerm = '';\r\n  isLoading = false;\r\n  currentPage = 0;\r\n  pageSize = 10;\r\n  totalPages = 0;\r\n  totalElements = 0;\r\n  sortBy: string = 'name';\r\n  sortDir: 'asc' | 'desc' = 'asc';\r\n\r\n  constructor(\r\n    private districtService: DistrictService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log('DistrictListComponent initialized');\r\n    \r\n    // Debug authentication\r\n    const token = this.authService.getToken();\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    const currentUser = this.authService.getCurrentUser();\r\n    \r\n    console.log('Auth Debug Info:');\r\n    console.log('- Token exists:', !!token);\r\n    console.log('- Token value:', token ? token.substring(0, 50) + '...' : 'No token');\r\n    console.log('- Is authenticated:', isAuthenticated);\r\n    console.log('- Current user:', currentUser);\r\n    \r\n    if (!isAuthenticated) {\r\n      console.error('User not authenticated! Redirecting to login...');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n    \r\n    this.loadDistricts();\r\n  }\r\n\r\n  loadDistricts() {\r\n    this.isLoading = true;\r\n    \r\n    const observable = this.searchTerm \r\n      ? this.districtService.searchDistricts(this.searchTerm, this.currentPage, this.pageSize, this.sortBy, this.sortDir)\r\n      : this.districtService.getAllDistricts(this.currentPage, this.pageSize, this.sortBy, this.sortDir);\r\n\r\n    observable.subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        this.districts = response.data || [];\r\n        this.totalElements = response.totalElements || 0;\r\n        this.totalPages = response.totalPages || 0;\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading districts:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        \r\n        if (error.status === 403) {\r\n          console.error('403 Forbidden - Authentication/Authorization issue');\r\n          console.error('Current token:', this.authService.getToken());\r\n          this.toastService.error('Access Denied', 'Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else if (error.status === 401) {\r\n          console.error('401 Unauthorized - Token expired or invalid');\r\n          this.toastService.error('Session Expired', 'Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.toastService.error('Error Loading Districts', error.error?.message || error.message || 'Unknown error occurred');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    this.currentPage = 0;\r\n    this.loadDistricts();\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 0;\r\n    this.loadDistricts();\r\n  }\r\n\r\n  onSort(field: string, event: Event) {\r\n    event.preventDefault();\r\n    \r\n    if (this.sortBy === field) {\r\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortBy = field;\r\n      this.sortDir = 'asc';\r\n    }\r\n    this.currentPage = 0;\r\n    this.loadDistricts();\r\n  }\r\n\r\n  goToPage(page: number) {\r\n    if (page >= 0 && page < this.totalPages) {\r\n      this.currentPage = page;\r\n      this.loadDistricts();\r\n    }\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pages: number[] = [];\r\n    const start = Math.max(0, this.currentPage - 2);\r\n    const end = Math.min(this.totalPages - 1, this.currentPage + 2);\r\n    \r\n    for (let i = start; i <= end; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  editDistrict(district: District) {\r\n    window.location.href = `/districts/edit/${district.uid}`;\r\n  }\r\n\r\n  toggleStatus(district: District) {\r\n    this.districtService.toggleDistrictStatus(district.uid).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          alert(`District ${response.data.isActive ? 'activated' : 'deactivated'} successfully`);\r\n          this.loadDistricts();\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error toggling district status:', error);\r\n        alert('Error updating district status');\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDistrict(district: District) {\r\n    if (confirm(`Are you sure you want to delete district \"${district.name}\"?`)) {\r\n      this.districtService.deleteDistrict(district.uid).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            alert('District deleted successfully');\r\n            this.loadDistricts();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting district:', error);\r\n          alert('Error deleting district');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}