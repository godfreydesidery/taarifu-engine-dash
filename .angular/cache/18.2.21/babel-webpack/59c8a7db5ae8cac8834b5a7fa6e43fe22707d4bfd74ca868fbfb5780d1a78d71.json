{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/toast.service\";\nimport * as i2 from \"@angular/common\";\nfunction ToastComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"i\", 4);\n    i0.ɵɵelementStart(3, \"strong\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"small\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ToastComponent_div_1_Template_button_click_7_listener() {\n      const toast_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeToast(toast_r2.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const toast_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.getToastClass(toast_r2.type));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.getIconClass(toast_r2.type));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(toast_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getTimeAgo());\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", toast_r2.message, \" \");\n  }\n}\nexport let ToastComponent = /*#__PURE__*/(() => {\n  class ToastComponent {\n    constructor(toastService) {\n      this.toastService = toastService;\n      this.toasts = [];\n      this.subscription = new Subscription();\n    }\n    ngOnInit() {\n      this.subscription = this.toastService.toasts$.subscribe(toasts => {\n        this.toasts = toasts;\n      });\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    getToastClass(type) {\n      return `toast-${type}`;\n    }\n    getIconClass(type) {\n      switch (type) {\n        case 'success':\n          return 'bi bi-check-circle-fill text-success';\n        case 'error':\n          return 'bi bi-x-circle-fill text-danger';\n        case 'warning':\n          return 'bi bi-exclamation-triangle-fill text-warning';\n        case 'info':\n          return 'bi bi-info-circle-fill text-info';\n        default:\n          return 'bi bi-info-circle-fill text-info';\n      }\n    }\n    getTimeAgo() {\n      return 'now';\n    }\n    removeToast(id) {\n      this.toastService.removeToast(id);\n    }\n    static {\n      this.ɵfac = function ToastComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ToastComponent)(i0.ɵɵdirectiveInject(i1.ToastService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ToastComponent,\n        selectors: [[\"app-toast\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 2,\n        vars: 1,\n        consts: [[1, \"toast-container\", \"position-fixed\", \"top-0\", \"end-0\", \"p-3\", 2, \"z-index\", \"1055\"], [\"class\", \"toast show\", \"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 1, \"toast\", \"show\"], [1, \"toast-header\"], [1, \"me-2\"], [1, \"me-auto\"], [1, \"text-muted\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"toast-body\"]],\n        template: function ToastComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, ToastComponent_div_1_Template, 10, 7, \"div\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.toasts);\n          }\n        },\n        dependencies: [CommonModule, i2.NgForOf],\n        styles: [\".toast[_ngcontent-%COMP%]{min-width:300px;max-width:400px;margin-bottom:.5rem}.toast-success[_ngcontent-%COMP%]{border-left:4px solid #28a745}.toast-error[_ngcontent-%COMP%]{border-left:4px solid #dc3545}.toast-warning[_ngcontent-%COMP%]{border-left:4px solid #ffc107}.toast-info[_ngcontent-%COMP%]{border-left:4px solid #17a2b8}.toast-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid #dee2e6}.toast-success[_ngcontent-%COMP%]   .toast-header[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.toast-error[_ngcontent-%COMP%]   .toast-header[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.toast-warning[_ngcontent-%COMP%]   .toast-header[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.toast-info[_ngcontent-%COMP%]   .toast-header[_ngcontent-%COMP%]{background-color:#d1ecf1;color:#0c5460}.toast-body[_ngcontent-%COMP%]{background-color:#fff}.toast-success[_ngcontent-%COMP%]   .toast-body[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.toast-error[_ngcontent-%COMP%]   .toast-body[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.toast-warning[_ngcontent-%COMP%]   .toast-body[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.toast-info[_ngcontent-%COMP%]   .toast-body[_ngcontent-%COMP%]{background-color:#d1ecf1;color:#0c5460}.btn-close[_ngcontent-%COMP%]{background:none;border:none;font-size:1.2rem;font-weight:700;opacity:.5}.btn-close[_ngcontent-%COMP%]:hover{opacity:.75}\"]\n      });\n    }\n  }\n  return ToastComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}