{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VillageService = /*#__PURE__*/(() => {\n  class VillageService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = 'http://localhost:8080/api/admin/v1';\n    }\n    // Get all villages with pagination\n    getAllVillages(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/villages`, {\n        params\n      });\n    }\n    // Search villages\n    searchVillages(query, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('q', query).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/villages/search`, {\n        params\n      });\n    }\n    // Get village by UID\n    getVillageByUid(uid) {\n      return this.http.get(`${this.API_URL}/villages/uid/${uid}`);\n    }\n    // Create new village\n    createVillage(village) {\n      return this.http.post(`${this.API_URL}/villages`, village);\n    }\n    // Update village by UID\n    updateVillage(uid, village) {\n      return this.http.put(`${this.API_URL}/villages/uid/${uid}`, village);\n    }\n    // Delete village by UID\n    deleteVillage(uid) {\n      return this.http.delete(`${this.API_URL}/villages/uid/${uid}`);\n    }\n    // Get village statistics\n    getVillageStats() {\n      return this.http.get(`${this.API_URL}/villages/stats`);\n    }\n    // Get villages by ward UID\n    getVillagesByWardUid(wardUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/villages/ward/uid/${wardUid}`, {\n        params\n      });\n    }\n    // Get active villages\n    getActiveVillages(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/villages/active`, {\n        params\n      });\n    }\n    // Get villages by status\n    getVillagesByStatus(isActive, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/villages/status/${isActive}`, {\n        params\n      });\n    }\n    // Toggle village status\n    toggleVillageStatus(uid) {\n      return this.http.patch(`${this.API_URL}/villages/uid/${uid}/toggle-status`, {});\n    }\n    static {\n      this.ɵfac = function VillageService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || VillageService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: VillageService,\n        factory: VillageService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return VillageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}