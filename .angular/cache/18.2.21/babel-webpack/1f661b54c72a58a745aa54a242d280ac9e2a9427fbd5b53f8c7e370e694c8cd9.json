{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ConstituencyService = /*#__PURE__*/(() => {\n  class ConstituencyService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = 'http://localhost:8080/api/admin/v1';\n    }\n    getAllConstituencies(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies`, {\n        params\n      });\n    }\n    searchConstituencies(query, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('q', query).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies/search`, {\n        params\n      });\n    }\n    getConstituencyByUid(uid) {\n      return this.http.get(`${this.API_URL}/constituencies/uid/${uid}`);\n    }\n    createConstituency(request) {\n      return this.http.post(`${this.API_URL}/constituencies`, request);\n    }\n    updateConstituency(uid, request) {\n      return this.http.put(`${this.API_URL}/constituencies/uid/${uid}`, request);\n    }\n    deleteConstituency(uid) {\n      return this.http.delete(`${this.API_URL}/constituencies/uid/${uid}`);\n    }\n    getConstituencyStats() {\n      return this.http.get(`${this.API_URL}/constituencies/stats`);\n    }\n    getConstituenciesByRegionUid(regionUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies/region/uid/${regionUid}`, {\n        params\n      });\n    }\n    getConstituenciesByDistrictUid(districtUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies/district/uid/${districtUid}`, {\n        params\n      });\n    }\n    getActiveConstituencies(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies/active`, {\n        params\n      });\n    }\n    getConstituenciesByStatus(isActive, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n      return this.http.get(`${this.API_URL}/constituencies/status/${isActive}`, {\n        params\n      });\n    }\n    toggleConstituencyStatus(uid) {\n      return this.http.patch(`${this.API_URL}/constituencies/uid/${uid}/toggle-status`, {});\n    }\n    static {\n      this.ɵfac = function ConstituencyService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ConstituencyService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ConstituencyService,\n        factory: ConstituencyService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConstituencyService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}