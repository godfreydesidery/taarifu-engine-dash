{"ast":null,"code":"export var AreaType;\n(function (AreaType) {\n  AreaType[\"REGION\"] = \"REGION\";\n  AreaType[\"DISTRICT\"] = \"DISTRICT\";\n  AreaType[\"WARD\"] = \"WARD\";\n  AreaType[\"VILLAGE\"] = \"VILLAGE\";\n  AreaType[\"HAMLET\"] = \"HAMLET\";\n  AreaType[\"CONSTITUENCY\"] = \"CONSTITUENCY\";\n})(AreaType || (AreaType = {}));\n// Helper functions for AreaType\nexport class AreaTypeHelper {\n  static getDisplayName(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return 'Region';\n      case AreaType.DISTRICT:\n        return 'District';\n      case AreaType.WARD:\n        return 'Ward';\n      case AreaType.VILLAGE:\n        return 'Village';\n      case AreaType.HAMLET:\n        return 'Hamlet';\n      case AreaType.CONSTITUENCY:\n        return 'Constituency';\n      default:\n        return 'Unknown';\n    }\n  }\n  static getDescription(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return 'Top level administrative division in Tanzania';\n      case AreaType.DISTRICT:\n        return 'Second level administrative division under region';\n      case AreaType.WARD:\n        return 'Third level administrative division under district';\n      case AreaType.VILLAGE:\n        return 'Fourth level administrative division under ward';\n      case AreaType.HAMLET:\n        return 'Fifth level administrative division under village';\n      case AreaType.CONSTITUENCY:\n        return 'Political/parliamentary division for elections';\n      default:\n        return 'Unknown area type';\n    }\n  }\n  static getColorCode(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return '#1E40AF';\n      case AreaType.DISTRICT:\n        return '#059669';\n      case AreaType.WARD:\n        return '#DC2626';\n      case AreaType.VILLAGE:\n        return '#7C3AED';\n      case AreaType.HAMLET:\n        return '#EA580C';\n      case AreaType.CONSTITUENCY:\n        return '#0891B2';\n      default:\n        return '#6B7280';\n    }\n  }\n  static getLevel(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return 1;\n      case AreaType.DISTRICT:\n      case AreaType.CONSTITUENCY:\n        return 2;\n      case AreaType.WARD:\n        return 3;\n      case AreaType.VILLAGE:\n        return 4;\n      case AreaType.HAMLET:\n        return 5;\n      default:\n        return 0;\n    }\n  }\n  static isAdministrative(areaType) {\n    return areaType !== AreaType.CONSTITUENCY;\n  }\n  static isPolitical(areaType) {\n    return areaType === AreaType.CONSTITUENCY;\n  }\n  static getParentType(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return null;\n      case AreaType.DISTRICT:\n      case AreaType.CONSTITUENCY:\n        return AreaType.REGION;\n      case AreaType.WARD:\n        return AreaType.DISTRICT;\n      case AreaType.VILLAGE:\n        return AreaType.WARD;\n      case AreaType.HAMLET:\n        return AreaType.VILLAGE;\n      default:\n        return null;\n    }\n  }\n  static getChildTypes(areaType) {\n    switch (areaType) {\n      case AreaType.REGION:\n        return [AreaType.DISTRICT, AreaType.CONSTITUENCY];\n      case AreaType.DISTRICT:\n        return [AreaType.WARD];\n      case AreaType.WARD:\n        return [AreaType.VILLAGE];\n      case AreaType.VILLAGE:\n        return [AreaType.HAMLET];\n      case AreaType.HAMLET:\n      case AreaType.CONSTITUENCY:\n        return [];\n      default:\n        return [];\n    }\n  }\n  static getAllTypes() {\n    return [AreaType.REGION, AreaType.DISTRICT, AreaType.WARD, AreaType.VILLAGE, AreaType.HAMLET, AreaType.CONSTITUENCY];\n  }\n}","map":{"version":3,"names":["AreaType","AreaTypeHelper","getDisplayName","areaType","REGION","DISTRICT","WARD","VILLAGE","HAMLET","CONSTITUENCY","getDescription","getColorCode","getLevel","isAdministrative","isPolitical","getParentType","getChildTypes","getAllTypes"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\core\\models\\area.model.ts"],"sourcesContent":["import { PageResponse } from './auth.model';\r\n\r\nexport interface Area {\r\n  id: number;\r\n  uid: string;\r\n  code: string;\r\n  areaType: AreaType;\r\n  areaId: number;\r\n  name: string;\r\n  displayName: string;\r\n  colorCode: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport enum AreaType {\r\n  REGION = 'REGION',\r\n  DISTRICT = 'DISTRICT',\r\n  WARD = 'WARD',\r\n  VILLAGE = 'VILLAGE',\r\n  HAMLET = 'HAMLET',\r\n  CONSTITUENCY = 'CONSTITUENCY'\r\n}\r\n\r\nexport interface AreaStats {\r\n  totalAreas: number;\r\n  regionCount: number;\r\n  districtCount: number;\r\n  wardCount: number;\r\n  villageCount: number;\r\n  hamletCount: number;\r\n  constituencyCount: number;\r\n}\r\n\r\nexport interface AreaSearchParams {\r\n  searchTerm?: string;\r\n  areaType?: AreaType;\r\n  page?: number;\r\n  size?: number;\r\n  sortBy?: string;\r\n  sortDir?: 'asc' | 'desc';\r\n}\r\n\r\n// Helper functions for AreaType\r\nexport class AreaTypeHelper {\r\n  static getDisplayName(areaType: AreaType): string {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return 'Region';\r\n      case AreaType.DISTRICT:\r\n        return 'District';\r\n      case AreaType.WARD:\r\n        return 'Ward';\r\n      case AreaType.VILLAGE:\r\n        return 'Village';\r\n      case AreaType.HAMLET:\r\n        return 'Hamlet';\r\n      case AreaType.CONSTITUENCY:\r\n        return 'Constituency';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  static getDescription(areaType: AreaType): string {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return 'Top level administrative division in Tanzania';\r\n      case AreaType.DISTRICT:\r\n        return 'Second level administrative division under region';\r\n      case AreaType.WARD:\r\n        return 'Third level administrative division under district';\r\n      case AreaType.VILLAGE:\r\n        return 'Fourth level administrative division under ward';\r\n      case AreaType.HAMLET:\r\n        return 'Fifth level administrative division under village';\r\n      case AreaType.CONSTITUENCY:\r\n        return 'Political/parliamentary division for elections';\r\n      default:\r\n        return 'Unknown area type';\r\n    }\r\n  }\r\n\r\n  static getColorCode(areaType: AreaType): string {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return '#1E40AF';\r\n      case AreaType.DISTRICT:\r\n        return '#059669';\r\n      case AreaType.WARD:\r\n        return '#DC2626';\r\n      case AreaType.VILLAGE:\r\n        return '#7C3AED';\r\n      case AreaType.HAMLET:\r\n        return '#EA580C';\r\n      case AreaType.CONSTITUENCY:\r\n        return '#0891B2';\r\n      default:\r\n        return '#6B7280';\r\n    }\r\n  }\r\n\r\n  static getLevel(areaType: AreaType): number {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return 1;\r\n      case AreaType.DISTRICT:\r\n      case AreaType.CONSTITUENCY:\r\n        return 2;\r\n      case AreaType.WARD:\r\n        return 3;\r\n      case AreaType.VILLAGE:\r\n        return 4;\r\n      case AreaType.HAMLET:\r\n        return 5;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  static isAdministrative(areaType: AreaType): boolean {\r\n    return areaType !== AreaType.CONSTITUENCY;\r\n  }\r\n\r\n  static isPolitical(areaType: AreaType): boolean {\r\n    return areaType === AreaType.CONSTITUENCY;\r\n  }\r\n\r\n  static getParentType(areaType: AreaType): AreaType | null {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return null;\r\n      case AreaType.DISTRICT:\r\n      case AreaType.CONSTITUENCY:\r\n        return AreaType.REGION;\r\n      case AreaType.WARD:\r\n        return AreaType.DISTRICT;\r\n      case AreaType.VILLAGE:\r\n        return AreaType.WARD;\r\n      case AreaType.HAMLET:\r\n        return AreaType.VILLAGE;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static getChildTypes(areaType: AreaType): AreaType[] {\r\n    switch (areaType) {\r\n      case AreaType.REGION:\r\n        return [AreaType.DISTRICT, AreaType.CONSTITUENCY];\r\n      case AreaType.DISTRICT:\r\n        return [AreaType.WARD];\r\n      case AreaType.WARD:\r\n        return [AreaType.VILLAGE];\r\n      case AreaType.VILLAGE:\r\n        return [AreaType.HAMLET];\r\n      case AreaType.HAMLET:\r\n      case AreaType.CONSTITUENCY:\r\n        return [];\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  static getAllTypes(): AreaType[] {\r\n    return [\r\n      AreaType.REGION,\r\n      AreaType.DISTRICT,\r\n      AreaType.WARD,\r\n      AreaType.VILLAGE,\r\n      AreaType.HAMLET,\r\n      AreaType.CONSTITUENCY\r\n    ];\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}