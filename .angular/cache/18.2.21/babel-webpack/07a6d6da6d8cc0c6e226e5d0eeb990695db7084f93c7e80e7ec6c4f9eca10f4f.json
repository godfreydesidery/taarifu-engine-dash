{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConstituencyService {\n  constructor(http) {\n    this.http = http;\n    this.API_URL = 'http://localhost:8080/api/admin/v1';\n  }\n  getAllConstituencies(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies`, {\n      params\n    });\n  }\n  searchConstituencies(query, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('q', query).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies/search`, {\n      params\n    });\n  }\n  getConstituencyByUid(uid) {\n    return this.http.get(`${this.API_URL}/constituencies/uid/${uid}`);\n  }\n  createConstituency(request) {\n    return this.http.post(`${this.API_URL}/constituencies`, request);\n  }\n  updateConstituency(uid, request) {\n    return this.http.put(`${this.API_URL}/constituencies/uid/${uid}`, request);\n  }\n  deleteConstituency(uid) {\n    return this.http.delete(`${this.API_URL}/constituencies/uid/${uid}`);\n  }\n  getConstituencyStats() {\n    return this.http.get(`${this.API_URL}/constituencies/stats`);\n  }\n  getConstituenciesByRegionUid(regionUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies/region/uid/${regionUid}`, {\n      params\n    });\n  }\n  getConstituenciesByDistrictUid(districtUid, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies/district/uid/${districtUid}`, {\n      params\n    });\n  }\n  getActiveConstituencies(page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies/active`, {\n      params\n    });\n  }\n  getConstituenciesByStatus(isActive, page = 0, size = 10, sortBy = 'name', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/constituencies/status/${isActive}`, {\n      params\n    });\n  }\n  toggleConstituencyStatus(uid) {\n    return this.http.patch(`${this.API_URL}/constituencies/uid/${uid}/toggle-status`, {});\n  }\n  static {\n    this.ɵfac = function ConstituencyService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ConstituencyService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConstituencyService,\n      factory: ConstituencyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpParams","ConstituencyService","constructor","http","API_URL","getAllConstituencies","page","size","sortBy","sortDir","params","set","toString","get","searchConstituencies","query","getConstituencyByUid","uid","createConstituency","request","post","updateConstituency","put","deleteConstituency","delete","getConstituencyStats","getConstituenciesByRegionUid","regionUid","getConstituenciesByDistrictUid","districtUid","getActiveConstituencies","getConstituenciesByStatus","isActive","toggleConstituencyStatus","patch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\core\\services\\constituency.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { \r\n  Constituency, \r\n  CreateConstituencyRequest, \r\n  UpdateConstituencyRequest, \r\n  ConstituencyStats \r\n} from '../models/constituency.model';\r\nimport { ApiResponse, PageResponse } from '../models/auth.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConstituencyService {\r\n  private readonly API_URL = 'http://localhost:8080/api/admin/v1';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllConstituencies(page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies`, { params });\r\n  }\r\n\r\n  searchConstituencies(query: string, page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('q', query)\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies/search`, { params });\r\n  }\r\n\r\n  getConstituencyByUid(uid: string): Observable<ApiResponse<Constituency>> {\r\n    return this.http.get<ApiResponse<Constituency>>(`${this.API_URL}/constituencies/uid/${uid}`);\r\n  }\r\n\r\n  createConstituency(request: CreateConstituencyRequest): Observable<ApiResponse<Constituency>> {\r\n    return this.http.post<ApiResponse<Constituency>>(`${this.API_URL}/constituencies`, request);\r\n  }\r\n\r\n  updateConstituency(uid: string, request: UpdateConstituencyRequest): Observable<ApiResponse<Constituency>> {\r\n    return this.http.put<ApiResponse<Constituency>>(`${this.API_URL}/constituencies/uid/${uid}`, request);\r\n  }\r\n\r\n  deleteConstituency(uid: string): Observable<ApiResponse<void>> {\r\n    return this.http.delete<ApiResponse<void>>(`${this.API_URL}/constituencies/uid/${uid}`);\r\n  }\r\n\r\n  getConstituencyStats(): Observable<ApiResponse<ConstituencyStats>> {\r\n    return this.http.get<ApiResponse<ConstituencyStats>>(`${this.API_URL}/constituencies/stats`);\r\n  }\r\n\r\n  getConstituenciesByRegionUid(regionUid: string, page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies/region/uid/${regionUid}`, { params });\r\n  }\r\n\r\n  getConstituenciesByDistrictUid(districtUid: string, page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies/district/uid/${districtUid}`, { params });\r\n  }\r\n\r\n  getActiveConstituencies(page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies/active`, { params });\r\n  }\r\n\r\n  getConstituenciesByStatus(isActive: boolean, page: number = 0, size: number = 10, sortBy: string = 'name', sortDir: string = 'asc'): Observable<PageResponse<Constituency>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Constituency>>(`${this.API_URL}/constituencies/status/${isActive}`, { params });\r\n  }\r\n\r\n  toggleConstituencyStatus(uid: string): Observable<ApiResponse<Constituency>> {\r\n    return this.http.patch<ApiResponse<Constituency>>(`${this.API_URL}/constituencies/uid/${uid}/toggle-status`, {});\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}