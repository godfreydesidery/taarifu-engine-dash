{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/constituency.service\";\nimport * as i4 from \"../../../core/services/region.service\";\nimport * as i5 from \"../../../core/services/district.service\";\nimport * as i6 from \"../../../core/services/toast.service\";\nimport * as i7 from \"@angular/common\";\nfunction ConstituencyFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Constituency name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Constituency name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 54);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(region_r1.name);\n  }\n}\nfunction ConstituencyFormComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Please select a region \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 54);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const district_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(district_r2.name);\n  }\n}\nfunction ConstituencyFormComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Please select a district \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Headquarters is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Headquarters must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConstituencyFormComponent_span_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 55);\n  }\n}\nfunction ConstituencyFormComponent_i_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 56);\n  }\n}\nexport let ConstituencyFormComponent = /*#__PURE__*/(() => {\n  class ConstituencyFormComponent {\n    constructor(fb, route, router, constituencyService, regionService, districtService, toastService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.constituencyService = constituencyService;\n      this.regionService = regionService;\n      this.districtService = districtService;\n      this.toastService = toastService;\n      this.isEditMode = false;\n      this.isSubmitting = false;\n      this.constituencyId = null;\n      this.regions = [];\n      this.districts = [];\n      this.constituencyForm = this.createForm();\n    }\n    ngOnInit() {\n      this.loadRegions();\n      // Check if we're in edit mode\n      this.route.params.subscribe(params => {\n        if (params['uid']) {\n          this.isEditMode = true;\n          this.constituencyId = params['uid'];\n          this.loadConstituency();\n        }\n      });\n    }\n    createForm() {\n      return this.fb.group({\n        name: ['', [Validators.required, Validators.maxLength(100)]],\n        regionId: ['', Validators.required],\n        districtId: ['', Validators.required],\n        headquarters: ['', [Validators.required, Validators.maxLength(100)]],\n        population: [null],\n        areaSqKm: [null],\n        latitude: [null],\n        longitude: [null],\n        memberOfParliament: [''],\n        description: [''],\n        isActive: [true]\n      });\n    }\n    loadRegions() {\n      this.regionService.getAllRegions(0, 1000).subscribe({\n        next: response => {\n          if (response.status) {\n            this.regions = response.data;\n          } else {\n            this.toastService.error('Error', 'Failed to load regions');\n          }\n        },\n        error: error => {\n          console.error('Error loading regions:', error);\n          this.toastService.error('Error', 'Failed to load regions. Please try again.');\n        }\n      });\n    }\n    onRegionChange() {\n      const regionId = this.constituencyForm.get('regionId')?.value;\n      this.constituencyForm.get('districtId')?.setValue('');\n      this.districts = [];\n      if (regionId) {\n        // Find the selected region to get its UID\n        const selectedRegion = this.regions.find(region => region.id === Number(regionId));\n        if (selectedRegion) {\n          this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\n            next: response => {\n              if (response.status) {\n                this.districts = response.data;\n              } else {\n                this.toastService.error('Error', 'Failed to load districts');\n              }\n            },\n            error: error => {\n              console.error('Error loading districts:', error);\n              this.toastService.error('Error', 'Failed to load districts. Please try again.');\n            }\n          });\n        }\n      }\n    }\n    loadConstituency() {\n      if (!this.constituencyId) return;\n      this.constituencyService.getConstituencyByUid(this.constituencyId).subscribe({\n        next: response => {\n          if (response.status) {\n            const constituency = response.data;\n            this.constituencyForm.patchValue({\n              name: constituency.name,\n              regionId: constituency.regionId,\n              districtId: constituency.districtId,\n              headquarters: constituency.headquarters,\n              population: constituency.population,\n              areaSqKm: constituency.areaSqKm,\n              latitude: constituency.latitude,\n              longitude: constituency.longitude,\n              memberOfParliament: constituency.memberOfParliament,\n              description: constituency.description,\n              isActive: constituency.isActive\n            });\n            // Load districts for the selected region\n            if (constituency.regionId) {\n              this.onRegionChange();\n            }\n          } else {\n            this.toastService.error('Error', 'Failed to load constituency');\n            this.router.navigate(['/constituencies']);\n          }\n        },\n        error: error => {\n          console.error('Error loading constituency:', error);\n          this.toastService.error('Error', 'Failed to load constituency. Please try again.');\n          this.router.navigate(['/constituencies']);\n        }\n      });\n    }\n    onSubmit() {\n      if (this.constituencyForm.valid) {\n        this.isSubmitting = true;\n        const formData = this.constituencyForm.value;\n        if (this.isEditMode && this.constituencyId) {\n          const updateRequest = {\n            name: formData.name,\n            districtId: formData.districtId,\n            headquarters: formData.headquarters,\n            population: formData.population,\n            areaSqKm: formData.areaSqKm,\n            latitude: formData.latitude,\n            longitude: formData.longitude,\n            memberOfParliament: formData.memberOfParliament,\n            description: formData.description,\n            isActive: formData.isActive\n          };\n          this.constituencyService.updateConstituency(this.constituencyId, updateRequest).subscribe({\n            next: response => {\n              this.isSubmitting = false;\n              if (response.status) {\n                this.toastService.success('Success', 'Constituency updated successfully');\n                this.router.navigate(['/constituencies']);\n              } else {\n                this.toastService.error('Error', 'Failed to update constituency');\n              }\n            },\n            error: error => {\n              this.isSubmitting = false;\n              console.error('Error updating constituency:', error);\n              this.toastService.error('Error', 'Failed to update constituency. Please try again.');\n            }\n          });\n        } else {\n          const createRequest = {\n            name: formData.name,\n            districtId: formData.districtId,\n            headquarters: formData.headquarters,\n            population: formData.population,\n            areaSqKm: formData.areaSqKm,\n            latitude: formData.latitude,\n            longitude: formData.longitude,\n            memberOfParliament: formData.memberOfParliament,\n            description: formData.description,\n            isActive: formData.isActive\n          };\n          this.constituencyService.createConstituency(createRequest).subscribe({\n            next: response => {\n              this.isSubmitting = false;\n              if (response.status) {\n                this.toastService.success('Success', 'Constituency created successfully');\n                this.router.navigate(['/constituencies']);\n              } else {\n                this.toastService.error('Error', 'Failed to create constituency');\n              }\n            },\n            error: error => {\n              this.isSubmitting = false;\n              console.error('Error creating constituency:', error);\n              this.toastService.error('Error', 'Failed to create constituency. Please try again.');\n            }\n          });\n        }\n      } else {\n        this.toastService.warning('Validation Error', 'Please fill in all required fields correctly');\n        this.constituencyForm.markAllAsTouched();\n      }\n    }\n    static {\n      this.ɵfac = function ConstituencyFormComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ConstituencyFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ConstituencyService), i0.ɵɵdirectiveInject(i4.RegionService), i0.ɵɵdirectiveInject(i5.DistrictService), i0.ɵɵdirectiveInject(i6.ToastService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ConstituencyFormComponent,\n        selectors: [[\"app-constituency-form\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 137,\n        vars: 23,\n        consts: [[1, \"constituency-form-container\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"h3\", \"mb-1\"], [1, \"text-muted\"], [\"type\", \"button\", \"routerLink\", \"/constituencies\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"bi\", \"bi-arrow-left\", \"me-1\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\", \"mb-0\"], [1, \"bi\", \"bi-flag\", \"me-2\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"name\", 1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter constituency name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"regionId\", 1, \"form-label\"], [\"id\", \"regionId\", \"formControlName\", \"regionId\", 1, \"form-select\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"districtId\", 1, \"form-label\"], [\"id\", \"districtId\", \"formControlName\", \"districtId\", 1, \"form-select\"], [\"for\", \"headquarters\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"headquarters\", \"formControlName\", \"headquarters\", \"placeholder\", \"Enter headquarters\", 1, \"form-control\"], [\"for\", \"memberOfParliament\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"memberOfParliament\", \"formControlName\", \"memberOfParliament\", \"placeholder\", \"Enter MP name\", 1, \"form-control\"], [\"for\", \"population\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"population\", \"formControlName\", \"population\", \"placeholder\", \"Enter population\", \"min\", \"0\", 1, \"form-control\"], [\"for\", \"areaSqKm\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"areaSqKm\", \"formControlName\", \"areaSqKm\", \"placeholder\", \"Enter area in square kilometers\", \"min\", \"0\", \"step\", \"0.01\", 1, \"form-control\"], [\"for\", \"latitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"formControlName\", \"latitude\", \"placeholder\", \"Enter latitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"longitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"formControlName\", \"longitude\", \"placeholder\", \"Enter longitude\", \"step\", \"0.000001\", 1, \"form-control\"], [1, \"col-12\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter constituency description\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"form-check-input\"], [\"for\", \"isActive\", 1, \"form-check-label\"], [1, \"d-flex\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"bi bi-check-circle me-1\", 4, \"ngIf\"], [1, \"col-lg-4\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"list-unstyled\"], [1, \"bi\", \"bi-check-circle\", \"text-success\", \"me-2\"], [1, \"bi\", \"bi-lightbulb\", \"text-warning\", \"me-2\"], [1, \"invalid-feedback\"], [3, \"value\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"]],\n        template: function ConstituencyFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 3);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"button\", 4);\n            i0.ɵɵelement(8, \"i\", 5);\n            i0.ɵɵtext(9, \" Back to List \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"h5\", 10);\n            i0.ɵɵelement(15, \"i\", 11);\n            i0.ɵɵtext(16, \" Constituency Information \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 12)(18, \"form\", 13);\n            i0.ɵɵlistener(\"ngSubmit\", function ConstituencyFormComponent_Template_form_ngSubmit_18_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(19, \"div\", 14)(20, \"div\", 15)(21, \"label\", 16);\n            i0.ɵɵtext(22, \"Constituency Name \");\n            i0.ɵɵelementStart(23, \"span\", 17);\n            i0.ɵɵtext(24, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(25, \"input\", 18);\n            i0.ɵɵtemplate(26, ConstituencyFormComponent_div_26_Template, 2, 0, \"div\", 19)(27, ConstituencyFormComponent_div_27_Template, 2, 0, \"div\", 19);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 20);\n            i0.ɵɵtext(30, \"Region \");\n            i0.ɵɵelementStart(31, \"span\", 17);\n            i0.ɵɵtext(32, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(33, \"select\", 21);\n            i0.ɵɵlistener(\"change\", function ConstituencyFormComponent_Template_select_change_33_listener() {\n              return ctx.onRegionChange();\n            });\n            i0.ɵɵelementStart(34, \"option\", 22);\n            i0.ɵɵtext(35, \"Select a region\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(36, ConstituencyFormComponent_option_36_Template, 2, 2, \"option\", 23);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(37, ConstituencyFormComponent_div_37_Template, 2, 0, \"div\", 19);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"div\", 15)(39, \"label\", 24);\n            i0.ɵɵtext(40, \"District \");\n            i0.ɵɵelementStart(41, \"span\", 17);\n            i0.ɵɵtext(42, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(43, \"select\", 25)(44, \"option\", 22);\n            i0.ɵɵtext(45, \"Select a district\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(46, ConstituencyFormComponent_option_46_Template, 2, 2, \"option\", 23);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(47, ConstituencyFormComponent_div_47_Template, 2, 0, \"div\", 19);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(48, \"div\", 15)(49, \"label\", 26);\n            i0.ɵɵtext(50, \"Headquarters \");\n            i0.ɵɵelementStart(51, \"span\", 17);\n            i0.ɵɵtext(52, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(53, \"input\", 27);\n            i0.ɵɵtemplate(54, ConstituencyFormComponent_div_54_Template, 2, 0, \"div\", 19)(55, ConstituencyFormComponent_div_55_Template, 2, 0, \"div\", 19);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(56, \"div\", 15)(57, \"label\", 28);\n            i0.ɵɵtext(58, \"Member of Parliament\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(59, \"input\", 29);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(60, \"div\", 15)(61, \"label\", 30);\n            i0.ɵɵtext(62, \"Population\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(63, \"input\", 31);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(64, \"div\", 15)(65, \"label\", 32);\n            i0.ɵɵtext(66, \"Area (km\\u00B2)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(67, \"input\", 33);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(68, \"div\", 15)(69, \"label\", 34);\n            i0.ɵɵtext(70, \"Latitude\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(71, \"input\", 35);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(72, \"div\", 15)(73, \"label\", 36);\n            i0.ɵɵtext(74, \"Longitude\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(75, \"input\", 37);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(76, \"div\", 38)(77, \"label\", 39);\n            i0.ɵɵtext(78, \"Description\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(79, \"textarea\", 40);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(80, \"div\", 38)(81, \"div\", 41);\n            i0.ɵɵelement(82, \"input\", 42);\n            i0.ɵɵelementStart(83, \"label\", 43);\n            i0.ɵɵtext(84, \" Active Constituency \");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(85, \"div\", 38)(86, \"div\", 44)(87, \"button\", 45);\n            i0.ɵɵtemplate(88, ConstituencyFormComponent_span_88_Template, 1, 0, \"span\", 46)(89, ConstituencyFormComponent_i_89_Template, 1, 0, \"i\", 47);\n            i0.ɵɵtext(90);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(91, \"button\", 4);\n            i0.ɵɵtext(92, \" Cancel \");\n            i0.ɵɵelementEnd()()()()()()()();\n            i0.ɵɵelementStart(93, \"div\", 48)(94, \"div\", 8)(95, \"div\", 9)(96, \"h5\", 10);\n            i0.ɵɵelement(97, \"i\", 49);\n            i0.ɵɵtext(98, \" Guidelines \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(99, \"div\", 12)(100, \"h6\");\n            i0.ɵɵtext(101, \"Creating a Constituency\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(102, \"ul\", 50)(103, \"li\");\n            i0.ɵɵelement(104, \"i\", 51);\n            i0.ɵɵtext(105, \"Provide a unique constituency name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(106, \"li\");\n            i0.ɵɵelement(107, \"i\", 51);\n            i0.ɵɵtext(108, \"Select the appropriate region\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(109, \"li\");\n            i0.ɵɵelement(110, \"i\", 51);\n            i0.ɵɵtext(111, \"Specify the headquarters location\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(112, \"li\");\n            i0.ɵɵelement(113, \"i\", 51);\n            i0.ɵɵtext(114, \"Add population and area data if available\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(115, \"li\");\n            i0.ɵɵelement(116, \"i\", 51);\n            i0.ɵɵtext(117, \"Include coordinates for mapping\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(118, \"li\");\n            i0.ɵɵelement(119, \"i\", 51);\n            i0.ɵɵtext(120, \"Add the Member of Parliament name\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(121, \"hr\");\n            i0.ɵɵelementStart(122, \"h6\");\n            i0.ɵɵtext(123, \"Best Practices\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(124, \"ul\", 50)(125, \"li\");\n            i0.ɵɵelement(126, \"i\", 52);\n            i0.ɵɵtext(127, \"Use clear, descriptive names\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(128, \"li\");\n            i0.ɵɵelement(129, \"i\", 52);\n            i0.ɵɵtext(130, \"Ensure headquarters is accurate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(131, \"li\");\n            i0.ɵɵelement(132, \"i\", 52);\n            i0.ɵɵtext(133, \"Verify region selection\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(134, \"li\");\n            i0.ɵɵelement(135, \"i\", 52);\n            i0.ɵɵtext(136, \"Include relevant description\");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            let tmp_3_0;\n            let tmp_4_0;\n            let tmp_5_0;\n            let tmp_6_0;\n            let tmp_8_0;\n            let tmp_9_0;\n            let tmp_11_0;\n            let tmp_12_0;\n            let tmp_13_0;\n            let tmp_14_0;\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Constituency\" : \"Create New Constituency\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update constituency information\" : \"Add a new constituency to the system\");\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"formGroup\", ctx.constituencyForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.constituencyForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_6_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_6_0.touched));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.constituencyForm.get(\"regionId\")) == null ? null : tmp_8_0.hasError(\"required\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_9_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_9_0.touched));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.districts);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx.constituencyForm.get(\"districtId\")) == null ? null : tmp_11_0.hasError(\"required\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_12_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_12_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_13_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_13_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.constituencyForm.get(\"headquarters\")) == null ? null : tmp_14_0.hasError(\"maxlength\"));\n            i0.ɵɵadvance(32);\n            i0.ɵɵproperty(\"disabled\", ctx.constituencyForm.invalid || ctx.isSubmitting);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSubmitting);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSubmitting);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.isSubmitting ? \"Saving...\" : ctx.isEditMode ? \"Update Constituency\" : \"Create Constituency\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i7.NgForOf, i7.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, RouterModule, i2.RouterLink],\n        styles: [\".constituency-form-container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:0 1rem}.card[_ngcontent-%COMP%]{border:none;box-shadow:0 .125rem .25rem #00000013}.card-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid #dee2e6}.form-label[_ngcontent-%COMP%]{font-weight:500}.text-danger[_ngcontent-%COMP%]{color:#dc3545!important}\"]\n      });\n    }\n  }\n  return ConstituencyFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}