{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AreaService {\n  constructor(http) {\n    this.http = http;\n    this.API_URL = 'http://localhost:8080/api/admin/v1';\n  }\n  getAllAreas(page = 0, size = 20, sortBy = 'code', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/areas`, {\n      params\n    });\n  }\n  getAreaByUid(uid) {\n    return this.http.get(`${this.API_URL}/areas/uid/${uid}`);\n  }\n  getAreaByCode(code) {\n    return this.http.get(`${this.API_URL}/areas/code/${code}`);\n  }\n  getAreasByType(areaType, page = 0, size = 20, sortBy = 'code', sortDir = 'asc') {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/areas/type/${areaType}`, {\n      params\n    });\n  }\n  searchAreas(searchTerm, page = 0, size = 20, sortBy = 'code', sortDir = 'asc') {\n    const params = new HttpParams().set('searchTerm', searchTerm).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/areas/search`, {\n      params\n    });\n  }\n  searchAreasByType(areaType, searchTerm, page = 0, size = 20, sortBy = 'code', sortDir = 'asc') {\n    const params = new HttpParams().set('searchTerm', searchTerm).set('page', page.toString()).set('size', size.toString()).set('sortBy', sortBy).set('sortDir', sortDir);\n    return this.http.get(`${this.API_URL}/areas/type/${areaType}/search`, {\n      params\n    });\n  }\n  getAreaStats() {\n    return this.http.get(`${this.API_URL}/areas/stats`);\n  }\n  getAreaByTypeAndId(areaType, areaId) {\n    return this.http.get(`${this.API_URL}/areas/type/${areaType}/area/${areaId}`);\n  }\n  static {\n    this.ɵfac = function AreaService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AreaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AreaService,\n      factory: AreaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpParams","AreaService","constructor","http","API_URL","getAllAreas","page","size","sortBy","sortDir","params","set","toString","get","getAreaByUid","uid","getAreaByCode","code","getAreasByType","areaType","searchAreas","searchTerm","searchAreasByType","getAreaStats","getAreaByTypeAndId","areaId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\core\\services\\area.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { \r\n  Area, \r\n  AreaType, \r\n  AreaStats \r\n} from '../models/area.model';\r\nimport { ApiResponse, PageResponse } from '../models/auth.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AreaService {\r\n  private readonly API_URL = 'http://localhost:8080/api/admin/v1';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllAreas(page: number = 0, size: number = 20, sortBy: string = 'code', sortDir: string = 'asc'): Observable<PageResponse<Area>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Area>>(`${this.API_URL}/areas`, { params });\r\n  }\r\n\r\n  getAreaByUid(uid: string): Observable<ApiResponse<Area>> {\r\n    return this.http.get<ApiResponse<Area>>(`${this.API_URL}/areas/uid/${uid}`);\r\n  }\r\n\r\n  getAreaByCode(code: string): Observable<ApiResponse<Area>> {\r\n    return this.http.get<ApiResponse<Area>>(`${this.API_URL}/areas/code/${code}`);\r\n  }\r\n\r\n  getAreasByType(areaType: AreaType, page: number = 0, size: number = 20, sortBy: string = 'code', sortDir: string = 'asc'): Observable<PageResponse<Area>> {\r\n    const params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Area>>(`${this.API_URL}/areas/type/${areaType}`, { params });\r\n  }\r\n\r\n  searchAreas(searchTerm: string, page: number = 0, size: number = 20, sortBy: string = 'code', sortDir: string = 'asc'): Observable<PageResponse<Area>> {\r\n    const params = new HttpParams()\r\n      .set('searchTerm', searchTerm)\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Area>>(`${this.API_URL}/areas/search`, { params });\r\n  }\r\n\r\n  searchAreasByType(areaType: AreaType, searchTerm: string, page: number = 0, size: number = 20, sortBy: string = 'code', sortDir: string = 'asc'): Observable<PageResponse<Area>> {\r\n    const params = new HttpParams()\r\n      .set('searchTerm', searchTerm)\r\n      .set('page', page.toString())\r\n      .set('size', size.toString())\r\n      .set('sortBy', sortBy)\r\n      .set('sortDir', sortDir);\r\n    return this.http.get<PageResponse<Area>>(`${this.API_URL}/areas/type/${areaType}/search`, { params });\r\n  }\r\n\r\n  getAreaStats(): Observable<ApiResponse<AreaStats>> {\r\n    return this.http.get<ApiResponse<AreaStats>>(`${this.API_URL}/areas/stats`);\r\n  }\r\n\r\n  getAreaByTypeAndId(areaType: AreaType, areaId: number): Observable<ApiResponse<Area>> {\r\n    return this.http.get<ApiResponse<Area>>(`${this.API_URL}/areas/type/${areaType}/area/${areaId}`);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}