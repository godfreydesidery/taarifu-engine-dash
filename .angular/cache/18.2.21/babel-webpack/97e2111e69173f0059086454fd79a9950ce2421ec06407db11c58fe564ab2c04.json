{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/ward.service\";\nimport * as i3 from \"../../../core/services/district.service\";\nimport * as i4 from \"../../../core/services/region.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction WardFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Ward name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Ward name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Headquarters is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Headquarters must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(region_r1.name);\n  }\n}\nfunction WardFormComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Region is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const district_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(district_r2.name);\n  }\n}\nfunction WardFormComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" District is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Population must be a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Area must be a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Latitude must be between -90 and 90 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Longitude must be between -180 and 180 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Executive officer name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_div_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵtext(1, \" Description must not exceed 500 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardFormComponent_span_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 55);\n  }\n}\nfunction WardFormComponent_i_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 56);\n  }\n}\nexport class WardFormComponent {\n  constructor(fb, wardService, districtService, regionService, route, router) {\n    this.fb = fb;\n    this.wardService = wardService;\n    this.districtService = districtService;\n    this.regionService = regionService;\n    this.route = route;\n    this.router = router;\n    this.isEditMode = false;\n    this.isLoading = false;\n    this.wardId = null;\n    this.regions = [];\n    this.districts = [];\n    this.filteredDistricts = [];\n    this.wardForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\n      regionId: [null, [Validators.required]],\n      districtId: [null, [Validators.required]],\n      population: [0, [Validators.min(0)]],\n      areaSqKm: [0, [Validators.min(0)]],\n      latitude: [0, [Validators.min(-90), Validators.max(90)]],\n      longitude: [0, [Validators.min(-180), Validators.max(180)]],\n      executiveOfficer: ['', [Validators.maxLength(100)]],\n      description: ['', [Validators.maxLength(500)]],\n      isActive: [true]\n    });\n  }\n  ngOnInit() {\n    this.loadRegions();\n    this.loadDistricts();\n    // Check if we're in edit mode\n    this.wardId = this.route.snapshot.paramMap.get('uid');\n    if (this.wardId) {\n      this.isEditMode = true;\n      this.loadWard(this.wardId);\n    }\n  }\n  loadRegions() {\n    this.regionService.getAllRegions(0, 1000).subscribe({\n      next: response => {\n        this.regions = response.data || [];\n      },\n      error: error => {\n        console.error('Error loading regions:', error);\n      }\n    });\n  }\n  loadDistricts() {\n    console.log('Loading districts...');\n    this.districtService.getAllDistricts(0, 1000).subscribe({\n      next: response => {\n        this.districts = response.data || [];\n        this.filteredDistricts = this.districts;\n        console.log('Loaded districts:', this.districts);\n        console.log('Sample district structure:', this.districts[0]);\n      },\n      error: error => {\n        console.error('Error loading districts:', error);\n      }\n    });\n  }\n  loadWard(uid) {\n    this.isLoading = true;\n    console.log('Loading ward with UID:', uid);\n    this.wardService.getWardByUid(uid).subscribe({\n      next: response => {\n        this.isLoading = false;\n        console.log('Ward API Response:', response);\n        if (response.status) {\n          const ward = response.data;\n          console.log('Ward data:', ward);\n          this.wardForm.patchValue({\n            name: ward.name,\n            headquarters: ward.headquarters,\n            regionId: ward.regionId,\n            districtId: ward.districtId,\n            population: ward.population,\n            areaSqKm: ward.areaSqKm,\n            latitude: ward.latitude,\n            longitude: ward.longitude,\n            executiveOfficer: ward.executiveOfficer,\n            description: ward.description,\n            isActive: ward.isActive\n          });\n          // Filter districts based on selected region\n          this.onRegionChange();\n        }\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error('Error loading ward:', error);\n        console.error('Error status:', error.status);\n        console.error('Error details:', error.error);\n        alert(`Error loading ward: ${error.error?.message || error.message || 'Unknown error'}`);\n        this.goBack();\n      }\n    });\n  }\n  onRegionChange() {\n    const selectedRegionId = this.wardForm.get('regionId')?.value;\n    console.log('Region changed to:', selectedRegionId);\n    if (selectedRegionId) {\n      // Find the selected region to get its UID\n      const selectedRegion = this.regions.find(r => r.id === Number(selectedRegionId));\n      console.log('Selected region:', selectedRegion);\n      if (selectedRegion) {\n        // Load districts for this specific region using the API\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\n          next: response => {\n            this.filteredDistricts = response.data || [];\n            console.log('Loaded districts for region', selectedRegion.name, ':', this.filteredDistricts);\n            // Reset district selection if current selection is not in filtered list\n            const currentDistrictId = this.wardForm.get('districtId')?.value;\n            if (currentDistrictId && !this.filteredDistricts.find(d => d.id === currentDistrictId)) {\n              this.wardForm.patchValue({\n                districtId: null\n              });\n            }\n          },\n          error: error => {\n            console.error('Error loading districts for region:', error);\n            this.filteredDistricts = [];\n          }\n        });\n      }\n    } else {\n      // No region selected, show all districts\n      this.filteredDistricts = this.districts;\n      console.log('No region selected, showing all districts:', this.filteredDistricts);\n    }\n  }\n  onSubmit() {\n    if (this.wardForm.valid) {\n      this.isLoading = true;\n      const formData = this.wardForm.value;\n      if (this.isEditMode && this.wardId) {\n        // Update existing ward\n        const updateRequest = {\n          name: formData.name,\n          headquarters: formData.headquarters,\n          districtId: formData.districtId,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          executiveOfficer: formData.executiveOfficer,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.wardService.updateWard(this.wardId, updateRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              alert('Ward updated successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error updating ward:', error);\n            alert(`Error updating ward: ${error.error?.message || error.message || 'Unknown error'}`);\n          }\n        });\n      } else {\n        // Create new ward\n        const createRequest = {\n          name: formData.name,\n          headquarters: formData.headquarters,\n          districtId: formData.districtId,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          executiveOfficer: formData.executiveOfficer,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.wardService.createWard(createRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              alert('Ward created successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error creating ward:', error);\n            alert(`Error creating ward: ${error.error?.message || error.message || 'Unknown error'}`);\n          }\n        });\n      }\n    } else {\n      // Mark all fields as touched to show validation errors\n      Object.keys(this.wardForm.controls).forEach(key => {\n        this.wardForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n  goBack() {\n    this.router.navigate(['/wards']);\n  }\n  static {\n    this.ɵfac = function WardFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || WardFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WardService), i0.ɵɵdirectiveInject(i3.DistrictService), i0.ɵɵdirectiveInject(i4.RegionService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WardFormComponent,\n      selectors: [[\"app-ward-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 144,\n      vars: 43,\n      consts: [[1, \"ward-form-container\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"h3\", \"mb-1\"], [1, \"text-muted\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", \"me-1\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\", \"mb-0\"], [1, \"bi\", \"bi-building\", \"me-2\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"name\", 1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter ward name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"headquarters\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"headquarters\", \"formControlName\", \"headquarters\", \"placeholder\", \"Enter headquarters\", 1, \"form-control\"], [\"for\", \"regionId\", 1, \"form-label\"], [\"id\", \"regionId\", \"formControlName\", \"regionId\", 1, \"form-select\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"districtId\", 1, \"form-label\"], [\"id\", \"districtId\", \"formControlName\", \"districtId\", 1, \"form-select\"], [\"for\", \"population\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"population\", \"formControlName\", \"population\", \"placeholder\", \"Enter population\", \"min\", \"0\", 1, \"form-control\"], [\"for\", \"areaSqKm\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"areaSqKm\", \"formControlName\", \"areaSqKm\", \"placeholder\", \"Enter area in square kilometers\", \"min\", \"0\", \"step\", \"0.1\", 1, \"form-control\"], [\"for\", \"latitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"formControlName\", \"latitude\", \"placeholder\", \"Enter latitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"longitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"formControlName\", \"longitude\", \"placeholder\", \"Enter longitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"executiveOfficer\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"executiveOfficer\", \"formControlName\", \"executiveOfficer\", \"placeholder\", \"Enter executive officer name\", 1, \"form-control\"], [\"for\", \"isActive\", 1, \"form-label\"], [\"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"form-select\"], [3, \"value\"], [1, \"col-12\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter ward description\", 1, \"form-control\"], [1, \"row\", \"mt-4\"], [1, \"d-flex\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"bi bi-check-circle me-1\", 4, \"ngIf\"], [1, \"bi\", \"bi-x-circle\", \"me-1\"], [1, \"col-lg-4\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"list-unstyled\", \"small\", \"text-muted\"], [1, \"mt-3\"], [1, \"invalid-feedback\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"]],\n      template: function WardFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function WardFormComponent_Template_button_click_7_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelement(8, \"i\", 5);\n          i0.ɵɵtext(9, \" Back to Wards \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"h5\", 10);\n          i0.ɵɵelement(15, \"i\", 11);\n          i0.ɵɵtext(16, \" Ward Information \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function WardFormComponent_Template_form_ngSubmit_18_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(19, \"div\", 14)(20, \"div\", 15)(21, \"label\", 16);\n          i0.ɵɵtext(22, \"Ward Name \");\n          i0.ɵɵelementStart(23, \"span\", 17);\n          i0.ɵɵtext(24, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"input\", 18);\n          i0.ɵɵtemplate(26, WardFormComponent_div_26_Template, 2, 0, \"div\", 19)(27, WardFormComponent_div_27_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 20);\n          i0.ɵɵtext(30, \"Headquarters \");\n          i0.ɵɵelementStart(31, \"span\", 17);\n          i0.ɵɵtext(32, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(33, \"input\", 21);\n          i0.ɵɵtemplate(34, WardFormComponent_div_34_Template, 2, 0, \"div\", 19)(35, WardFormComponent_div_35_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 15)(37, \"label\", 22);\n          i0.ɵɵtext(38, \"Region \");\n          i0.ɵɵelementStart(39, \"span\", 17);\n          i0.ɵɵtext(40, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"select\", 23);\n          i0.ɵɵlistener(\"change\", function WardFormComponent_Template_select_change_41_listener() {\n            return ctx.onRegionChange();\n          });\n          i0.ɵɵelementStart(42, \"option\", 24);\n          i0.ɵɵtext(43, \"Select a region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(44, WardFormComponent_option_44_Template, 2, 2, \"option\", 25);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(45, WardFormComponent_div_45_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"div\", 15)(47, \"label\", 26);\n          i0.ɵɵtext(48, \"District \");\n          i0.ɵɵelementStart(49, \"span\", 17);\n          i0.ɵɵtext(50, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(51, \"select\", 27)(52, \"option\", 24);\n          i0.ɵɵtext(53, \"Select a district\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(54, WardFormComponent_option_54_Template, 2, 2, \"option\", 25);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(55, WardFormComponent_div_55_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"div\", 15)(57, \"label\", 28);\n          i0.ɵɵtext(58, \"Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(59, \"input\", 29);\n          i0.ɵɵtemplate(60, WardFormComponent_div_60_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"div\", 15)(62, \"label\", 30);\n          i0.ɵɵtext(63, \"Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(64, \"input\", 31);\n          i0.ɵɵtemplate(65, WardFormComponent_div_65_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(66, \"div\", 15)(67, \"label\", 32);\n          i0.ɵɵtext(68, \"Latitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(69, \"input\", 33);\n          i0.ɵɵtemplate(70, WardFormComponent_div_70_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"div\", 15)(72, \"label\", 34);\n          i0.ɵɵtext(73, \"Longitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(74, \"input\", 35);\n          i0.ɵɵtemplate(75, WardFormComponent_div_75_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"div\", 15)(77, \"label\", 36);\n          i0.ɵɵtext(78, \"Executive Officer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(79, \"input\", 37);\n          i0.ɵɵtemplate(80, WardFormComponent_div_80_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"div\", 15)(82, \"label\", 38);\n          i0.ɵɵtext(83, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(84, \"select\", 39)(85, \"option\", 40);\n          i0.ɵɵtext(86, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"option\", 40);\n          i0.ɵɵtext(88, \"Inactive\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(89, \"div\", 41)(90, \"label\", 42);\n          i0.ɵɵtext(91, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(92, \"textarea\", 43);\n          i0.ɵɵtemplate(93, WardFormComponent_div_93_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(94, \"div\", 44)(95, \"div\", 41)(96, \"div\", 45)(97, \"button\", 46);\n          i0.ɵɵtemplate(98, WardFormComponent_span_98_Template, 1, 0, \"span\", 47)(99, WardFormComponent_i_99_Template, 1, 0, \"i\", 48);\n          i0.ɵɵtext(100);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(101, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function WardFormComponent_Template_button_click_101_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelement(102, \"i\", 49);\n          i0.ɵɵtext(103, \" Cancel \");\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(104, \"div\", 50)(105, \"div\", 8)(106, \"div\", 9)(107, \"h6\", 10);\n          i0.ɵɵelement(108, \"i\", 51);\n          i0.ɵɵtext(109, \" Help & Guidelines \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(110, \"div\", 12)(111, \"h6\");\n          i0.ɵɵtext(112, \"Required Fields\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(113, \"ul\", 52)(114, \"li\");\n          i0.ɵɵtext(115, \"\\u2022 Ward Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(116, \"li\");\n          i0.ɵɵtext(117, \"\\u2022 Headquarters\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(118, \"li\");\n          i0.ɵɵtext(119, \"\\u2022 Region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(120, \"li\");\n          i0.ɵɵtext(121, \"\\u2022 District\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(122, \"h6\", 53);\n          i0.ɵɵtext(123, \"Optional Fields\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(124, \"ul\", 52)(125, \"li\");\n          i0.ɵɵtext(126, \"\\u2022 Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(127, \"li\");\n          i0.ɵɵtext(128, \"\\u2022 Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(129, \"li\");\n          i0.ɵɵtext(130, \"\\u2022 Coordinates\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(131, \"li\");\n          i0.ɵɵtext(132, \"\\u2022 Executive Officer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(133, \"li\");\n          i0.ɵɵtext(134, \"\\u2022 Description\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(135, \"h6\", 53);\n          i0.ɵɵtext(136, \"Tips\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(137, \"ul\", 52)(138, \"li\");\n          i0.ɵɵtext(139, \"\\u2022 Select region first to filter districts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(140, \"li\");\n          i0.ɵɵtext(141, \"\\u2022 Use precise coordinates for mapping\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(142, \"li\");\n          i0.ɵɵtext(143, \"\\u2022 Keep descriptions concise and informative\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_11_0;\n          let tmp_12_0;\n          let tmp_14_0;\n          let tmp_15_0;\n          let tmp_16_0;\n          let tmp_17_0;\n          let tmp_18_0;\n          let tmp_19_0;\n          let tmp_20_0;\n          let tmp_21_0;\n          let tmp_22_0;\n          let tmp_23_0;\n          let tmp_24_0;\n          let tmp_27_0;\n          let tmp_28_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Ward\" : \"Create New Ward\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update ward information\" : \"Add a new ward to the system\");\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"formGroup\", ctx.wardForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.wardForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.wardForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.wardForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.wardForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_6_0 = ctx.wardForm.get(\"headquarters\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.wardForm.get(\"headquarters\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.wardForm.get(\"headquarters\")) == null ? null : tmp_7_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.wardForm.get(\"headquarters\")) == null ? null : tmp_8_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_9_0 = ctx.wardForm.get(\"regionId\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.wardForm.get(\"regionId\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx.wardForm.get(\"regionId\")) == null ? null : tmp_11_0.hasError(\"required\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_12_0 = ctx.wardForm.get(\"districtId\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.wardForm.get(\"districtId\")) == null ? null : tmp_12_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredDistricts);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.wardForm.get(\"districtId\")) == null ? null : tmp_14_0.hasError(\"required\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_15_0 = ctx.wardForm.get(\"population\")) == null ? null : tmp_15_0.invalid) && ((tmp_15_0 = ctx.wardForm.get(\"population\")) == null ? null : tmp_15_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_16_0 = ctx.wardForm.get(\"population\")) == null ? null : tmp_16_0.hasError(\"min\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_17_0 = ctx.wardForm.get(\"areaSqKm\")) == null ? null : tmp_17_0.invalid) && ((tmp_17_0 = ctx.wardForm.get(\"areaSqKm\")) == null ? null : tmp_17_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_18_0 = ctx.wardForm.get(\"areaSqKm\")) == null ? null : tmp_18_0.hasError(\"min\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_19_0 = ctx.wardForm.get(\"latitude\")) == null ? null : tmp_19_0.invalid) && ((tmp_19_0 = ctx.wardForm.get(\"latitude\")) == null ? null : tmp_19_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_20_0 = ctx.wardForm.get(\"latitude\")) == null ? null : tmp_20_0.hasError(\"min\")) || ((tmp_20_0 = ctx.wardForm.get(\"latitude\")) == null ? null : tmp_20_0.hasError(\"max\")));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_21_0 = ctx.wardForm.get(\"longitude\")) == null ? null : tmp_21_0.invalid) && ((tmp_21_0 = ctx.wardForm.get(\"longitude\")) == null ? null : tmp_21_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_22_0 = ctx.wardForm.get(\"longitude\")) == null ? null : tmp_22_0.hasError(\"min\")) || ((tmp_22_0 = ctx.wardForm.get(\"longitude\")) == null ? null : tmp_22_0.hasError(\"max\")));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_23_0 = ctx.wardForm.get(\"executiveOfficer\")) == null ? null : tmp_23_0.invalid) && ((tmp_23_0 = ctx.wardForm.get(\"executiveOfficer\")) == null ? null : tmp_23_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_24_0 = ctx.wardForm.get(\"executiveOfficer\")) == null ? null : tmp_24_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_27_0 = ctx.wardForm.get(\"description\")) == null ? null : tmp_27_0.invalid) && ((tmp_27_0 = ctx.wardForm.get(\"description\")) == null ? null : tmp_27_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_28_0 = ctx.wardForm.get(\"description\")) == null ? null : tmp_28_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.wardForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update Ward\" : \"Create Ward\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i6.NgForOf, i6.NgIf, RouterModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".ward-form-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #dee2e6;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  color: #495057;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #dc3545 !important;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.spinner-border-sm[_ngcontent-%COMP%] {\\n  width: 1rem;\\n  height: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvd2FyZHMvd2FyZC1mb3JtL3dhcmQtZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FBQU47O0FBR0k7RUFDRSxZQUFBO0VBQ0EsbURBQUE7QUFBTjs7QUFHSTtFQUNFLHlCQUFBO0VBQ0EsZ0NBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUFOOztBQUdJO0VBQ0UseUJBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0FBQU47O0FBR0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFOIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgLndhcmQtZm9ybS1jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgICB9XG5cbiAgICAuY2FyZCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgfVxuXG4gICAgLmNhcmQtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZTJlNjtcbiAgICB9XG5cbiAgICAuZm9ybS1sYWJlbCB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgY29sb3I6ICM0OTUwNTc7XG4gICAgfVxuXG4gICAgLnRleHQtZGFuZ2VyIHtcbiAgICAgIGNvbG9yOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLmJ0biB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgIH1cblxuICAgIC5zcGlubmVyLWJvcmRlci1zbSB7XG4gICAgICB3aWR0aDogMXJlbTtcbiAgICAgIGhlaWdodDogMXJlbTtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","RouterModule","Validators","ReactiveFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","id","ɵɵadvance","ɵɵtextInterpolate","name","district_r2","ɵɵelement","WardFormComponent","constructor","fb","wardService","districtService","regionService","route","router","isEditMode","isLoading","wardId","regions","districts","filteredDistricts","wardForm","group","required","maxLength","headquarters","regionId","districtId","population","min","areaSqKm","latitude","max","longitude","executiveOfficer","description","isActive","ngOnInit","loadRegions","loadDistricts","snapshot","paramMap","get","loadWard","getAllRegions","subscribe","next","response","data","error","console","log","getAllDistricts","uid","getWardByUid","status","ward","patchValue","onRegionChange","alert","message","goBack","selectedRegionId","value","selectedRegion","find","r","Number","getDistrictsByRegionUid","currentDistrictId","d","onSubmit","valid","formData","updateRequest","updateWard","createRequest","createWard","Object","keys","controls","forEach","key","markAsTouched","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","WardService","i3","DistrictService","i4","RegionService","i5","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","WardFormComponent_Template","rf","ctx","ɵɵlistener","WardFormComponent_Template_button_click_7_listener","WardFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","WardFormComponent_div_26_Template","WardFormComponent_div_27_Template","WardFormComponent_div_34_Template","WardFormComponent_div_35_Template","WardFormComponent_Template_select_change_41_listener","WardFormComponent_option_44_Template","WardFormComponent_div_45_Template","WardFormComponent_option_54_Template","WardFormComponent_div_55_Template","WardFormComponent_div_60_Template","WardFormComponent_div_65_Template","WardFormComponent_div_70_Template","WardFormComponent_div_75_Template","WardFormComponent_div_80_Template","WardFormComponent_div_93_Template","WardFormComponent_span_98_Template","WardFormComponent_i_99_Template","WardFormComponent_Template_button_click_101_listener","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_11_0","tmp_12_0","tmp_14_0","tmp_15_0","tmp_16_0","tmp_17_0","tmp_18_0","tmp_19_0","tmp_20_0","tmp_21_0","tmp_22_0","tmp_23_0","tmp_24_0","tmp_27_0","tmp_28_0","ɵɵtextInterpolate1","i6","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\wards\\ward-form\\ward-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { WardService } from '../../../core/services/ward.service';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { Ward, CreateWardRequest, UpdateWardRequest } from '../../../core/models/ward.model';\r\nimport { District } from '../../../core/models/district.model';\r\nimport { Region } from '../../../core/models/region.model';\r\n\r\n@Component({\r\n  selector: 'app-ward-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"ward-form-container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Ward' : 'Create New Ward' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update ward information' : 'Add a new ward to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back to Wards\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-building me-2\"></i>\r\n                Ward Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"wardForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row g-3\">\r\n                  <!-- Basic Information -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"name\" class=\"form-label\">Ward Name <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"name\"\r\n                      formControlName=\"name\"\r\n                      placeholder=\"Enter ward name\"\r\n                      [class.is-invalid]=\"wardForm.get('name')?.invalid && wardForm.get('name')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('name')?.hasError('required')\">\r\n                      Ward name is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('name')?.hasError('maxlength')\">\r\n                      Ward name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"headquarters\" class=\"form-label\">Headquarters <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"headquarters\"\r\n                      formControlName=\"headquarters\"\r\n                      placeholder=\"Enter headquarters\"\r\n                      [class.is-invalid]=\"wardForm.get('headquarters')?.invalid && wardForm.get('headquarters')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('headquarters')?.hasError('required')\">\r\n                      Headquarters is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('headquarters')?.hasError('maxlength')\">\r\n                      Headquarters must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Location Information -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"regionId\" class=\"form-label\">Region <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"regionId\"\r\n                      formControlName=\"regionId\"\r\n                      (change)=\"onRegionChange()\"\r\n                      [class.is-invalid]=\"wardForm.get('regionId')?.invalid && wardForm.get('regionId')?.touched\">\r\n                      <option value=\"\">Select a region</option>\r\n                      <option *ngFor=\"let region of regions\" [value]=\"region.id\">{{ region.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('regionId')?.hasError('required')\">\r\n                      Region is required\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"districtId\" class=\"form-label\">District <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"districtId\"\r\n                      formControlName=\"districtId\"\r\n                      [class.is-invalid]=\"wardForm.get('districtId')?.invalid && wardForm.get('districtId')?.touched\">\r\n                      <option value=\"\">Select a district</option>\r\n                      <option *ngFor=\"let district of filteredDistricts\" [value]=\"district.id\">{{ district.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('districtId')?.hasError('required')\">\r\n                      District is required\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Population and Area -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"population\" class=\"form-label\">Population</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"population\"\r\n                      formControlName=\"population\"\r\n                      placeholder=\"Enter population\"\r\n                      min=\"0\"\r\n                      [class.is-invalid]=\"wardForm.get('population')?.invalid && wardForm.get('population')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('population')?.hasError('min')\">\r\n                      Population must be a positive number\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"areaSqKm\"\r\n                      formControlName=\"areaSqKm\"\r\n                      placeholder=\"Enter area in square kilometers\"\r\n                      min=\"0\"\r\n                      step=\"0.1\"\r\n                      [class.is-invalid]=\"wardForm.get('areaSqKm')?.invalid && wardForm.get('areaSqKm')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('areaSqKm')?.hasError('min')\">\r\n                      Area must be a positive number\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Coordinates -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"latitude\"\r\n                      formControlName=\"latitude\"\r\n                      placeholder=\"Enter latitude\"\r\n                      step=\"0.000001\"\r\n                      [class.is-invalid]=\"wardForm.get('latitude')?.invalid && wardForm.get('latitude')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('latitude')?.hasError('min') || wardForm.get('latitude')?.hasError('max')\">\r\n                      Latitude must be between -90 and 90\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"longitude\"\r\n                      formControlName=\"longitude\"\r\n                      placeholder=\"Enter longitude\"\r\n                      step=\"0.000001\"\r\n                      [class.is-invalid]=\"wardForm.get('longitude')?.invalid && wardForm.get('longitude')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('longitude')?.hasError('min') || wardForm.get('longitude')?.hasError('max')\">\r\n                      Longitude must be between -180 and 180\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Executive Officer -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"executiveOfficer\" class=\"form-label\">Executive Officer</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"executiveOfficer\"\r\n                      formControlName=\"executiveOfficer\"\r\n                      placeholder=\"Enter executive officer name\"\r\n                      [class.is-invalid]=\"wardForm.get('executiveOfficer')?.invalid && wardForm.get('executiveOfficer')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('executiveOfficer')?.hasError('maxlength')\">\r\n                      Executive officer name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Status -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"isActive\" class=\"form-label\">Status</label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"isActive\"\r\n                      formControlName=\"isActive\">\r\n                      <option [value]=\"true\">Active</option>\r\n                      <option [value]=\"false\">Inactive</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <!-- Description -->\r\n                  <div class=\"col-12\">\r\n                    <label for=\"description\" class=\"form-label\">Description</label>\r\n                    <textarea \r\n                      class=\"form-control\" \r\n                      id=\"description\"\r\n                      formControlName=\"description\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Enter ward description\"\r\n                      [class.is-invalid]=\"wardForm.get('description')?.invalid && wardForm.get('description')?.touched\"></textarea>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"wardForm.get('description')?.hasError('maxlength')\">\r\n                      Description must not exceed 500 characters\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Form Actions -->\r\n                <div class=\"row mt-4\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"d-flex gap-2\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary\"\r\n                        [disabled]=\"wardForm.invalid || isLoading\">\r\n                        <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                        <i *ngIf=\"!isLoading\" class=\"bi bi-check-circle me-1\"></i>\r\n                        {{ isEditMode ? 'Update Ward' : 'Create Ward' }}\r\n                      </button>\r\n                      <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-outline-secondary\"\r\n                        (click)=\"goBack()\">\r\n                        <i class=\"bi bi-x-circle me-1\"></i>\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Help Panel -->\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Help & Guidelines\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Required Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Ward Name</li>\r\n                <li>• Headquarters</li>\r\n                <li>• Region</li>\r\n                <li>• District</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Optional Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Population</li>\r\n                <li>• Area (km²)</li>\r\n                <li>• Coordinates</li>\r\n                <li>• Executive Officer</li>\r\n                <li>• Description</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Tips</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Select region first to filter districts</li>\r\n                <li>• Use precise coordinates for mapping</li>\r\n                <li>• Keep descriptions concise and informative</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .ward-form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n      color: #495057;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n\r\n    .btn {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .spinner-border-sm {\r\n      width: 1rem;\r\n      height: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class WardFormComponent implements OnInit {\r\n  wardForm: FormGroup;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  wardId: string | null = null;\r\n  \r\n  regions: Region[] = [];\r\n  districts: District[] = [];\r\n  filteredDistricts: District[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private wardService: WardService,\r\n    private districtService: DistrictService,\r\n    private regionService: RegionService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.wardForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\r\n      regionId: [null, [Validators.required]],\r\n      districtId: [null, [Validators.required]],\r\n      population: [0, [Validators.min(0)]],\r\n      areaSqKm: [0, [Validators.min(0)]],\r\n      latitude: [0, [Validators.min(-90), Validators.max(90)]],\r\n      longitude: [0, [Validators.min(-180), Validators.max(180)]],\r\n      executiveOfficer: ['', [Validators.maxLength(100)]],\r\n      description: ['', [Validators.maxLength(500)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadRegions();\r\n    this.loadDistricts();\r\n    \r\n    // Check if we're in edit mode\r\n    this.wardId = this.route.snapshot.paramMap.get('uid');\r\n    if (this.wardId) {\r\n      this.isEditMode = true;\r\n      this.loadWard(this.wardId);\r\n    }\r\n  }\r\n\r\n  loadRegions() {\r\n    this.regionService.getAllRegions(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.regions = response.data || [];\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading regions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDistricts() {\r\n    console.log('Loading districts...');\r\n    this.districtService.getAllDistricts(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.districts = response.data || [];\r\n        this.filteredDistricts = this.districts;\r\n        console.log('Loaded districts:', this.districts);\r\n        console.log('Sample district structure:', this.districts[0]);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading districts:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadWard(uid: string) {\r\n    this.isLoading = true;\r\n    console.log('Loading ward with UID:', uid);\r\n    this.wardService.getWardByUid(uid).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        console.log('Ward API Response:', response);\r\n        if (response.status) {\r\n          const ward = response.data;\r\n          console.log('Ward data:', ward);\r\n          this.wardForm.patchValue({\r\n            name: ward.name,\r\n            headquarters: ward.headquarters,\r\n            regionId: ward.regionId,\r\n            districtId: ward.districtId,\r\n            population: ward.population,\r\n            areaSqKm: ward.areaSqKm,\r\n            latitude: ward.latitude,\r\n            longitude: ward.longitude,\r\n            executiveOfficer: ward.executiveOfficer,\r\n            description: ward.description,\r\n            isActive: ward.isActive\r\n          });\r\n          \r\n          // Filter districts based on selected region\r\n          this.onRegionChange();\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading ward:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        alert(`Error loading ward: ${error.error?.message || error.message || 'Unknown error'}`);\r\n        this.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  onRegionChange() {\r\n    const selectedRegionId = this.wardForm.get('regionId')?.value;\r\n    console.log('Region changed to:', selectedRegionId);\r\n    \r\n    if (selectedRegionId) {\r\n      // Find the selected region to get its UID\r\n      const selectedRegion = this.regions.find(r => r.id === Number(selectedRegionId));\r\n      console.log('Selected region:', selectedRegion);\r\n      \r\n      if (selectedRegion) {\r\n        // Load districts for this specific region using the API\r\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\r\n          next: (response: any) => {\r\n            this.filteredDistricts = response.data || [];\r\n            console.log('Loaded districts for region', selectedRegion.name, ':', this.filteredDistricts);\r\n            \r\n            // Reset district selection if current selection is not in filtered list\r\n            const currentDistrictId = this.wardForm.get('districtId')?.value;\r\n            if (currentDistrictId && !this.filteredDistricts.find(d => d.id === currentDistrictId)) {\r\n              this.wardForm.patchValue({ districtId: null });\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            console.error('Error loading districts for region:', error);\r\n            this.filteredDistricts = [];\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // No region selected, show all districts\r\n      this.filteredDistricts = this.districts;\r\n      console.log('No region selected, showing all districts:', this.filteredDistricts);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.wardForm.valid) {\r\n      this.isLoading = true;\r\n      const formData = this.wardForm.value;\r\n      \r\n      if (this.isEditMode && this.wardId) {\r\n        // Update existing ward\r\n        const updateRequest: UpdateWardRequest = {\r\n          name: formData.name,\r\n          headquarters: formData.headquarters,\r\n          districtId: formData.districtId,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          executiveOfficer: formData.executiveOfficer,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.wardService.updateWard(this.wardId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              alert('Ward updated successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error updating ward:', error);\r\n            alert(`Error updating ward: ${error.error?.message || error.message || 'Unknown error'}`);\r\n          }\r\n        });\r\n      } else {\r\n        // Create new ward\r\n        const createRequest: CreateWardRequest = {\r\n          name: formData.name,\r\n          headquarters: formData.headquarters,\r\n          districtId: formData.districtId,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          executiveOfficer: formData.executiveOfficer,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.wardService.createWard(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              alert('Ward created successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error creating ward:', error);\r\n            alert(`Error creating ward: ${error.error?.message || error.message || 'Unknown error'}`);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // Mark all fields as touched to show validation errors\r\n      Object.keys(this.wardForm.controls).forEach(key => {\r\n        this.wardForm.get(key)?.markAsTouched();\r\n      });\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/wards']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}