{"ast":null,"code":"// Helper functions for Parliament\nexport class ParliamentHelper {\n  static getStatusBadgeClass(parliament) {\n    if (parliament.isCurrent) {\n      return 'bg-primary';\n    } else if (parliament.inSession) {\n      return 'bg-success';\n    } else if (parliament.hasEnded) {\n      return 'bg-secondary';\n    } else if (parliament.hasStarted) {\n      return 'bg-warning';\n    } else {\n      return 'bg-info';\n    }\n  }\n  static getStatusText(parliament) {\n    if (parliament.isCurrent) {\n      return 'Current';\n    } else if (parliament.inSession) {\n      return 'In Session';\n    } else if (parliament.hasEnded) {\n      return 'Ended';\n    } else if (parliament.hasStarted) {\n      return 'Active';\n    } else {\n      return 'Upcoming';\n    }\n  }\n  static getDurationText(parliament) {\n    if (parliament.durationInYears) {\n      return `${parliament.durationInYears} year${parliament.durationInYears > 1 ? 's' : ''}`;\n    }\n    return 'N/A';\n  }\n  static isDateInPast(dateString) {\n    return new Date(dateString) < new Date();\n  }\n  static isDateInFuture(dateString) {\n    return new Date(dateString) > new Date();\n  }\n  static formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n  static getDateRangeText(parliament) {\n    const startDate = this.formatDate(parliament.startDate);\n    const endDate = this.formatDate(parliament.endDate);\n    return `${startDate} - ${endDate}`;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}