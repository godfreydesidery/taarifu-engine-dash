{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/village.service\";\nimport * as i3 from \"../../../core/services/ward.service\";\nimport * as i4 from \"../../../core/services/district.service\";\nimport * as i5 from \"../../../core/services/region.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nfunction VillageFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Village name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Village name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Headquarters is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Headquarters must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(region_r1.name);\n  }\n}\nfunction VillageFormComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Region is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const district_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(district_r2.name);\n  }\n}\nfunction VillageFormComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" District is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_option_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ward_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ward_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ward_r3.name);\n  }\n}\nfunction VillageFormComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Ward is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Population must be a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Area must be a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Latitude must be between -90 and 90 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Longitude must be between -180 and 180 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Executive officer name must not exceed 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_div_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵtext(1, \" Description must not exceed 500 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VillageFormComponent_span_108_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 58);\n  }\n}\nfunction VillageFormComponent_i_109_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 59);\n  }\n}\nexport class VillageFormComponent {\n  constructor(fb, villageService, wardService, districtService, regionService, route, router) {\n    this.fb = fb;\n    this.villageService = villageService;\n    this.wardService = wardService;\n    this.districtService = districtService;\n    this.regionService = regionService;\n    this.route = route;\n    this.router = router;\n    this.isEditMode = false;\n    this.isLoading = false;\n    this.villageId = null;\n    this.regions = [];\n    this.districts = [];\n    this.wards = [];\n    this.filteredDistricts = [];\n    this.filteredWards = [];\n    this.villageForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\n      regionId: [null, [Validators.required]],\n      districtId: [null, [Validators.required]],\n      wardId: [null, [Validators.required]],\n      population: [0, [Validators.min(0)]],\n      areaSqKm: [0, [Validators.min(0)]],\n      latitude: [0, [Validators.min(-90), Validators.max(90)]],\n      longitude: [0, [Validators.min(-180), Validators.max(180)]],\n      executiveOfficer: ['', [Validators.maxLength(100)]],\n      description: ['', [Validators.maxLength(500)]],\n      isActive: [true]\n    });\n  }\n  ngOnInit() {\n    this.loadRegions();\n    this.loadDistricts();\n    this.loadWards();\n    // Check if we're in edit mode\n    this.villageId = this.route.snapshot.paramMap.get('uid');\n    if (this.villageId) {\n      this.isEditMode = true;\n      this.loadVillage(this.villageId);\n    }\n  }\n  loadRegions() {\n    this.regionService.getAllRegions(0, 1000).subscribe({\n      next: response => {\n        this.regions = response.data || [];\n      },\n      error: error => {\n        console.error('Error loading regions:', error);\n      }\n    });\n  }\n  loadDistricts() {\n    console.log('Loading districts...');\n    this.districtService.getAllDistricts(0, 1000).subscribe({\n      next: response => {\n        this.districts = response.data || [];\n        this.filteredDistricts = this.districts;\n        console.log('Loaded districts:', this.districts);\n        console.log('Sample district structure:', this.districts[0]);\n      },\n      error: error => {\n        console.error('Error loading districts:', error);\n      }\n    });\n  }\n  loadWards() {\n    console.log('Loading wards...');\n    this.wardService.getAllWards(0, 1000).subscribe({\n      next: response => {\n        this.wards = response.data || [];\n        this.filteredWards = this.wards;\n        console.log('Loaded wards:', this.wards);\n        console.log('Sample ward structure:', this.wards[0]);\n      },\n      error: error => {\n        console.error('Error loading wards:', error);\n      }\n    });\n  }\n  loadVillage(uid) {\n    this.isLoading = true;\n    console.log('Loading village with UID:', uid);\n    this.villageService.getVillageByUid(uid).subscribe({\n      next: response => {\n        this.isLoading = false;\n        console.log('Village API Response:', response);\n        if (response.status) {\n          const village = response.data;\n          console.log('Village data:', village);\n          this.villageForm.patchValue({\n            name: village.name,\n            headquarters: village.headquarters,\n            regionId: village.regionId,\n            districtId: village.districtId,\n            wardId: village.wardId,\n            population: village.population,\n            areaSqKm: village.areaSqKm,\n            latitude: village.latitude,\n            longitude: village.longitude,\n            executiveOfficer: village.executiveOfficer,\n            description: village.description,\n            isActive: village.isActive\n          });\n          // Filter districts and wards based on selected values\n          this.onRegionChange();\n          this.onDistrictChange();\n        }\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error('Error loading village:', error);\n        console.error('Error status:', error.status);\n        console.error('Error details:', error.error);\n        alert(`Error loading village: ${error.error?.message || error.message || 'Unknown error'}`);\n        this.goBack();\n      }\n    });\n  }\n  onRegionChange() {\n    const selectedRegionId = this.villageForm.get('regionId')?.value;\n    console.log('Region changed to:', selectedRegionId);\n    if (selectedRegionId) {\n      // Find the selected region to get its UID\n      const selectedRegion = this.regions.find(r => r.id === Number(selectedRegionId));\n      console.log('Selected region:', selectedRegion);\n      if (selectedRegion) {\n        // Load districts for this specific region using the API\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\n          next: response => {\n            this.filteredDistricts = response.data || [];\n            console.log('Loaded districts for region', selectedRegion.name, ':', this.filteredDistricts);\n            // Reset district and ward selections if current selections are not in filtered lists\n            const currentDistrictId = this.villageForm.get('districtId')?.value;\n            if (currentDistrictId && !this.filteredDistricts.find(d => d.id === currentDistrictId)) {\n              this.villageForm.patchValue({\n                districtId: null,\n                wardId: null\n              });\n            }\n            // Update wards based on new district selection\n            this.onDistrictChange();\n          },\n          error: error => {\n            console.error('Error loading districts for region:', error);\n            this.filteredDistricts = [];\n          }\n        });\n      }\n    } else {\n      // No region selected, show all districts\n      this.filteredDistricts = this.districts;\n      console.log('No region selected, showing all districts:', this.filteredDistricts);\n    }\n  }\n  onDistrictChange() {\n    const selectedDistrictId = this.villageForm.get('districtId')?.value;\n    console.log('District changed to:', selectedDistrictId);\n    if (selectedDistrictId) {\n      // Find the selected district to get its UID\n      const selectedDistrict = this.filteredDistricts.find(d => d.id === Number(selectedDistrictId));\n      console.log('Selected district:', selectedDistrict);\n      if (selectedDistrict) {\n        // Load wards for this specific district using the API\n        this.wardService.getWardsByDistrictUid(selectedDistrict.uid, 0, 1000).subscribe({\n          next: response => {\n            this.filteredWards = response.data || [];\n            console.log('Loaded wards for district', selectedDistrict.name, ':', this.filteredWards);\n            // Reset ward selection if current selection is not in filtered list\n            const currentWardId = this.villageForm.get('wardId')?.value;\n            if (currentWardId && !this.filteredWards.find(w => w.id === currentWardId)) {\n              this.villageForm.patchValue({\n                wardId: null\n              });\n            }\n          },\n          error: error => {\n            console.error('Error loading wards for district:', error);\n            this.filteredWards = [];\n          }\n        });\n      }\n    } else {\n      // No district selected, show all wards\n      this.filteredWards = this.wards;\n      console.log('No district selected, showing all wards:', this.filteredWards);\n    }\n  }\n  onSubmit() {\n    if (this.villageForm.valid) {\n      this.isLoading = true;\n      const formData = this.villageForm.value;\n      if (this.isEditMode && this.villageId) {\n        // Update existing village\n        const updateRequest = {\n          name: formData.name,\n          headquarters: formData.headquarters,\n          wardId: formData.wardId,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          executiveOfficer: formData.executiveOfficer,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.villageService.updateVillage(this.villageId, updateRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              alert('Village updated successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error updating village:', error);\n            alert(`Error updating village: ${error.error?.message || error.message || 'Unknown error'}`);\n          }\n        });\n      } else {\n        // Create new village\n        const createRequest = {\n          name: formData.name,\n          headquarters: formData.headquarters,\n          wardId: formData.wardId,\n          population: formData.population,\n          areaSqKm: formData.areaSqKm,\n          latitude: formData.latitude,\n          longitude: formData.longitude,\n          executiveOfficer: formData.executiveOfficer,\n          description: formData.description,\n          isActive: formData.isActive\n        };\n        this.villageService.createVillage(createRequest).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              alert('Village created successfully!');\n              this.goBack();\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Error creating village:', error);\n            alert(`Error creating village: ${error.error?.message || error.message || 'Unknown error'}`);\n          }\n        });\n      }\n    } else {\n      // Mark all fields as touched to show validation errors\n      Object.keys(this.villageForm.controls).forEach(key => {\n        this.villageForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n  goBack() {\n    this.router.navigate(['/villages']);\n  }\n  static {\n    this.ɵfac = function VillageFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VillageFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.VillageService), i0.ɵɵdirectiveInject(i3.WardService), i0.ɵɵdirectiveInject(i4.DistrictService), i0.ɵɵdirectiveInject(i5.RegionService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i6.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VillageFormComponent,\n      selectors: [[\"app-village-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 158,\n      vars: 47,\n      consts: [[1, \"village-form-container\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"h3\", \"mb-1\"], [1, \"text-muted\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", \"bi-arrow-left\", \"me-1\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\", \"mb-0\"], [1, \"bi\", \"bi-house-door\", \"me-2\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"name\", 1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter village name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"headquarters\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"headquarters\", \"formControlName\", \"headquarters\", \"placeholder\", \"Enter headquarters\", 1, \"form-control\"], [1, \"col-md-4\"], [\"for\", \"regionId\", 1, \"form-label\"], [\"id\", \"regionId\", \"formControlName\", \"regionId\", 1, \"form-select\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"districtId\", 1, \"form-label\"], [\"id\", \"districtId\", \"formControlName\", \"districtId\", 1, \"form-select\", 3, \"change\"], [\"for\", \"wardId\", 1, \"form-label\"], [\"id\", \"wardId\", \"formControlName\", \"wardId\", 1, \"form-select\"], [\"for\", \"population\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"population\", \"formControlName\", \"population\", \"placeholder\", \"Enter population\", \"min\", \"0\", 1, \"form-control\"], [\"for\", \"areaSqKm\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"areaSqKm\", \"formControlName\", \"areaSqKm\", \"placeholder\", \"Enter area in square kilometers\", \"min\", \"0\", \"step\", \"0.1\", 1, \"form-control\"], [\"for\", \"latitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"formControlName\", \"latitude\", \"placeholder\", \"Enter latitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"longitude\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"formControlName\", \"longitude\", \"placeholder\", \"Enter longitude\", \"step\", \"0.000001\", 1, \"form-control\"], [\"for\", \"executiveOfficer\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"executiveOfficer\", \"formControlName\", \"executiveOfficer\", \"placeholder\", \"Enter executive officer name\", 1, \"form-control\"], [\"for\", \"isActive\", 1, \"form-label\"], [\"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"form-select\"], [3, \"value\"], [1, \"col-12\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter village description\", 1, \"form-control\"], [1, \"row\", \"mt-4\"], [1, \"d-flex\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"bi bi-check-circle me-1\", 4, \"ngIf\"], [1, \"bi\", \"bi-x-circle\", \"me-1\"], [1, \"col-lg-4\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"list-unstyled\", \"small\", \"text-muted\"], [1, \"mt-3\"], [1, \"invalid-feedback\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"]],\n      template: function VillageFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function VillageFormComponent_Template_button_click_7_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelement(8, \"i\", 5);\n          i0.ɵɵtext(9, \" Back to Villages \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"h5\", 10);\n          i0.ɵɵelement(15, \"i\", 11);\n          i0.ɵɵtext(16, \" Village Information \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function VillageFormComponent_Template_form_ngSubmit_18_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(19, \"div\", 14)(20, \"div\", 15)(21, \"label\", 16);\n          i0.ɵɵtext(22, \"Village Name \");\n          i0.ɵɵelementStart(23, \"span\", 17);\n          i0.ɵɵtext(24, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"input\", 18);\n          i0.ɵɵtemplate(26, VillageFormComponent_div_26_Template, 2, 0, \"div\", 19)(27, VillageFormComponent_div_27_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 20);\n          i0.ɵɵtext(30, \"Headquarters \");\n          i0.ɵɵelementStart(31, \"span\", 17);\n          i0.ɵɵtext(32, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(33, \"input\", 21);\n          i0.ɵɵtemplate(34, VillageFormComponent_div_34_Template, 2, 0, \"div\", 19)(35, VillageFormComponent_div_35_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 22)(37, \"label\", 23);\n          i0.ɵɵtext(38, \"Region \");\n          i0.ɵɵelementStart(39, \"span\", 17);\n          i0.ɵɵtext(40, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"select\", 24);\n          i0.ɵɵlistener(\"change\", function VillageFormComponent_Template_select_change_41_listener() {\n            return ctx.onRegionChange();\n          });\n          i0.ɵɵelementStart(42, \"option\", 25);\n          i0.ɵɵtext(43, \"Select a region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(44, VillageFormComponent_option_44_Template, 2, 2, \"option\", 26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(45, VillageFormComponent_div_45_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"div\", 22)(47, \"label\", 27);\n          i0.ɵɵtext(48, \"District \");\n          i0.ɵɵelementStart(49, \"span\", 17);\n          i0.ɵɵtext(50, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(51, \"select\", 28);\n          i0.ɵɵlistener(\"change\", function VillageFormComponent_Template_select_change_51_listener() {\n            return ctx.onDistrictChange();\n          });\n          i0.ɵɵelementStart(52, \"option\", 25);\n          i0.ɵɵtext(53, \"Select a district\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(54, VillageFormComponent_option_54_Template, 2, 2, \"option\", 26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(55, VillageFormComponent_div_55_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"div\", 22)(57, \"label\", 29);\n          i0.ɵɵtext(58, \"Ward \");\n          i0.ɵɵelementStart(59, \"span\", 17);\n          i0.ɵɵtext(60, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(61, \"select\", 30)(62, \"option\", 25);\n          i0.ɵɵtext(63, \"Select a ward\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(64, VillageFormComponent_option_64_Template, 2, 2, \"option\", 26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(65, VillageFormComponent_div_65_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(66, \"div\", 15)(67, \"label\", 31);\n          i0.ɵɵtext(68, \"Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(69, \"input\", 32);\n          i0.ɵɵtemplate(70, VillageFormComponent_div_70_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"div\", 15)(72, \"label\", 33);\n          i0.ɵɵtext(73, \"Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(74, \"input\", 34);\n          i0.ɵɵtemplate(75, VillageFormComponent_div_75_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"div\", 15)(77, \"label\", 35);\n          i0.ɵɵtext(78, \"Latitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(79, \"input\", 36);\n          i0.ɵɵtemplate(80, VillageFormComponent_div_80_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"div\", 15)(82, \"label\", 37);\n          i0.ɵɵtext(83, \"Longitude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(84, \"input\", 38);\n          i0.ɵɵtemplate(85, VillageFormComponent_div_85_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"div\", 15)(87, \"label\", 39);\n          i0.ɵɵtext(88, \"Executive Officer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(89, \"input\", 40);\n          i0.ɵɵtemplate(90, VillageFormComponent_div_90_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(91, \"div\", 15)(92, \"label\", 41);\n          i0.ɵɵtext(93, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(94, \"select\", 42)(95, \"option\", 43);\n          i0.ɵɵtext(96, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(97, \"option\", 43);\n          i0.ɵɵtext(98, \"Inactive\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(99, \"div\", 44)(100, \"label\", 45);\n          i0.ɵɵtext(101, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(102, \"textarea\", 46);\n          i0.ɵɵtemplate(103, VillageFormComponent_div_103_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(104, \"div\", 47)(105, \"div\", 44)(106, \"div\", 48)(107, \"button\", 49);\n          i0.ɵɵtemplate(108, VillageFormComponent_span_108_Template, 1, 0, \"span\", 50)(109, VillageFormComponent_i_109_Template, 1, 0, \"i\", 51);\n          i0.ɵɵtext(110);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(111, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function VillageFormComponent_Template_button_click_111_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelement(112, \"i\", 52);\n          i0.ɵɵtext(113, \" Cancel \");\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(114, \"div\", 53)(115, \"div\", 8)(116, \"div\", 9)(117, \"h6\", 10);\n          i0.ɵɵelement(118, \"i\", 54);\n          i0.ɵɵtext(119, \" Help & Guidelines \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(120, \"div\", 12)(121, \"h6\");\n          i0.ɵɵtext(122, \"Required Fields\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(123, \"ul\", 55)(124, \"li\");\n          i0.ɵɵtext(125, \"\\u2022 Village Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(126, \"li\");\n          i0.ɵɵtext(127, \"\\u2022 Headquarters\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(128, \"li\");\n          i0.ɵɵtext(129, \"\\u2022 Region\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(130, \"li\");\n          i0.ɵɵtext(131, \"\\u2022 District\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(132, \"li\");\n          i0.ɵɵtext(133, \"\\u2022 Ward\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(134, \"h6\", 56);\n          i0.ɵɵtext(135, \"Optional Fields\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(136, \"ul\", 55)(137, \"li\");\n          i0.ɵɵtext(138, \"\\u2022 Population\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(139, \"li\");\n          i0.ɵɵtext(140, \"\\u2022 Area (km\\u00B2)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(141, \"li\");\n          i0.ɵɵtext(142, \"\\u2022 Coordinates\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(143, \"li\");\n          i0.ɵɵtext(144, \"\\u2022 Executive Officer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(145, \"li\");\n          i0.ɵɵtext(146, \"\\u2022 Description\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(147, \"h6\", 56);\n          i0.ɵɵtext(148, \"Tips\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(149, \"ul\", 55)(150, \"li\");\n          i0.ɵɵtext(151, \"\\u2022 Select region first to filter districts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(152, \"li\");\n          i0.ɵɵtext(153, \"\\u2022 Select district to filter wards\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(154, \"li\");\n          i0.ɵɵtext(155, \"\\u2022 Use precise coordinates for mapping\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(156, \"li\");\n          i0.ɵɵtext(157, \"\\u2022 Keep descriptions concise and informative\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_11_0;\n          let tmp_12_0;\n          let tmp_14_0;\n          let tmp_15_0;\n          let tmp_17_0;\n          let tmp_18_0;\n          let tmp_19_0;\n          let tmp_20_0;\n          let tmp_21_0;\n          let tmp_22_0;\n          let tmp_23_0;\n          let tmp_24_0;\n          let tmp_25_0;\n          let tmp_26_0;\n          let tmp_27_0;\n          let tmp_30_0;\n          let tmp_31_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Village\" : \"Create New Village\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update village information\" : \"Add a new village to the system\");\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"formGroup\", ctx.villageForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.villageForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.villageForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.villageForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.villageForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_6_0 = ctx.villageForm.get(\"headquarters\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.villageForm.get(\"headquarters\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.villageForm.get(\"headquarters\")) == null ? null : tmp_7_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.villageForm.get(\"headquarters\")) == null ? null : tmp_8_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_9_0 = ctx.villageForm.get(\"regionId\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.villageForm.get(\"regionId\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx.villageForm.get(\"regionId\")) == null ? null : tmp_11_0.hasError(\"required\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_12_0 = ctx.villageForm.get(\"districtId\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.villageForm.get(\"districtId\")) == null ? null : tmp_12_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredDistricts);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.villageForm.get(\"districtId\")) == null ? null : tmp_14_0.hasError(\"required\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_15_0 = ctx.villageForm.get(\"wardId\")) == null ? null : tmp_15_0.invalid) && ((tmp_15_0 = ctx.villageForm.get(\"wardId\")) == null ? null : tmp_15_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredWards);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_17_0 = ctx.villageForm.get(\"wardId\")) == null ? null : tmp_17_0.hasError(\"required\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_18_0 = ctx.villageForm.get(\"population\")) == null ? null : tmp_18_0.invalid) && ((tmp_18_0 = ctx.villageForm.get(\"population\")) == null ? null : tmp_18_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_19_0 = ctx.villageForm.get(\"population\")) == null ? null : tmp_19_0.hasError(\"min\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_20_0 = ctx.villageForm.get(\"areaSqKm\")) == null ? null : tmp_20_0.invalid) && ((tmp_20_0 = ctx.villageForm.get(\"areaSqKm\")) == null ? null : tmp_20_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_21_0 = ctx.villageForm.get(\"areaSqKm\")) == null ? null : tmp_21_0.hasError(\"min\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_22_0 = ctx.villageForm.get(\"latitude\")) == null ? null : tmp_22_0.invalid) && ((tmp_22_0 = ctx.villageForm.get(\"latitude\")) == null ? null : tmp_22_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_23_0 = ctx.villageForm.get(\"latitude\")) == null ? null : tmp_23_0.hasError(\"min\")) || ((tmp_23_0 = ctx.villageForm.get(\"latitude\")) == null ? null : tmp_23_0.hasError(\"max\")));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_24_0 = ctx.villageForm.get(\"longitude\")) == null ? null : tmp_24_0.invalid) && ((tmp_24_0 = ctx.villageForm.get(\"longitude\")) == null ? null : tmp_24_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_25_0 = ctx.villageForm.get(\"longitude\")) == null ? null : tmp_25_0.hasError(\"min\")) || ((tmp_25_0 = ctx.villageForm.get(\"longitude\")) == null ? null : tmp_25_0.hasError(\"max\")));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_26_0 = ctx.villageForm.get(\"executiveOfficer\")) == null ? null : tmp_26_0.invalid) && ((tmp_26_0 = ctx.villageForm.get(\"executiveOfficer\")) == null ? null : tmp_26_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_27_0 = ctx.villageForm.get(\"executiveOfficer\")) == null ? null : tmp_27_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_30_0 = ctx.villageForm.get(\"description\")) == null ? null : tmp_30_0.invalid) && ((tmp_30_0 = ctx.villageForm.get(\"description\")) == null ? null : tmp_30_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_31_0 = ctx.villageForm.get(\"description\")) == null ? null : tmp_31_0.hasError(\"maxlength\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.villageForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update Village\" : \"Create Village\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i7.NgForOf, i7.NgIf, RouterModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".village-form-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #dee2e6;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  color: #495057;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #dc3545 !important;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.spinner-border-sm[_ngcontent-%COMP%] {\\n  width: 1rem;\\n  height: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvdmlsbGFnZXMvdmlsbGFnZS1mb3JtL3ZpbGxhZ2UtZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FBQU47O0FBR0k7RUFDRSxZQUFBO0VBQ0EsbURBQUE7QUFBTjs7QUFHSTtFQUNFLHlCQUFBO0VBQ0EsZ0NBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUFOOztBQUdJO0VBQ0UseUJBQUE7QUFBTjs7QUFHSTtFQUNFLGdCQUFBO0FBQU47O0FBR0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFOIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgLnZpbGxhZ2UtZm9ybS1jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgICB9XG5cbiAgICAuY2FyZCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgfVxuXG4gICAgLmNhcmQtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZTJlNjtcbiAgICB9XG5cbiAgICAuZm9ybS1sYWJlbCB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgY29sb3I6ICM0OTUwNTc7XG4gICAgfVxuXG4gICAgLnRleHQtZGFuZ2VyIHtcbiAgICAgIGNvbG9yOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLmJ0biB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgIH1cblxuICAgIC5zcGlubmVyLWJvcmRlci1zbSB7XG4gICAgICB3aWR0aDogMXJlbTtcbiAgICAgIGhlaWdodDogMXJlbTtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","RouterModule","Validators","ReactiveFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r1","id","ɵɵadvance","ɵɵtextInterpolate","name","district_r2","ward_r3","ɵɵelement","VillageFormComponent","constructor","fb","villageService","wardService","districtService","regionService","route","router","isEditMode","isLoading","villageId","regions","districts","wards","filteredDistricts","filteredWards","villageForm","group","required","maxLength","headquarters","regionId","districtId","wardId","population","min","areaSqKm","latitude","max","longitude","executiveOfficer","description","isActive","ngOnInit","loadRegions","loadDistricts","loadWards","snapshot","paramMap","get","loadVillage","getAllRegions","subscribe","next","response","data","error","console","log","getAllDistricts","getAllWards","uid","getVillageByUid","status","village","patchValue","onRegionChange","onDistrictChange","alert","message","goBack","selectedRegionId","value","selectedRegion","find","r","Number","getDistrictsByRegionUid","currentDistrictId","d","selectedDistrictId","selectedDistrict","getWardsByDistrictUid","currentWardId","w","onSubmit","valid","formData","updateRequest","updateVillage","createRequest","createVillage","Object","keys","controls","forEach","key","markAsTouched","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","VillageService","i3","WardService","i4","DistrictService","i5","RegionService","i6","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","VillageFormComponent_Template","rf","ctx","ɵɵlistener","VillageFormComponent_Template_button_click_7_listener","VillageFormComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","VillageFormComponent_div_26_Template","VillageFormComponent_div_27_Template","VillageFormComponent_div_34_Template","VillageFormComponent_div_35_Template","VillageFormComponent_Template_select_change_41_listener","VillageFormComponent_option_44_Template","VillageFormComponent_div_45_Template","VillageFormComponent_Template_select_change_51_listener","VillageFormComponent_option_54_Template","VillageFormComponent_div_55_Template","VillageFormComponent_option_64_Template","VillageFormComponent_div_65_Template","VillageFormComponent_div_70_Template","VillageFormComponent_div_75_Template","VillageFormComponent_div_80_Template","VillageFormComponent_div_85_Template","VillageFormComponent_div_90_Template","VillageFormComponent_div_103_Template","VillageFormComponent_span_108_Template","VillageFormComponent_i_109_Template","VillageFormComponent_Template_button_click_111_listener","ɵɵclassProp","tmp_3_0","invalid","touched","tmp_4_0","hasError","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_11_0","tmp_12_0","tmp_14_0","tmp_15_0","tmp_17_0","tmp_18_0","tmp_19_0","tmp_20_0","tmp_21_0","tmp_22_0","tmp_23_0","tmp_24_0","tmp_25_0","tmp_26_0","tmp_27_0","tmp_30_0","tmp_31_0","ɵɵtextInterpolate1","i7","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\villages\\village-form\\village-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { VillageService } from '../../../core/services/village.service';\r\nimport { WardService } from '../../../core/services/ward.service';\r\nimport { DistrictService } from '../../../core/services/district.service';\r\nimport { RegionService } from '../../../core/services/region.service';\r\nimport { Village, CreateVillageRequest, UpdateVillageRequest } from '../../../core/models/village.model';\r\nimport { Ward } from '../../../core/models/ward.model';\r\nimport { District } from '../../../core/models/district.model';\r\nimport { Region } from '../../../core/models/region.model';\r\n\r\n@Component({\r\n  selector: 'app-village-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"village-form-container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">{{ isEditMode ? 'Edit Village' : 'Create New Village' }}</h1>\r\n          <p class=\"text-muted\">{{ isEditMode ? 'Update village information' : 'Add a new village to the system' }}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left me-1\"></i>\r\n          Back to Villages\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-house-door me-2\"></i>\r\n                Village Information\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form [formGroup]=\"villageForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row g-3\">\r\n                  <!-- Basic Information -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"name\" class=\"form-label\">Village Name <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"name\"\r\n                      formControlName=\"name\"\r\n                      placeholder=\"Enter village name\"\r\n                      [class.is-invalid]=\"villageForm.get('name')?.invalid && villageForm.get('name')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('name')?.hasError('required')\">\r\n                      Village name is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('name')?.hasError('maxlength')\">\r\n                      Village name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"headquarters\" class=\"form-label\">Headquarters <span class=\"text-danger\">*</span></label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"headquarters\"\r\n                      formControlName=\"headquarters\"\r\n                      placeholder=\"Enter headquarters\"\r\n                      [class.is-invalid]=\"villageForm.get('headquarters')?.invalid && villageForm.get('headquarters')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('headquarters')?.hasError('required')\">\r\n                      Headquarters is required\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('headquarters')?.hasError('maxlength')\">\r\n                      Headquarters must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Location Information -->\r\n                  <div class=\"col-md-4\">\r\n                    <label for=\"regionId\" class=\"form-label\">Region <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"regionId\"\r\n                      formControlName=\"regionId\"\r\n                      (change)=\"onRegionChange()\"\r\n                      [class.is-invalid]=\"villageForm.get('regionId')?.invalid && villageForm.get('regionId')?.touched\">\r\n                      <option value=\"\">Select a region</option>\r\n                      <option *ngFor=\"let region of regions\" [value]=\"region.id\">{{ region.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('regionId')?.hasError('required')\">\r\n                      Region is required\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <label for=\"districtId\" class=\"form-label\">District <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"districtId\"\r\n                      formControlName=\"districtId\"\r\n                      (change)=\"onDistrictChange()\"\r\n                      [class.is-invalid]=\"villageForm.get('districtId')?.invalid && villageForm.get('districtId')?.touched\">\r\n                      <option value=\"\">Select a district</option>\r\n                      <option *ngFor=\"let district of filteredDistricts\" [value]=\"district.id\">{{ district.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('districtId')?.hasError('required')\">\r\n                      District is required\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <label for=\"wardId\" class=\"form-label\">Ward <span class=\"text-danger\">*</span></label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"wardId\"\r\n                      formControlName=\"wardId\"\r\n                      [class.is-invalid]=\"villageForm.get('wardId')?.invalid && villageForm.get('wardId')?.touched\">\r\n                      <option value=\"\">Select a ward</option>\r\n                      <option *ngFor=\"let ward of filteredWards\" [value]=\"ward.id\">{{ ward.name }}</option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('wardId')?.hasError('required')\">\r\n                      Ward is required\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Population and Area -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"population\" class=\"form-label\">Population</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"population\"\r\n                      formControlName=\"population\"\r\n                      placeholder=\"Enter population\"\r\n                      min=\"0\"\r\n                      [class.is-invalid]=\"villageForm.get('population')?.invalid && villageForm.get('population')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('population')?.hasError('min')\">\r\n                      Population must be a positive number\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"areaSqKm\" class=\"form-label\">Area (km²)</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"areaSqKm\"\r\n                      formControlName=\"areaSqKm\"\r\n                      placeholder=\"Enter area in square kilometers\"\r\n                      min=\"0\"\r\n                      step=\"0.1\"\r\n                      [class.is-invalid]=\"villageForm.get('areaSqKm')?.invalid && villageForm.get('areaSqKm')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('areaSqKm')?.hasError('min')\">\r\n                      Area must be a positive number\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Coordinates -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"latitude\" class=\"form-label\">Latitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"latitude\"\r\n                      formControlName=\"latitude\"\r\n                      placeholder=\"Enter latitude\"\r\n                      step=\"0.000001\"\r\n                      [class.is-invalid]=\"villageForm.get('latitude')?.invalid && villageForm.get('latitude')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('latitude')?.hasError('min') || villageForm.get('latitude')?.hasError('max')\">\r\n                      Latitude must be between -90 and 90\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"longitude\" class=\"form-label\">Longitude</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      class=\"form-control\" \r\n                      id=\"longitude\"\r\n                      formControlName=\"longitude\"\r\n                      placeholder=\"Enter longitude\"\r\n                      step=\"0.000001\"\r\n                      [class.is-invalid]=\"villageForm.get('longitude')?.invalid && villageForm.get('longitude')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('longitude')?.hasError('min') || villageForm.get('longitude')?.hasError('max')\">\r\n                      Longitude must be between -180 and 180\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Executive Officer -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"executiveOfficer\" class=\"form-label\">Executive Officer</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"executiveOfficer\"\r\n                      formControlName=\"executiveOfficer\"\r\n                      placeholder=\"Enter executive officer name\"\r\n                      [class.is-invalid]=\"villageForm.get('executiveOfficer')?.invalid && villageForm.get('executiveOfficer')?.touched\">\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('executiveOfficer')?.hasError('maxlength')\">\r\n                      Executive officer name must not exceed 100 characters\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Status -->\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"isActive\" class=\"form-label\">Status</label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"isActive\"\r\n                      formControlName=\"isActive\">\r\n                      <option [value]=\"true\">Active</option>\r\n                      <option [value]=\"false\">Inactive</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <!-- Description -->\r\n                  <div class=\"col-12\">\r\n                    <label for=\"description\" class=\"form-label\">Description</label>\r\n                    <textarea \r\n                      class=\"form-control\" \r\n                      id=\"description\"\r\n                      formControlName=\"description\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Enter village description\"\r\n                      [class.is-invalid]=\"villageForm.get('description')?.invalid && villageForm.get('description')?.touched\"></textarea>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"villageForm.get('description')?.hasError('maxlength')\">\r\n                      Description must not exceed 500 characters\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Form Actions -->\r\n                <div class=\"row mt-4\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"d-flex gap-2\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        class=\"btn btn-primary\"\r\n                        [disabled]=\"villageForm.invalid || isLoading\">\r\n                        <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                        <i *ngIf=\"!isLoading\" class=\"bi bi-check-circle me-1\"></i>\r\n                        {{ isEditMode ? 'Update Village' : 'Create Village' }}\r\n                      </button>\r\n                      <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-outline-secondary\"\r\n                        (click)=\"goBack()\">\r\n                        <i class=\"bi bi-x-circle me-1\"></i>\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Help Panel -->\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Help & Guidelines\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6>Required Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Village Name</li>\r\n                <li>• Headquarters</li>\r\n                <li>• Region</li>\r\n                <li>• District</li>\r\n                <li>• Ward</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Optional Fields</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Population</li>\r\n                <li>• Area (km²)</li>\r\n                <li>• Coordinates</li>\r\n                <li>• Executive Officer</li>\r\n                <li>• Description</li>\r\n              </ul>\r\n\r\n              <h6 class=\"mt-3\">Tips</h6>\r\n              <ul class=\"list-unstyled small text-muted\">\r\n                <li>• Select region first to filter districts</li>\r\n                <li>• Select district to filter wards</li>\r\n                <li>• Use precise coordinates for mapping</li>\r\n                <li>• Keep descriptions concise and informative</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .village-form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n\r\n    .form-label {\r\n      font-weight: 500;\r\n      color: #495057;\r\n    }\r\n\r\n    .text-danger {\r\n      color: #dc3545 !important;\r\n    }\r\n\r\n    .btn {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .spinner-border-sm {\r\n      width: 1rem;\r\n      height: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class VillageFormComponent implements OnInit {\r\n  villageForm: FormGroup;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  villageId: string | null = null;\r\n  \r\n  regions: Region[] = [];\r\n  districts: District[] = [];\r\n  wards: Ward[] = [];\r\n  filteredDistricts: District[] = [];\r\n  filteredWards: Ward[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private villageService: VillageService,\r\n    private wardService: WardService,\r\n    private districtService: DistrictService,\r\n    private regionService: RegionService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.villageForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(100)]],\r\n      headquarters: ['', [Validators.required, Validators.maxLength(100)]],\r\n      regionId: [null, [Validators.required]],\r\n      districtId: [null, [Validators.required]],\r\n      wardId: [null, [Validators.required]],\r\n      population: [0, [Validators.min(0)]],\r\n      areaSqKm: [0, [Validators.min(0)]],\r\n      latitude: [0, [Validators.min(-90), Validators.max(90)]],\r\n      longitude: [0, [Validators.min(-180), Validators.max(180)]],\r\n      executiveOfficer: ['', [Validators.maxLength(100)]],\r\n      description: ['', [Validators.maxLength(500)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadRegions();\r\n    this.loadDistricts();\r\n    this.loadWards();\r\n    \r\n    // Check if we're in edit mode\r\n    this.villageId = this.route.snapshot.paramMap.get('uid');\r\n    if (this.villageId) {\r\n      this.isEditMode = true;\r\n      this.loadVillage(this.villageId);\r\n    }\r\n  }\r\n\r\n  loadRegions() {\r\n    this.regionService.getAllRegions(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.regions = response.data || [];\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading regions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDistricts() {\r\n    console.log('Loading districts...');\r\n    this.districtService.getAllDistricts(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.districts = response.data || [];\r\n        this.filteredDistricts = this.districts;\r\n        console.log('Loaded districts:', this.districts);\r\n        console.log('Sample district structure:', this.districts[0]);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading districts:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadWards() {\r\n    console.log('Loading wards...');\r\n    this.wardService.getAllWards(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.wards = response.data || [];\r\n        this.filteredWards = this.wards;\r\n        console.log('Loaded wards:', this.wards);\r\n        console.log('Sample ward structure:', this.wards[0]);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading wards:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadVillage(uid: string) {\r\n    this.isLoading = true;\r\n    console.log('Loading village with UID:', uid);\r\n    this.villageService.getVillageByUid(uid).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        console.log('Village API Response:', response);\r\n        if (response.status) {\r\n          const village = response.data;\r\n          console.log('Village data:', village);\r\n          this.villageForm.patchValue({\r\n            name: village.name,\r\n            headquarters: village.headquarters,\r\n            regionId: village.regionId,\r\n            districtId: village.districtId,\r\n            wardId: village.wardId,\r\n            population: village.population,\r\n            areaSqKm: village.areaSqKm,\r\n            latitude: village.latitude,\r\n            longitude: village.longitude,\r\n            executiveOfficer: village.executiveOfficer,\r\n            description: village.description,\r\n            isActive: village.isActive\r\n          });\r\n          \r\n          // Filter districts and wards based on selected values\r\n          this.onRegionChange();\r\n          this.onDistrictChange();\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading village:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        alert(`Error loading village: ${error.error?.message || error.message || 'Unknown error'}`);\r\n        this.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  onRegionChange() {\r\n    const selectedRegionId = this.villageForm.get('regionId')?.value;\r\n    console.log('Region changed to:', selectedRegionId);\r\n    \r\n    if (selectedRegionId) {\r\n      // Find the selected region to get its UID\r\n      const selectedRegion = this.regions.find(r => r.id === Number(selectedRegionId));\r\n      console.log('Selected region:', selectedRegion);\r\n      \r\n      if (selectedRegion) {\r\n        // Load districts for this specific region using the API\r\n        this.districtService.getDistrictsByRegionUid(selectedRegion.uid, 0, 1000).subscribe({\r\n          next: (response: any) => {\r\n            this.filteredDistricts = response.data || [];\r\n            console.log('Loaded districts for region', selectedRegion.name, ':', this.filteredDistricts);\r\n            \r\n            // Reset district and ward selections if current selections are not in filtered lists\r\n            const currentDistrictId = this.villageForm.get('districtId')?.value;\r\n            if (currentDistrictId && !this.filteredDistricts.find(d => d.id === currentDistrictId)) {\r\n              this.villageForm.patchValue({ districtId: null, wardId: null });\r\n            }\r\n            \r\n            // Update wards based on new district selection\r\n            this.onDistrictChange();\r\n          },\r\n          error: (error: any) => {\r\n            console.error('Error loading districts for region:', error);\r\n            this.filteredDistricts = [];\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // No region selected, show all districts\r\n      this.filteredDistricts = this.districts;\r\n      console.log('No region selected, showing all districts:', this.filteredDistricts);\r\n    }\r\n  }\r\n\r\n  onDistrictChange() {\r\n    const selectedDistrictId = this.villageForm.get('districtId')?.value;\r\n    console.log('District changed to:', selectedDistrictId);\r\n    \r\n    if (selectedDistrictId) {\r\n      // Find the selected district to get its UID\r\n      const selectedDistrict = this.filteredDistricts.find(d => d.id === Number(selectedDistrictId));\r\n      console.log('Selected district:', selectedDistrict);\r\n      \r\n      if (selectedDistrict) {\r\n        // Load wards for this specific district using the API\r\n        this.wardService.getWardsByDistrictUid(selectedDistrict.uid, 0, 1000).subscribe({\r\n          next: (response: any) => {\r\n            this.filteredWards = response.data || [];\r\n            console.log('Loaded wards for district', selectedDistrict.name, ':', this.filteredWards);\r\n            \r\n            // Reset ward selection if current selection is not in filtered list\r\n            const currentWardId = this.villageForm.get('wardId')?.value;\r\n            if (currentWardId && !this.filteredWards.find(w => w.id === currentWardId)) {\r\n              this.villageForm.patchValue({ wardId: null });\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            console.error('Error loading wards for district:', error);\r\n            this.filteredWards = [];\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // No district selected, show all wards\r\n      this.filteredWards = this.wards;\r\n      console.log('No district selected, showing all wards:', this.filteredWards);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.villageForm.valid) {\r\n      this.isLoading = true;\r\n      const formData = this.villageForm.value;\r\n      \r\n      if (this.isEditMode && this.villageId) {\r\n        // Update existing village\r\n        const updateRequest: UpdateVillageRequest = {\r\n          name: formData.name,\r\n          headquarters: formData.headquarters,\r\n          wardId: formData.wardId,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          executiveOfficer: formData.executiveOfficer,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.villageService.updateVillage(this.villageId, updateRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              alert('Village updated successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error updating village:', error);\r\n            alert(`Error updating village: ${error.error?.message || error.message || 'Unknown error'}`);\r\n          }\r\n        });\r\n      } else {\r\n        // Create new village\r\n        const createRequest: CreateVillageRequest = {\r\n          name: formData.name,\r\n          headquarters: formData.headquarters,\r\n          wardId: formData.wardId,\r\n          population: formData.population,\r\n          areaSqKm: formData.areaSqKm,\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude,\r\n          executiveOfficer: formData.executiveOfficer,\r\n          description: formData.description,\r\n          isActive: formData.isActive\r\n        };\r\n\r\n        this.villageService.createVillage(createRequest).subscribe({\r\n          next: (response) => {\r\n            this.isLoading = false;\r\n            if (response.status) {\r\n              alert('Village created successfully!');\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            this.isLoading = false;\r\n            console.error('Error creating village:', error);\r\n            alert(`Error creating village: ${error.error?.message || error.message || 'Unknown error'}`);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // Mark all fields as touched to show validation errors\r\n      Object.keys(this.villageForm.controls).forEach(key => {\r\n        this.villageForm.get(key)?.markAsTouched();\r\n      });\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/villages']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}