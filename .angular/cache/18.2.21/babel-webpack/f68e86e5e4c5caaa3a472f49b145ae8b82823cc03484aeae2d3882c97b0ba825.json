{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nlet WardListComponent = class WardListComponent {\n  constructor(wardService, districtService, regionService, authService, router) {\n    this.wardService = wardService;\n    this.districtService = districtService;\n    this.regionService = regionService;\n    this.authService = authService;\n    this.router = router;\n    this.wards = [];\n    // Search properties\n    this.searchTerm = '';\n    // Pagination properties\n    this.currentPage = 0;\n    this.pageSize = 10;\n    this.totalElements = 0;\n    this.totalPages = 0;\n    // Sorting properties\n    this.sortBy = 'name';\n    this.sortDir = 'asc';\n    // Loading state\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    console.log('WardListComponent initialized');\n    const token = this.authService.getToken();\n    const isAuthenticated = this.authService.isAuthenticated();\n    const currentUser = this.authService.getCurrentUser();\n    console.log('Auth Debug Info:');\n    console.log('- Token exists:', !!token);\n    console.log('- Token value:', token ? token.substring(0, 50) + '...' : 'No token');\n    console.log('- Is authenticated:', isAuthenticated);\n    console.log('- Current user:', currentUser);\n    if (!isAuthenticated) {\n      console.error('User not authenticated! Redirecting to login...');\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.loadRegions();\n    this.loadDistricts();\n    this.loadWards();\n  }\n  loadRegions() {\n    this.regionService.getAllRegions(0, 1000).subscribe({\n      next: response => {\n        this.regions = response.data || [];\n      },\n      error: error => {\n        console.error('Error loading regions:', error);\n      }\n    });\n  }\n  loadDistricts() {\n    this.districtService.getAllDistricts(0, 1000).subscribe({\n      next: response => {\n        this.districts = response.data || [];\n        this.filteredDistricts = this.districts;\n      },\n      error: error => {\n        console.error('Error loading districts:', error);\n      }\n    });\n  }\n  loadWards() {\n    this.isLoading = true;\n    const observable = this.searchTerm ? this.wardService.searchWards(this.searchTerm, this.currentPage, this.pageSize, this.sortBy, this.sortDir) : this.wardService.getAllWards(this.currentPage, this.pageSize, this.sortBy, this.sortDir);\n    observable.subscribe({\n      next: response => {\n        this.isLoading = false;\n        console.log('Wards API Response:', response);\n        this.wards = response.data || [];\n        this.totalElements = response.totalElements || 0;\n        this.totalPages = response.totalPages || 0;\n        console.log('Loaded wards:', this.wards.length);\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error('Error loading wards:', error);\n        console.error('Error status:', error.status);\n        console.error('Error details:', error.error);\n        if (error.status === 403) {\n          console.error('403 Forbidden - Authentication/Authorization issue');\n          console.error('Current token:', this.authService.getToken());\n          alert('Access denied. Please log in again.');\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        } else if (error.status === 401) {\n          console.error('401 Unauthorized - Token expired or invalid');\n          alert('Session expired. Please log in again.');\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        } else {\n          alert(`Error loading wards: ${error.error?.message || error.message || 'Unknown error'}`);\n        }\n      }\n    });\n  }\n  onSearch() {\n    this.currentPage = 0;\n    this.loadWards();\n  }\n  onSort(field, event) {\n    event.preventDefault();\n    if (this.sortBy === field) {\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortBy = field;\n      this.sortDir = 'asc';\n    }\n    this.currentPage = 0;\n    this.loadWards();\n  }\n  onPageChange(page, event) {\n    event.preventDefault();\n    if (page >= 0 && page < this.totalPages) {\n      this.currentPage = page;\n      this.loadWards();\n    }\n  }\n  onPageSizeChange() {\n    this.currentPage = 0;\n    this.loadWards();\n  }\n  onDelete(ward) {\n    if (confirm(`Are you sure you want to delete the ward \"${ward.name}\"?`)) {\n      this.wardService.deleteWard(ward.uid).subscribe({\n        next: response => {\n          if (response.status) {\n            alert('Ward deleted successfully!');\n            this.loadWards();\n          }\n        },\n        error: error => {\n          console.error('Error deleting ward:', error);\n          alert(`Error deleting ward: ${error.error?.message || error.message || 'Unknown error'}`);\n        }\n      });\n    }\n  }\n  getPageNumbers() {\n    const pages = [];\n    const start = Math.max(0, this.currentPage - 2);\n    const end = Math.min(this.totalPages - 1, this.currentPage + 2);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n};\nWardListComponent = __decorate([Component({\n  selector: 'app-ward-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  template: `\n    <div class=\"ward-list-container\">\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 class=\"h3 mb-1\">Wards Management</h1>\n          <p class=\"text-muted\">Manage all wards in the system</p>\n        </div>\n        <a routerLink=\"/wards/create\" class=\"btn btn-primary\">\n          <i class=\"bi bi-plus-circle me-1\"></i>\n          Add New Ward\n        </a>\n      </div>\n\n      <!-- Search Section -->\n      <div class=\"card mb-4\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group\">\n                <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  placeholder=\"Search wards...\" \n                  [(ngModel)]=\"searchTerm\" \n                  (input)=\"onSearch()\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Wards Table -->\n      <div class=\"card\">\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\n          <h5 class=\"card-title mb-0\">\n            <i class=\"bi bi-building me-2\"></i>\n            Wards ({{ totalElements }} total)\n          </h5>\n          <div class=\"d-flex align-items-center\">\n            <label for=\"pageSize\" class=\"form-label me-2 mb-0\">Show:</label>\n            <select class=\"form-select form-select-sm\" id=\"pageSize\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\" style=\"width: auto;\">\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"card-body p-0\">\n          <div *ngIf=\"isLoading\" class=\"text-center p-4\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <p class=\"mt-2 text-muted\">Loading wards...</p>\n          </div>\n\n          <div *ngIf=\"!isLoading && wards.length === 0\" class=\"text-center p-4\">\n            <i class=\"bi bi-building text-muted\" style=\"font-size: 3rem;\"></i>\n            <h5 class=\"mt-3 text-muted\">No wards found</h5>\n            <p class=\"text-muted\">Try adjusting your search criteria or add a new ward.</p>\n            <a routerLink=\"/wards/create\" class=\"btn btn-primary\">\n              <i class=\"bi bi-plus-circle me-1\"></i>\n              Add First Ward\n            </a>\n          </div>\n\n          <div *ngIf=\"!isLoading && wards.length > 0\" class=\"table-responsive\">\n            <table class=\"table table-hover mb-0\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th>\n                    <a href=\"#\" (click)=\"onSort('code', $event)\" class=\"text-decoration-none\">\n                      Code\n                      <i class=\"bi bi-arrow-down-up ms-1\" *ngIf=\"sortBy !== 'code'\"></i>\n                      <i class=\"bi bi-arrow-up\" *ngIf=\"sortBy === 'code' && sortDir === 'asc'\"></i>\n                      <i class=\"bi bi-arrow-down\" *ngIf=\"sortBy === 'code' && sortDir === 'desc'\"></i>\n                    </a>\n                  </th>\n                  <th>\n                    <a href=\"#\" (click)=\"onSort('name', $event)\" class=\"text-decoration-none\">\n                      Name\n                      <i class=\"bi bi-arrow-down-up ms-1\" *ngIf=\"sortBy !== 'name'\"></i>\n                      <i class=\"bi bi-arrow-up\" *ngIf=\"sortBy === 'name' && sortDir === 'asc'\"></i>\n                      <i class=\"bi bi-arrow-down\" *ngIf=\"sortBy === 'name' && sortDir === 'desc'\"></i>\n                    </a>\n                  </th>\n                  <th>Headquarters</th>\n                  <th>District</th>\n                  <th>Region</th>\n                  <th>Population</th>\n                  <th>Area (kmÂ²)</th>\n                  <th>Status</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let ward of wards\">\n                  <td>\n                    <span class=\"badge bg-secondary\">{{ ward.code }}</span>\n                  </td>\n                  <td>\n                    <div>\n                      <strong>{{ ward.name }}</strong>\n                      <br>\n                      <small class=\"text-muted\">{{ ward.executiveOfficer }}</small>\n                    </div>\n                  </td>\n                  <td>{{ ward.headquarters }}</td>\n                  <td>\n                    <span class=\"badge bg-info\">{{ ward.districtName }}</span>\n                  </td>\n                  <td>\n                    <span class=\"badge bg-primary\">{{ ward.regionName }}</span>\n                  </td>\n                  <td>{{ ward.population | number }}</td>\n                  <td>{{ ward.areaSqKm | number:'1.1-1' }}</td>\n                  <td>\n                    <span class=\"badge\" [class.bg-success]=\"ward.isActive\" [class.bg-danger]=\"!ward.isActive\">\n                      {{ ward.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\n                      <a [routerLink]=\"['/wards/edit', ward.uid]\" class=\"btn btn-outline-primary\" title=\"Edit\">\n                        <i class=\"bi bi-pencil\"></i>\n                      </a>\n                      <button class=\"btn btn-outline-danger\" (click)=\"onDelete(ward)\" title=\"Delete\">\n                        <i class=\"bi bi-trash\"></i>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- Pagination -->\n        <div *ngIf=\"!isLoading && totalPages > 1\" class=\"card-footer\">\n          <nav aria-label=\"Wards pagination\">\n            <ul class=\"pagination pagination-sm justify-content-center mb-0\">\n              <li class=\"page-item\" [class.disabled]=\"currentPage === 0\">\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(currentPage - 1, $event)\">Previous</a>\n              </li>\n              \n              <li *ngFor=\"let page of getPageNumbers()\" class=\"page-item\" [class.active]=\"page === currentPage\">\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(page, $event)\">{{ page + 1 }}</a>\n              </li>\n              \n              <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages - 1\">\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(currentPage + 1, $event)\">Next</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .ward-list-container {\n      max-width: 1400px;\n      margin: 0 auto;\n      padding: 0 1rem;\n    }\n\n    .table th {\n      border-top: none;\n      font-weight: 600;\n      color: #495057;\n    }\n\n    .table td {\n      vertical-align: middle;\n    }\n\n    .badge {\n      font-size: 0.75rem;\n    }\n\n    .btn-group-sm .btn {\n      padding: 0.25rem 0.5rem;\n    }\n\n    .pagination {\n      margin-bottom: 0;\n    }\n\n    .card {\n      border: none;\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n    }\n\n    .card-header {\n      background-color: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n  `]\n})], WardListComponent);\nexport { WardListComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","FormsModule","WardListComponent","constructor","wardService","districtService","regionService","authService","router","wards","searchTerm","currentPage","pageSize","totalElements","totalPages","sortBy","sortDir","isLoading","ngOnInit","console","log","token","getToken","isAuthenticated","currentUser","getCurrentUser","substring","error","navigate","loadRegions","loadDistricts","loadWards","getAllRegions","subscribe","next","response","regions","data","getAllDistricts","districts","filteredDistricts","observable","searchWards","getAllWards","length","status","alert","logout","message","onSearch","onSort","field","event","preventDefault","onPageChange","page","onPageSizeChange","onDelete","ward","confirm","name","deleteWard","uid","getPageNumbers","pages","start","Math","max","end","min","i","push","__decorate","selector","standalone","imports","template","styles"],"sources":["D:\\My_Works\\Taarifu_Project\\taarifu-engine-dash\\src\\app\\features\\wards\\ward-list\\ward-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WardService } from '../../../core/services/ward.service';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Ward } from '../../../core/models/ward.model';\r\n\r\n@Component({\r\n  selector: 'app-ward-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"ward-list-container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h1 class=\"h3 mb-1\">Wards Management</h1>\r\n          <p class=\"text-muted\">Manage all wards in the system</p>\r\n        </div>\r\n        <a routerLink=\"/wards/create\" class=\"btn btn-primary\">\r\n          <i class=\"bi bi-plus-circle me-1\"></i>\r\n          Add New Ward\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Search Section -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"input-group\">\r\n                <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Search wards...\" \r\n                  [(ngModel)]=\"searchTerm\" \r\n                  (input)=\"onSearch()\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Wards Table -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"card-title mb-0\">\r\n            <i class=\"bi bi-building me-2\"></i>\r\n            Wards ({{ totalElements }} total)\r\n          </h5>\r\n          <div class=\"d-flex align-items-center\">\r\n            <label for=\"pageSize\" class=\"form-label me-2 mb-0\">Show:</label>\r\n            <select class=\"form-select form-select-sm\" id=\"pageSize\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\" style=\"width: auto;\">\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body p-0\">\r\n          <div *ngIf=\"isLoading\" class=\"text-center p-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p class=\"mt-2 text-muted\">Loading wards...</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && wards.length === 0\" class=\"text-center p-4\">\r\n            <i class=\"bi bi-building text-muted\" style=\"font-size: 3rem;\"></i>\r\n            <h5 class=\"mt-3 text-muted\">No wards found</h5>\r\n            <p class=\"text-muted\">Try adjusting your search criteria or add a new ward.</p>\r\n            <a routerLink=\"/wards/create\" class=\"btn btn-primary\">\r\n              <i class=\"bi bi-plus-circle me-1\"></i>\r\n              Add First Ward\r\n            </a>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isLoading && wards.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover mb-0\">\r\n              <thead class=\"table-light\">\r\n                <tr>\r\n                  <th>\r\n                    <a href=\"#\" (click)=\"onSort('code', $event)\" class=\"text-decoration-none\">\r\n                      Code\r\n                      <i class=\"bi bi-arrow-down-up ms-1\" *ngIf=\"sortBy !== 'code'\"></i>\r\n                      <i class=\"bi bi-arrow-up\" *ngIf=\"sortBy === 'code' && sortDir === 'asc'\"></i>\r\n                      <i class=\"bi bi-arrow-down\" *ngIf=\"sortBy === 'code' && sortDir === 'desc'\"></i>\r\n                    </a>\r\n                  </th>\r\n                  <th>\r\n                    <a href=\"#\" (click)=\"onSort('name', $event)\" class=\"text-decoration-none\">\r\n                      Name\r\n                      <i class=\"bi bi-arrow-down-up ms-1\" *ngIf=\"sortBy !== 'name'\"></i>\r\n                      <i class=\"bi bi-arrow-up\" *ngIf=\"sortBy === 'name' && sortDir === 'asc'\"></i>\r\n                      <i class=\"bi bi-arrow-down\" *ngIf=\"sortBy === 'name' && sortDir === 'desc'\"></i>\r\n                    </a>\r\n                  </th>\r\n                  <th>Headquarters</th>\r\n                  <th>District</th>\r\n                  <th>Region</th>\r\n                  <th>Population</th>\r\n                  <th>Area (kmÂ²)</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let ward of wards\">\r\n                  <td>\r\n                    <span class=\"badge bg-secondary\">{{ ward.code }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <div>\r\n                      <strong>{{ ward.name }}</strong>\r\n                      <br>\r\n                      <small class=\"text-muted\">{{ ward.executiveOfficer }}</small>\r\n                    </div>\r\n                  </td>\r\n                  <td>{{ ward.headquarters }}</td>\r\n                  <td>\r\n                    <span class=\"badge bg-info\">{{ ward.districtName }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge bg-primary\">{{ ward.regionName }}</span>\r\n                  </td>\r\n                  <td>{{ ward.population | number }}</td>\r\n                  <td>{{ ward.areaSqKm | number:'1.1-1' }}</td>\r\n                  <td>\r\n                    <span class=\"badge\" [class.bg-success]=\"ward.isActive\" [class.bg-danger]=\"!ward.isActive\">\r\n                      {{ ward.isActive ? 'Active' : 'Inactive' }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <a [routerLink]=\"['/wards/edit', ward.uid]\" class=\"btn btn-outline-primary\" title=\"Edit\">\r\n                        <i class=\"bi bi-pencil\"></i>\r\n                      </a>\r\n                      <button class=\"btn btn-outline-danger\" (click)=\"onDelete(ward)\" title=\"Delete\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div *ngIf=\"!isLoading && totalPages > 1\" class=\"card-footer\">\r\n          <nav aria-label=\"Wards pagination\">\r\n            <ul class=\"pagination pagination-sm justify-content-center mb-0\">\r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === 0\">\r\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(currentPage - 1, $event)\">Previous</a>\r\n              </li>\r\n              \r\n              <li *ngFor=\"let page of getPageNumbers()\" class=\"page-item\" [class.active]=\"page === currentPage\">\r\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(page, $event)\">{{ page + 1 }}</a>\r\n              </li>\r\n              \r\n              <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages - 1\">\r\n                <a class=\"page-link\" href=\"#\" (click)=\"onPageChange(currentPage + 1, $event)\">Next</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .ward-list-container {\r\n      max-width: 1400px;\r\n      margin: 0 auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .table th {\r\n      border-top: none;\r\n      font-weight: 600;\r\n      color: #495057;\r\n    }\r\n\r\n    .table td {\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .badge {\r\n      font-size: 0.75rem;\r\n    }\r\n\r\n    .btn-group-sm .btn {\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n\r\n    .pagination {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .card {\r\n      border: none;\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    }\r\n\r\n    .card-header {\r\n      background-color: #f8f9fa;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n  `]\r\n})\r\nexport class WardListComponent implements OnInit {\r\n  wards: Ward[] = [];\r\n  \r\n  // Search properties\r\n  searchTerm = '';\r\n  \r\n  // Pagination properties\r\n  currentPage = 0;\r\n  pageSize = 10;\r\n  totalElements = 0;\r\n  totalPages = 0;\r\n  \r\n  // Sorting properties\r\n  sortBy = 'name';\r\n  sortDir: 'asc' | 'desc' = 'asc';\r\n  \r\n  // Loading state\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private wardService: WardService,\r\n    private districtService: DistrictService,\r\n    private regionService: RegionService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log('WardListComponent initialized');\r\n    const token = this.authService.getToken();\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    const currentUser = this.authService.getCurrentUser();\r\n    console.log('Auth Debug Info:');\r\n    console.log('- Token exists:', !!token);\r\n    console.log('- Token value:', token ? token.substring(0, 50) + '...' : 'No token');\r\n    console.log('- Is authenticated:', isAuthenticated);\r\n    console.log('- Current user:', currentUser);\r\n    \r\n    if (!isAuthenticated) {\r\n      console.error('User not authenticated! Redirecting to login...');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n    \r\n    this.loadRegions();\r\n    this.loadDistricts();\r\n    this.loadWards();\r\n  }\r\n\r\n  loadRegions() {\r\n    this.regionService.getAllRegions(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.regions = response.data || [];\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading regions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDistricts() {\r\n    this.districtService.getAllDistricts(0, 1000).subscribe({\r\n      next: (response: any) => {\r\n        this.districts = response.data || [];\r\n        this.filteredDistricts = this.districts;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading districts:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadWards() {\r\n    this.isLoading = true;\r\n    \r\n    const observable = this.searchTerm \r\n      ? this.wardService.searchWards(this.searchTerm, this.currentPage, this.pageSize, this.sortBy, this.sortDir)\r\n      : this.wardService.getAllWards(this.currentPage, this.pageSize, this.sortBy, this.sortDir);\r\n\r\n    observable.subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        console.log('Wards API Response:', response);\r\n        this.wards = response.data || [];\r\n        this.totalElements = response.totalElements || 0;\r\n        this.totalPages = response.totalPages || 0;\r\n        console.log('Loaded wards:', this.wards.length);\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error loading wards:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error details:', error.error);\r\n        \r\n        if (error.status === 403) {\r\n          console.error('403 Forbidden - Authentication/Authorization issue');\r\n          console.error('Current token:', this.authService.getToken());\r\n          alert('Access denied. Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else if (error.status === 401) {\r\n          console.error('401 Unauthorized - Token expired or invalid');\r\n          alert('Session expired. Please log in again.');\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          alert(`Error loading wards: ${error.error?.message || error.message || 'Unknown error'}`);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    this.currentPage = 0;\r\n    this.loadWards();\r\n  }\r\n\r\n\r\n  onSort(field: string, event: Event) {\r\n    event.preventDefault();\r\n    \r\n    if (this.sortBy === field) {\r\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortBy = field;\r\n      this.sortDir = 'asc';\r\n    }\r\n    \r\n    this.currentPage = 0;\r\n    this.loadWards();\r\n  }\r\n\r\n  onPageChange(page: number, event: Event) {\r\n    event.preventDefault();\r\n    if (page >= 0 && page < this.totalPages) {\r\n      this.currentPage = page;\r\n      this.loadWards();\r\n    }\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 0;\r\n    this.loadWards();\r\n  }\r\n\r\n  onDelete(ward: Ward) {\r\n    if (confirm(`Are you sure you want to delete the ward \"${ward.name}\"?`)) {\r\n      this.wardService.deleteWard(ward.uid).subscribe({\r\n        next: (response) => {\r\n          if (response.status) {\r\n            alert('Ward deleted successfully!');\r\n            this.loadWards();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting ward:', error);\r\n          alert(`Error deleting ward: ${error.error?.message || error.message || 'Unknown error'}`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pages: number[] = [];\r\n    const start = Math.max(0, this.currentPage - 2);\r\n    const end = Math.min(this.totalPages - 1, this.currentPage + 2);\r\n    \r\n    for (let i = start; i <= end; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}