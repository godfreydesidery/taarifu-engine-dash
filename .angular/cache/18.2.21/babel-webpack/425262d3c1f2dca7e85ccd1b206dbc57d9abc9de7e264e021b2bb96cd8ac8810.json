{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 22);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.hidePassword = true;\n      this.isLoading = false;\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n      });\n      // Clear any existing invalid tokens on login page load\n      console.log('Login page loaded - clearing any existing tokens');\n      this.authService.logout();\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.isLoading = true;\n        const credentials = {\n          usernameOrEmail: this.loginForm.value.username,\n          password: this.loginForm.value.password,\n          rememberMe: false\n        };\n        this.authService.login(credentials).subscribe({\n          next: response => {\n            this.isLoading = false;\n            if (response.status) {\n              this.router.navigate(['/dashboard']);\n            }\n          },\n          error: error => {\n            this.isLoading = false;\n            console.error('Login error:', error);\n            // Show error message (you can use Bootstrap toast or alert)\n            alert('Login failed. Please check your credentials.');\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 30,\n        vars: 15,\n        consts: [[1, \"login-container\"], [1, \"card\", \"login-card\"], [1, \"card-header\", \"text-center\"], [1, \"card-title\", \"mb-1\"], [1, \"text-muted\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [1, \"input-group\"], [1, \"input-group-text\"], [1, \"bi\", \"bi-person\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"autocomplete\", \"username\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"bi\", \"bi-lock\"], [\"id\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-control\", 3, \"type\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\", 3);\n            i0.ɵɵtext(4, \"Taarifu Engine Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"small\", 4);\n            i0.ɵɵtext(6, \"Administration Portal\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n            i0.ɵɵtext(11, \"Username\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 9)(13, \"span\", 10);\n            i0.ɵɵelement(14, \"i\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 12);\n            i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 13);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 14);\n            i0.ɵɵtext(19, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 9)(21, \"span\", 10);\n            i0.ɵɵelement(22, \"i\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(23, \"input\", 16);\n            i0.ɵɵelementStart(24, \"button\", 17);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n              return ctx.hidePassword = !ctx.hidePassword;\n            });\n            i0.ɵɵelement(25, \"i\", 18);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(26, LoginComponent_div_26_Template, 2, 0, \"div\", 13);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"button\", 19);\n            i0.ɵɵtemplate(28, LoginComponent_span_28_Template, 1, 0, \"span\", 20);\n            i0.ɵɵtext(29);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            let tmp_3_0;\n            let tmp_7_0;\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.hasError(\"required\"));\n            i0.ɵɵadvance(7);\n            i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n            i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"bi-eye\", !ctx.hidePassword)(\"bi-eye-slash\", ctx.hidePassword);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_7_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:100vh;background-color:#e9ecef;padding:1rem}.login-card[_ngcontent-%COMP%]{width:100%;max-width:400px;box-shadow:0 8px 32px #0000001a;border:none;border-radius:1rem}.card-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#007bff,#0056b3);color:#fff;border-radius:1rem 1rem 0 0!important;border:none}.card-title[_ngcontent-%COMP%]{color:#fff;font-weight:600}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}